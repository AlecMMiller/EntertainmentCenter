

Microchip Technology PIC PRO Macro Assembler V1.42 build -159332390 
                                                                                               Tue Jul 25 13:28:43 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text33,local,class=CODE,merge=1,delta=2
    19                           	psect	text34,local,class=CODE,merge=1,delta=2
    20                           	psect	text36,local,class=CODE,merge=1,delta=2
    21                           	psect	text37,local,class=CODE,merge=1,delta=2
    22                           	psect	text38,local,class=CODE,merge=1,delta=2
    23                           	psect	text39,local,class=CODE,merge=1,delta=2
    24                           	psect	text44,local,class=CODE,merge=1,delta=2
    25                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text54,local,class=CODE,merge=1,delta=2
    31                           	psect	text55,local,class=CODE,merge=1,delta=2
    32                           	psect	text60,local,class=CODE,merge=1,delta=2
    33                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text114,local,class=CODE,merge=1,delta=2
    49                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	pa_nodes0,global,class=CODE,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.42
    54                           ; Generated 13/04/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F18855 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  001C                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0110                     	;# 
   142  0110                     	;# 
   143  0111                     	;# 
   144  0112                     	;# 
   145  0112                     	;# 
   146  0113                     	;# 
   147  0114                     	;# 
   148  0114                     	;# 
   149  0115                     	;# 
   150  0116                     	;# 
   151  0116                     	;# 
   152  0117                     	;# 
   153  0119                     	;# 
   154  0119                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011A                     	;# 
   158  011A                     	;# 
   159  011B                     	;# 
   160  011B                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011C                     	;# 
   165  011C                     	;# 
   166  011C                     	;# 
   167  011D                     	;# 
   168  011D                     	;# 
   169  011D                     	;# 
   170  011E                     	;# 
   171  011E                     	;# 
   172  011E                     	;# 
   173  011F                     	;# 
   174  011F                     	;# 
   175  011F                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  018E                     	;# 
   181  018F                     	;# 
   182  0190                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0196                     	;# 
   186  0197                     	;# 
   187  0198                     	;# 
   188  0199                     	;# 
   189  019A                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  020C                     	;# 
   193  020C                     	;# 
   194  020D                     	;# 
   195  020E                     	;# 
   196  020F                     	;# 
   197  020F                     	;# 
   198  0210                     	;# 
   199  0210                     	;# 
   200  0211                     	;# 
   201  0211                     	;# 
   202  0212                     	;# 
   203  0212                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0217                     	;# 
   212  0218                     	;# 
   213  0218                     	;# 
   214  0219                     	;# 
   215  021A                     	;# 
   216  021B                     	;# 
   217  021B                     	;# 
   218  021C                     	;# 
   219  021C                     	;# 
   220  021D                     	;# 
   221  021D                     	;# 
   222  021E                     	;# 
   223  021F                     	;# 
   224  028C                     	;# 
   225  028C                     	;# 
   226  028D                     	;# 
   227  028D                     	;# 
   228  028E                     	;# 
   229  028F                     	;# 
   230  0290                     	;# 
   231  0290                     	;# 
   232  0291                     	;# 
   233  0292                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0293                     	;# 
   237  0294                     	;# 
   238  0295                     	;# 
   239  0296                     	;# 
   240  0296                     	;# 
   241  0297                     	;# 
   242  0298                     	;# 
   243  0298                     	;# 
   244  0299                     	;# 
   245  0299                     	;# 
   246  029A                     	;# 
   247  029B                     	;# 
   248  029C                     	;# 
   249  029C                     	;# 
   250  029D                     	;# 
   251  030C                     	;# 
   252  030C                     	;# 
   253  030D                     	;# 
   254  030E                     	;# 
   255  030F                     	;# 
   256  0310                     	;# 
   257  0310                     	;# 
   258  0311                     	;# 
   259  0312                     	;# 
   260  0313                     	;# 
   261  0314                     	;# 
   262  0314                     	;# 
   263  0315                     	;# 
   264  0316                     	;# 
   265  0317                     	;# 
   266  0318                     	;# 
   267  0318                     	;# 
   268  0319                     	;# 
   269  031A                     	;# 
   270  031B                     	;# 
   271  031C                     	;# 
   272  031C                     	;# 
   273  031D                     	;# 
   274  031E                     	;# 
   275  031F                     	;# 
   276  038C                     	;# 
   277  038D                     	;# 
   278  038E                     	;# 
   279  0390                     	;# 
   280  0391                     	;# 
   281  0392                     	;# 
   282  040C                     	;# 
   283  040D                     	;# 
   284  040E                     	;# 
   285  040F                     	;# 
   286  0410                     	;# 
   287  0411                     	;# 
   288  0416                     	;# 
   289  0416                     	;# 
   290  0417                     	;# 
   291  0418                     	;# 
   292  0418                     	;# 
   293  0419                     	;# 
   294  041A                     	;# 
   295  041A                     	;# 
   296  041B                     	;# 
   297  041C                     	;# 
   298  041C                     	;# 
   299  041D                     	;# 
   300  041E                     	;# 
   301  041F                     	;# 
   302  048C                     	;# 
   303  048C                     	;# 
   304  048D                     	;# 
   305  048E                     	;# 
   306  048F                     	;# 
   307  048F                     	;# 
   308  0490                     	;# 
   309  0491                     	;# 
   310  0492                     	;# 
   311  0492                     	;# 
   312  0493                     	;# 
   313  0494                     	;# 
   314  0495                     	;# 
   315  0495                     	;# 
   316  0496                     	;# 
   317  0497                     	;# 
   318  0498                     	;# 
   319  0499                     	;# 
   320  049A                     	;# 
   321  049B                     	;# 
   322  049C                     	;# 
   323  049D                     	;# 
   324  050C                     	;# 
   325  050C                     	;# 
   326  050D                     	;# 
   327  050E                     	;# 
   328  050F                     	;# 
   329  050F                     	;# 
   330  0510                     	;# 
   331  0511                     	;# 
   332  0512                     	;# 
   333  0512                     	;# 
   334  0513                     	;# 
   335  0514                     	;# 
   336  0515                     	;# 
   337  0515                     	;# 
   338  0516                     	;# 
   339  0517                     	;# 
   340  0518                     	;# 
   341  0519                     	;# 
   342  051A                     	;# 
   343  051B                     	;# 
   344  051C                     	;# 
   345  051D                     	;# 
   346  058C                     	;# 
   347  058C                     	;# 
   348  058D                     	;# 
   349  058E                     	;# 
   350  058F                     	;# 
   351  058F                     	;# 
   352  0590                     	;# 
   353  0591                     	;# 
   354  0592                     	;# 
   355  0593                     	;# 
   356  060C                     	;# 
   357  060D                     	;# 
   358  060E                     	;# 
   359  060F                     	;# 
   360  0610                     	;# 
   361  0611                     	;# 
   362  0612                     	;# 
   363  0613                     	;# 
   364  0614                     	;# 
   365  0616                     	;# 
   366  0617                     	;# 
   367  0618                     	;# 
   368  0619                     	;# 
   369  061A                     	;# 
   370  061B                     	;# 
   371  061C                     	;# 
   372  061D                     	;# 
   373  061E                     	;# 
   374  068C                     	;# 
   375  068D                     	;# 
   376  068E                     	;# 
   377  068F                     	;# 
   378  0690                     	;# 
   379  0691                     	;# 
   380  0692                     	;# 
   381  0693                     	;# 
   382  0694                     	;# 
   383  070C                     	;# 
   384  070D                     	;# 
   385  070E                     	;# 
   386  070F                     	;# 
   387  0710                     	;# 
   388  0711                     	;# 
   389  0712                     	;# 
   390  0713                     	;# 
   391  0714                     	;# 
   392  0716                     	;# 
   393  0717                     	;# 
   394  0718                     	;# 
   395  0719                     	;# 
   396  071A                     	;# 
   397  071B                     	;# 
   398  071C                     	;# 
   399  071D                     	;# 
   400  071E                     	;# 
   401  0796                     	;# 
   402  0797                     	;# 
   403  0798                     	;# 
   404  0799                     	;# 
   405  079A                     	;# 
   406  079B                     	;# 
   407  080C                     	;# 
   408  080D                     	;# 
   409  080E                     	;# 
   410  080F                     	;# 
   411  0810                     	;# 
   412  0811                     	;# 
   413  0812                     	;# 
   414  0813                     	;# 
   415  0814                     	;# 
   416  081A                     	;# 
   417  081B                     	;# 
   418  081C                     	;# 
   419  081D                     	;# 
   420  081E                     	;# 
   421  081F                     	;# 
   422  088C                     	;# 
   423  088D                     	;# 
   424  088E                     	;# 
   425  088F                     	;# 
   426  0890                     	;# 
   427  0891                     	;# 
   428  0892                     	;# 
   429  0893                     	;# 
   430  0895                     	;# 
   431  0896                     	;# 
   432  0897                     	;# 
   433  0898                     	;# 
   434  0899                     	;# 
   435  089A                     	;# 
   436  089B                     	;# 
   437  090C                     	;# 
   438  090E                     	;# 
   439  090F                     	;# 
   440  091F                     	;# 
   441  091F                     	;# 
   442  098F                     	;# 
   443  098F                     	;# 
   444  0990                     	;# 
   445  0991                     	;# 
   446  0992                     	;# 
   447  0993                     	;# 
   448  0994                     	;# 
   449  0995                     	;# 
   450  0996                     	;# 
   451  0997                     	;# 
   452  0E0F                     	;# 
   453  0E10                     	;# 
   454  0E11                     	;# 
   455  0E12                     	;# 
   456  0E13                     	;# 
   457  0E14                     	;# 
   458  0E15                     	;# 
   459  0E16                     	;# 
   460  0E17                     	;# 
   461  0E18                     	;# 
   462  0E19                     	;# 
   463  0E1A                     	;# 
   464  0E1B                     	;# 
   465  0E1C                     	;# 
   466  0E1D                     	;# 
   467  0E1E                     	;# 
   468  0E1F                     	;# 
   469  0E20                     	;# 
   470  0E21                     	;# 
   471  0E22                     	;# 
   472  0E23                     	;# 
   473  0E24                     	;# 
   474  0E25                     	;# 
   475  0E26                     	;# 
   476  0E27                     	;# 
   477  0E28                     	;# 
   478  0E29                     	;# 
   479  0E2A                     	;# 
   480  0E2B                     	;# 
   481  0E2C                     	;# 
   482  0E2D                     	;# 
   483  0E2E                     	;# 
   484  0E2F                     	;# 
   485  0E30                     	;# 
   486  0E31                     	;# 
   487  0E32                     	;# 
   488  0E33                     	;# 
   489  0E34                     	;# 
   490  0E35                     	;# 
   491  0E36                     	;# 
   492  0E37                     	;# 
   493  0E8F                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E93                     	;# 
   498  0E94                     	;# 
   499  0E95                     	;# 
   500  0E96                     	;# 
   501  0E97                     	;# 
   502  0E9C                     	;# 
   503  0E9D                     	;# 
   504  0E9E                     	;# 
   505  0EA1                     	;# 
   506  0EA2                     	;# 
   507  0EA3                     	;# 
   508  0EA4                     	;# 
   509  0EA5                     	;# 
   510  0EA9                     	;# 
   511  0EAA                     	;# 
   512  0EAB                     	;# 
   513  0EAC                     	;# 
   514  0EB1                     	;# 
   515  0EB2                     	;# 
   516  0EB3                     	;# 
   517  0EB8                     	;# 
   518  0EB9                     	;# 
   519  0EBA                     	;# 
   520  0EBB                     	;# 
   521  0EBC                     	;# 
   522  0EBD                     	;# 
   523  0EBE                     	;# 
   524  0EC3                     	;# 
   525  0EC5                     	;# 
   526  0EC6                     	;# 
   527  0EC7                     	;# 
   528  0EC8                     	;# 
   529  0EC9                     	;# 
   530  0ECA                     	;# 
   531  0ECB                     	;# 
   532  0ECC                     	;# 
   533  0F10                     	;# 
   534  0F11                     	;# 
   535  0F12                     	;# 
   536  0F13                     	;# 
   537  0F14                     	;# 
   538  0F15                     	;# 
   539  0F16                     	;# 
   540  0F17                     	;# 
   541  0F18                     	;# 
   542  0F19                     	;# 
   543  0F1A                     	;# 
   544  0F1B                     	;# 
   545  0F1C                     	;# 
   546  0F1D                     	;# 
   547  0F1E                     	;# 
   548  0F1F                     	;# 
   549  0F20                     	;# 
   550  0F21                     	;# 
   551  0F22                     	;# 
   552  0F23                     	;# 
   553  0F24                     	;# 
   554  0F25                     	;# 
   555  0F26                     	;# 
   556  0F27                     	;# 
   557  0F38                     	;# 
   558  0F39                     	;# 
   559  0F3A                     	;# 
   560  0F3B                     	;# 
   561  0F3C                     	;# 
   562  0F3D                     	;# 
   563  0F3E                     	;# 
   564  0F3F                     	;# 
   565  0F40                     	;# 
   566  0F41                     	;# 
   567  0F43                     	;# 
   568  0F44                     	;# 
   569  0F45                     	;# 
   570  0F46                     	;# 
   571  0F47                     	;# 
   572  0F48                     	;# 
   573  0F49                     	;# 
   574  0F4A                     	;# 
   575  0F4B                     	;# 
   576  0F4C                     	;# 
   577  0F4E                     	;# 
   578  0F4F                     	;# 
   579  0F50                     	;# 
   580  0F51                     	;# 
   581  0F52                     	;# 
   582  0F53                     	;# 
   583  0F54                     	;# 
   584  0F55                     	;# 
   585  0F56                     	;# 
   586  0F57                     	;# 
   587  0F65                     	;# 
   588  0F68                     	;# 
   589  0F69                     	;# 
   590  0F6A                     	;# 
   591  0F6B                     	;# 
   592  0FE4                     	;# 
   593  0FE5                     	;# 
   594  0FE6                     	;# 
   595  0FE7                     	;# 
   596  0FE8                     	;# 
   597  0FE9                     	;# 
   598  0FEA                     	;# 
   599  0FEB                     	;# 
   600  0FED                     	;# 
   601  0FEE                     	;# 
   602  0FEF                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0008                     	;# 
   612  0009                     	;# 
   613  000A                     	;# 
   614  000B                     	;# 
   615  000C                     	;# 
   616  000D                     	;# 
   617  000E                     	;# 
   618  0010                     	;# 
   619  0011                     	;# 
   620  0012                     	;# 
   621  0013                     	;# 
   622  0016                     	;# 
   623  0017                     	;# 
   624  0018                     	;# 
   625  001C                     	;# 
   626  001C                     	;# 
   627  001D                     	;# 
   628  001D                     	;# 
   629  001E                     	;# 
   630  001F                     	;# 
   631  008C                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  008E                     	;# 
   635  008E                     	;# 
   636  008F                     	;# 
   637  0090                     	;# 
   638  0090                     	;# 
   639  0091                     	;# 
   640  0093                     	;# 
   641  0094                     	;# 
   642  0095                     	;# 
   643  0096                     	;# 
   644  0097                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009C                     	;# 
   650  009D                     	;# 
   651  009E                     	;# 
   652  010C                     	;# 
   653  010D                     	;# 
   654  010E                     	;# 
   655  010E                     	;# 
   656  010F                     	;# 
   657  0110                     	;# 
   658  0110                     	;# 
   659  0111                     	;# 
   660  0112                     	;# 
   661  0112                     	;# 
   662  0113                     	;# 
   663  0114                     	;# 
   664  0114                     	;# 
   665  0115                     	;# 
   666  0116                     	;# 
   667  0116                     	;# 
   668  0117                     	;# 
   669  0119                     	;# 
   670  0119                     	;# 
   671  0119                     	;# 
   672  011A                     	;# 
   673  011A                     	;# 
   674  011A                     	;# 
   675  011B                     	;# 
   676  011B                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011C                     	;# 
   681  011C                     	;# 
   682  011C                     	;# 
   683  011D                     	;# 
   684  011D                     	;# 
   685  011D                     	;# 
   686  011E                     	;# 
   687  011E                     	;# 
   688  011E                     	;# 
   689  011F                     	;# 
   690  011F                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  018C                     	;# 
   695  018D                     	;# 
   696  018E                     	;# 
   697  018F                     	;# 
   698  0190                     	;# 
   699  0191                     	;# 
   700  0192                     	;# 
   701  0196                     	;# 
   702  0197                     	;# 
   703  0198                     	;# 
   704  0199                     	;# 
   705  019A                     	;# 
   706  019B                     	;# 
   707  019C                     	;# 
   708  020C                     	;# 
   709  020C                     	;# 
   710  020D                     	;# 
   711  020E                     	;# 
   712  020F                     	;# 
   713  020F                     	;# 
   714  0210                     	;# 
   715  0210                     	;# 
   716  0211                     	;# 
   717  0211                     	;# 
   718  0212                     	;# 
   719  0212                     	;# 
   720  0213                     	;# 
   721  0214                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0217                     	;# 
   728  0218                     	;# 
   729  0218                     	;# 
   730  0219                     	;# 
   731  021A                     	;# 
   732  021B                     	;# 
   733  021B                     	;# 
   734  021C                     	;# 
   735  021C                     	;# 
   736  021D                     	;# 
   737  021D                     	;# 
   738  021E                     	;# 
   739  021F                     	;# 
   740  028C                     	;# 
   741  028C                     	;# 
   742  028D                     	;# 
   743  028D                     	;# 
   744  028E                     	;# 
   745  028F                     	;# 
   746  0290                     	;# 
   747  0290                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0292                     	;# 
   751  0293                     	;# 
   752  0293                     	;# 
   753  0294                     	;# 
   754  0295                     	;# 
   755  0296                     	;# 
   756  0296                     	;# 
   757  0297                     	;# 
   758  0298                     	;# 
   759  0298                     	;# 
   760  0299                     	;# 
   761  0299                     	;# 
   762  029A                     	;# 
   763  029B                     	;# 
   764  029C                     	;# 
   765  029C                     	;# 
   766  029D                     	;# 
   767  030C                     	;# 
   768  030C                     	;# 
   769  030D                     	;# 
   770  030E                     	;# 
   771  030F                     	;# 
   772  0310                     	;# 
   773  0310                     	;# 
   774  0311                     	;# 
   775  0312                     	;# 
   776  0313                     	;# 
   777  0314                     	;# 
   778  0314                     	;# 
   779  0315                     	;# 
   780  0316                     	;# 
   781  0317                     	;# 
   782  0318                     	;# 
   783  0318                     	;# 
   784  0319                     	;# 
   785  031A                     	;# 
   786  031B                     	;# 
   787  031C                     	;# 
   788  031C                     	;# 
   789  031D                     	;# 
   790  031E                     	;# 
   791  031F                     	;# 
   792  038C                     	;# 
   793  038D                     	;# 
   794  038E                     	;# 
   795  0390                     	;# 
   796  0391                     	;# 
   797  0392                     	;# 
   798  040C                     	;# 
   799  040D                     	;# 
   800  040E                     	;# 
   801  040F                     	;# 
   802  0410                     	;# 
   803  0411                     	;# 
   804  0416                     	;# 
   805  0416                     	;# 
   806  0417                     	;# 
   807  0418                     	;# 
   808  0418                     	;# 
   809  0419                     	;# 
   810  041A                     	;# 
   811  041A                     	;# 
   812  041B                     	;# 
   813  041C                     	;# 
   814  041C                     	;# 
   815  041D                     	;# 
   816  041E                     	;# 
   817  041F                     	;# 
   818  048C                     	;# 
   819  048C                     	;# 
   820  048D                     	;# 
   821  048E                     	;# 
   822  048F                     	;# 
   823  048F                     	;# 
   824  0490                     	;# 
   825  0491                     	;# 
   826  0492                     	;# 
   827  0492                     	;# 
   828  0493                     	;# 
   829  0494                     	;# 
   830  0495                     	;# 
   831  0495                     	;# 
   832  0496                     	;# 
   833  0497                     	;# 
   834  0498                     	;# 
   835  0499                     	;# 
   836  049A                     	;# 
   837  049B                     	;# 
   838  049C                     	;# 
   839  049D                     	;# 
   840  050C                     	;# 
   841  050C                     	;# 
   842  050D                     	;# 
   843  050E                     	;# 
   844  050F                     	;# 
   845  050F                     	;# 
   846  0510                     	;# 
   847  0511                     	;# 
   848  0512                     	;# 
   849  0512                     	;# 
   850  0513                     	;# 
   851  0514                     	;# 
   852  0515                     	;# 
   853  0515                     	;# 
   854  0516                     	;# 
   855  0517                     	;# 
   856  0518                     	;# 
   857  0519                     	;# 
   858  051A                     	;# 
   859  051B                     	;# 
   860  051C                     	;# 
   861  051D                     	;# 
   862  058C                     	;# 
   863  058C                     	;# 
   864  058D                     	;# 
   865  058E                     	;# 
   866  058F                     	;# 
   867  058F                     	;# 
   868  0590                     	;# 
   869  0591                     	;# 
   870  0592                     	;# 
   871  0593                     	;# 
   872  060C                     	;# 
   873  060D                     	;# 
   874  060E                     	;# 
   875  060F                     	;# 
   876  0610                     	;# 
   877  0611                     	;# 
   878  0612                     	;# 
   879  0613                     	;# 
   880  0614                     	;# 
   881  0616                     	;# 
   882  0617                     	;# 
   883  0618                     	;# 
   884  0619                     	;# 
   885  061A                     	;# 
   886  061B                     	;# 
   887  061C                     	;# 
   888  061D                     	;# 
   889  061E                     	;# 
   890  068C                     	;# 
   891  068D                     	;# 
   892  068E                     	;# 
   893  068F                     	;# 
   894  0690                     	;# 
   895  0691                     	;# 
   896  0692                     	;# 
   897  0693                     	;# 
   898  0694                     	;# 
   899  070C                     	;# 
   900  070D                     	;# 
   901  070E                     	;# 
   902  070F                     	;# 
   903  0710                     	;# 
   904  0711                     	;# 
   905  0712                     	;# 
   906  0713                     	;# 
   907  0714                     	;# 
   908  0716                     	;# 
   909  0717                     	;# 
   910  0718                     	;# 
   911  0719                     	;# 
   912  071A                     	;# 
   913  071B                     	;# 
   914  071C                     	;# 
   915  071D                     	;# 
   916  071E                     	;# 
   917  0796                     	;# 
   918  0797                     	;# 
   919  0798                     	;# 
   920  0799                     	;# 
   921  079A                     	;# 
   922  079B                     	;# 
   923  080C                     	;# 
   924  080D                     	;# 
   925  080E                     	;# 
   926  080F                     	;# 
   927  0810                     	;# 
   928  0811                     	;# 
   929  0812                     	;# 
   930  0813                     	;# 
   931  0814                     	;# 
   932  081A                     	;# 
   933  081B                     	;# 
   934  081C                     	;# 
   935  081D                     	;# 
   936  081E                     	;# 
   937  081F                     	;# 
   938  088C                     	;# 
   939  088D                     	;# 
   940  088E                     	;# 
   941  088F                     	;# 
   942  0890                     	;# 
   943  0891                     	;# 
   944  0892                     	;# 
   945  0893                     	;# 
   946  0895                     	;# 
   947  0896                     	;# 
   948  0897                     	;# 
   949  0898                     	;# 
   950  0899                     	;# 
   951  089A                     	;# 
   952  089B                     	;# 
   953  090C                     	;# 
   954  090E                     	;# 
   955  090F                     	;# 
   956  091F                     	;# 
   957  091F                     	;# 
   958  098F                     	;# 
   959  098F                     	;# 
   960  0990                     	;# 
   961  0991                     	;# 
   962  0992                     	;# 
   963  0993                     	;# 
   964  0994                     	;# 
   965  0995                     	;# 
   966  0996                     	;# 
   967  0997                     	;# 
   968  0E0F                     	;# 
   969  0E10                     	;# 
   970  0E11                     	;# 
   971  0E12                     	;# 
   972  0E13                     	;# 
   973  0E14                     	;# 
   974  0E15                     	;# 
   975  0E16                     	;# 
   976  0E17                     	;# 
   977  0E18                     	;# 
   978  0E19                     	;# 
   979  0E1A                     	;# 
   980  0E1B                     	;# 
   981  0E1C                     	;# 
   982  0E1D                     	;# 
   983  0E1E                     	;# 
   984  0E1F                     	;# 
   985  0E20                     	;# 
   986  0E21                     	;# 
   987  0E22                     	;# 
   988  0E23                     	;# 
   989  0E24                     	;# 
   990  0E25                     	;# 
   991  0E26                     	;# 
   992  0E27                     	;# 
   993  0E28                     	;# 
   994  0E29                     	;# 
   995  0E2A                     	;# 
   996  0E2B                     	;# 
   997  0E2C                     	;# 
   998  0E2D                     	;# 
   999  0E2E                     	;# 
  1000  0E2F                     	;# 
  1001  0E30                     	;# 
  1002  0E31                     	;# 
  1003  0E32                     	;# 
  1004  0E33                     	;# 
  1005  0E34                     	;# 
  1006  0E35                     	;# 
  1007  0E36                     	;# 
  1008  0E37                     	;# 
  1009  0E8F                     	;# 
  1010  0E90                     	;# 
  1011  0E91                     	;# 
  1012  0E92                     	;# 
  1013  0E93                     	;# 
  1014  0E94                     	;# 
  1015  0E95                     	;# 
  1016  0E96                     	;# 
  1017  0E97                     	;# 
  1018  0E9C                     	;# 
  1019  0E9D                     	;# 
  1020  0E9E                     	;# 
  1021  0EA1                     	;# 
  1022  0EA2                     	;# 
  1023  0EA3                     	;# 
  1024  0EA4                     	;# 
  1025  0EA5                     	;# 
  1026  0EA9                     	;# 
  1027  0EAA                     	;# 
  1028  0EAB                     	;# 
  1029  0EAC                     	;# 
  1030  0EB1                     	;# 
  1031  0EB2                     	;# 
  1032  0EB3                     	;# 
  1033  0EB8                     	;# 
  1034  0EB9                     	;# 
  1035  0EBA                     	;# 
  1036  0EBB                     	;# 
  1037  0EBC                     	;# 
  1038  0EBD                     	;# 
  1039  0EBE                     	;# 
  1040  0EC3                     	;# 
  1041  0EC5                     	;# 
  1042  0EC6                     	;# 
  1043  0EC7                     	;# 
  1044  0EC8                     	;# 
  1045  0EC9                     	;# 
  1046  0ECA                     	;# 
  1047  0ECB                     	;# 
  1048  0ECC                     	;# 
  1049  0F10                     	;# 
  1050  0F11                     	;# 
  1051  0F12                     	;# 
  1052  0F13                     	;# 
  1053  0F14                     	;# 
  1054  0F15                     	;# 
  1055  0F16                     	;# 
  1056  0F17                     	;# 
  1057  0F18                     	;# 
  1058  0F19                     	;# 
  1059  0F1A                     	;# 
  1060  0F1B                     	;# 
  1061  0F1C                     	;# 
  1062  0F1D                     	;# 
  1063  0F1E                     	;# 
  1064  0F1F                     	;# 
  1065  0F20                     	;# 
  1066  0F21                     	;# 
  1067  0F22                     	;# 
  1068  0F23                     	;# 
  1069  0F24                     	;# 
  1070  0F25                     	;# 
  1071  0F26                     	;# 
  1072  0F27                     	;# 
  1073  0F38                     	;# 
  1074  0F39                     	;# 
  1075  0F3A                     	;# 
  1076  0F3B                     	;# 
  1077  0F3C                     	;# 
  1078  0F3D                     	;# 
  1079  0F3E                     	;# 
  1080  0F3F                     	;# 
  1081  0F40                     	;# 
  1082  0F41                     	;# 
  1083  0F43                     	;# 
  1084  0F44                     	;# 
  1085  0F45                     	;# 
  1086  0F46                     	;# 
  1087  0F47                     	;# 
  1088  0F48                     	;# 
  1089  0F49                     	;# 
  1090  0F4A                     	;# 
  1091  0F4B                     	;# 
  1092  0F4C                     	;# 
  1093  0F4E                     	;# 
  1094  0F4F                     	;# 
  1095  0F50                     	;# 
  1096  0F51                     	;# 
  1097  0F52                     	;# 
  1098  0F53                     	;# 
  1099  0F54                     	;# 
  1100  0F55                     	;# 
  1101  0F56                     	;# 
  1102  0F57                     	;# 
  1103  0F65                     	;# 
  1104  0F68                     	;# 
  1105  0F69                     	;# 
  1106  0F6A                     	;# 
  1107  0F6B                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000D                     	;# 
  1133  000E                     	;# 
  1134  0010                     	;# 
  1135  0011                     	;# 
  1136  0012                     	;# 
  1137  0013                     	;# 
  1138  0016                     	;# 
  1139  0017                     	;# 
  1140  0018                     	;# 
  1141  001C                     	;# 
  1142  001C                     	;# 
  1143  001D                     	;# 
  1144  001D                     	;# 
  1145  001E                     	;# 
  1146  001F                     	;# 
  1147  008C                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  008E                     	;# 
  1152  008F                     	;# 
  1153  0090                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0093                     	;# 
  1157  0094                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0097                     	;# 
  1161  0098                     	;# 
  1162  0099                     	;# 
  1163  009A                     	;# 
  1164  009B                     	;# 
  1165  009C                     	;# 
  1166  009D                     	;# 
  1167  009E                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  010E                     	;# 
  1172  010F                     	;# 
  1173  0110                     	;# 
  1174  0110                     	;# 
  1175  0111                     	;# 
  1176  0112                     	;# 
  1177  0112                     	;# 
  1178  0113                     	;# 
  1179  0114                     	;# 
  1180  0114                     	;# 
  1181  0115                     	;# 
  1182  0116                     	;# 
  1183  0116                     	;# 
  1184  0117                     	;# 
  1185  0119                     	;# 
  1186  0119                     	;# 
  1187  0119                     	;# 
  1188  011A                     	;# 
  1189  011A                     	;# 
  1190  011A                     	;# 
  1191  011B                     	;# 
  1192  011B                     	;# 
  1193  011B                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011C                     	;# 
  1197  011C                     	;# 
  1198  011C                     	;# 
  1199  011D                     	;# 
  1200  011D                     	;# 
  1201  011D                     	;# 
  1202  011E                     	;# 
  1203  011E                     	;# 
  1204  011E                     	;# 
  1205  011F                     	;# 
  1206  011F                     	;# 
  1207  011F                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  018C                     	;# 
  1211  018D                     	;# 
  1212  018E                     	;# 
  1213  018F                     	;# 
  1214  0190                     	;# 
  1215  0191                     	;# 
  1216  0192                     	;# 
  1217  0196                     	;# 
  1218  0197                     	;# 
  1219  0198                     	;# 
  1220  0199                     	;# 
  1221  019A                     	;# 
  1222  019B                     	;# 
  1223  019C                     	;# 
  1224  020C                     	;# 
  1225  020C                     	;# 
  1226  020D                     	;# 
  1227  020E                     	;# 
  1228  020F                     	;# 
  1229  020F                     	;# 
  1230  0210                     	;# 
  1231  0210                     	;# 
  1232  0211                     	;# 
  1233  0211                     	;# 
  1234  0212                     	;# 
  1235  0212                     	;# 
  1236  0213                     	;# 
  1237  0214                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0216                     	;# 
  1241  0216                     	;# 
  1242  0217                     	;# 
  1243  0217                     	;# 
  1244  0218                     	;# 
  1245  0218                     	;# 
  1246  0219                     	;# 
  1247  021A                     	;# 
  1248  021B                     	;# 
  1249  021B                     	;# 
  1250  021C                     	;# 
  1251  021C                     	;# 
  1252  021D                     	;# 
  1253  021D                     	;# 
  1254  021E                     	;# 
  1255  021F                     	;# 
  1256  028C                     	;# 
  1257  028C                     	;# 
  1258  028D                     	;# 
  1259  028D                     	;# 
  1260  028E                     	;# 
  1261  028F                     	;# 
  1262  0290                     	;# 
  1263  0290                     	;# 
  1264  0291                     	;# 
  1265  0292                     	;# 
  1266  0292                     	;# 
  1267  0293                     	;# 
  1268  0293                     	;# 
  1269  0294                     	;# 
  1270  0295                     	;# 
  1271  0296                     	;# 
  1272  0296                     	;# 
  1273  0297                     	;# 
  1274  0298                     	;# 
  1275  0298                     	;# 
  1276  0299                     	;# 
  1277  0299                     	;# 
  1278  029A                     	;# 
  1279  029B                     	;# 
  1280  029C                     	;# 
  1281  029C                     	;# 
  1282  029D                     	;# 
  1283  030C                     	;# 
  1284  030C                     	;# 
  1285  030D                     	;# 
  1286  030E                     	;# 
  1287  030F                     	;# 
  1288  0310                     	;# 
  1289  0310                     	;# 
  1290  0311                     	;# 
  1291  0312                     	;# 
  1292  0313                     	;# 
  1293  0314                     	;# 
  1294  0314                     	;# 
  1295  0315                     	;# 
  1296  0316                     	;# 
  1297  0317                     	;# 
  1298  0318                     	;# 
  1299  0318                     	;# 
  1300  0319                     	;# 
  1301  031A                     	;# 
  1302  031B                     	;# 
  1303  031C                     	;# 
  1304  031C                     	;# 
  1305  031D                     	;# 
  1306  031E                     	;# 
  1307  031F                     	;# 
  1308  038C                     	;# 
  1309  038D                     	;# 
  1310  038E                     	;# 
  1311  0390                     	;# 
  1312  0391                     	;# 
  1313  0392                     	;# 
  1314  040C                     	;# 
  1315  040D                     	;# 
  1316  040E                     	;# 
  1317  040F                     	;# 
  1318  0410                     	;# 
  1319  0411                     	;# 
  1320  0416                     	;# 
  1321  0416                     	;# 
  1322  0417                     	;# 
  1323  0418                     	;# 
  1324  0418                     	;# 
  1325  0419                     	;# 
  1326  041A                     	;# 
  1327  041A                     	;# 
  1328  041B                     	;# 
  1329  041C                     	;# 
  1330  041C                     	;# 
  1331  041D                     	;# 
  1332  041E                     	;# 
  1333  041F                     	;# 
  1334  048C                     	;# 
  1335  048C                     	;# 
  1336  048D                     	;# 
  1337  048E                     	;# 
  1338  048F                     	;# 
  1339  048F                     	;# 
  1340  0490                     	;# 
  1341  0491                     	;# 
  1342  0492                     	;# 
  1343  0492                     	;# 
  1344  0493                     	;# 
  1345  0494                     	;# 
  1346  0495                     	;# 
  1347  0495                     	;# 
  1348  0496                     	;# 
  1349  0497                     	;# 
  1350  0498                     	;# 
  1351  0499                     	;# 
  1352  049A                     	;# 
  1353  049B                     	;# 
  1354  049C                     	;# 
  1355  049D                     	;# 
  1356  050C                     	;# 
  1357  050C                     	;# 
  1358  050D                     	;# 
  1359  050E                     	;# 
  1360  050F                     	;# 
  1361  050F                     	;# 
  1362  0510                     	;# 
  1363  0511                     	;# 
  1364  0512                     	;# 
  1365  0512                     	;# 
  1366  0513                     	;# 
  1367  0514                     	;# 
  1368  0515                     	;# 
  1369  0515                     	;# 
  1370  0516                     	;# 
  1371  0517                     	;# 
  1372  0518                     	;# 
  1373  0519                     	;# 
  1374  051A                     	;# 
  1375  051B                     	;# 
  1376  051C                     	;# 
  1377  051D                     	;# 
  1378  058C                     	;# 
  1379  058C                     	;# 
  1380  058D                     	;# 
  1381  058E                     	;# 
  1382  058F                     	;# 
  1383  058F                     	;# 
  1384  0590                     	;# 
  1385  0591                     	;# 
  1386  0592                     	;# 
  1387  0593                     	;# 
  1388  060C                     	;# 
  1389  060D                     	;# 
  1390  060E                     	;# 
  1391  060F                     	;# 
  1392  0610                     	;# 
  1393  0611                     	;# 
  1394  0612                     	;# 
  1395  0613                     	;# 
  1396  0614                     	;# 
  1397  0616                     	;# 
  1398  0617                     	;# 
  1399  0618                     	;# 
  1400  0619                     	;# 
  1401  061A                     	;# 
  1402  061B                     	;# 
  1403  061C                     	;# 
  1404  061D                     	;# 
  1405  061E                     	;# 
  1406  068C                     	;# 
  1407  068D                     	;# 
  1408  068E                     	;# 
  1409  068F                     	;# 
  1410  0690                     	;# 
  1411  0691                     	;# 
  1412  0692                     	;# 
  1413  0693                     	;# 
  1414  0694                     	;# 
  1415  070C                     	;# 
  1416  070D                     	;# 
  1417  070E                     	;# 
  1418  070F                     	;# 
  1419  0710                     	;# 
  1420  0711                     	;# 
  1421  0712                     	;# 
  1422  0713                     	;# 
  1423  0714                     	;# 
  1424  0716                     	;# 
  1425  0717                     	;# 
  1426  0718                     	;# 
  1427  0719                     	;# 
  1428  071A                     	;# 
  1429  071B                     	;# 
  1430  071C                     	;# 
  1431  071D                     	;# 
  1432  071E                     	;# 
  1433  0796                     	;# 
  1434  0797                     	;# 
  1435  0798                     	;# 
  1436  0799                     	;# 
  1437  079A                     	;# 
  1438  079B                     	;# 
  1439  080C                     	;# 
  1440  080D                     	;# 
  1441  080E                     	;# 
  1442  080F                     	;# 
  1443  0810                     	;# 
  1444  0811                     	;# 
  1445  0812                     	;# 
  1446  0813                     	;# 
  1447  0814                     	;# 
  1448  081A                     	;# 
  1449  081B                     	;# 
  1450  081C                     	;# 
  1451  081D                     	;# 
  1452  081E                     	;# 
  1453  081F                     	;# 
  1454  088C                     	;# 
  1455  088D                     	;# 
  1456  088E                     	;# 
  1457  088F                     	;# 
  1458  0890                     	;# 
  1459  0891                     	;# 
  1460  0892                     	;# 
  1461  0893                     	;# 
  1462  0895                     	;# 
  1463  0896                     	;# 
  1464  0897                     	;# 
  1465  0898                     	;# 
  1466  0899                     	;# 
  1467  089A                     	;# 
  1468  089B                     	;# 
  1469  090C                     	;# 
  1470  090E                     	;# 
  1471  090F                     	;# 
  1472  091F                     	;# 
  1473  091F                     	;# 
  1474  098F                     	;# 
  1475  098F                     	;# 
  1476  0990                     	;# 
  1477  0991                     	;# 
  1478  0992                     	;# 
  1479  0993                     	;# 
  1480  0994                     	;# 
  1481  0995                     	;# 
  1482  0996                     	;# 
  1483  0997                     	;# 
  1484  0E0F                     	;# 
  1485  0E10                     	;# 
  1486  0E11                     	;# 
  1487  0E12                     	;# 
  1488  0E13                     	;# 
  1489  0E14                     	;# 
  1490  0E15                     	;# 
  1491  0E16                     	;# 
  1492  0E17                     	;# 
  1493  0E18                     	;# 
  1494  0E19                     	;# 
  1495  0E1A                     	;# 
  1496  0E1B                     	;# 
  1497  0E1C                     	;# 
  1498  0E1D                     	;# 
  1499  0E1E                     	;# 
  1500  0E1F                     	;# 
  1501  0E20                     	;# 
  1502  0E21                     	;# 
  1503  0E22                     	;# 
  1504  0E23                     	;# 
  1505  0E24                     	;# 
  1506  0E25                     	;# 
  1507  0E26                     	;# 
  1508  0E27                     	;# 
  1509  0E28                     	;# 
  1510  0E29                     	;# 
  1511  0E2A                     	;# 
  1512  0E2B                     	;# 
  1513  0E2C                     	;# 
  1514  0E2D                     	;# 
  1515  0E2E                     	;# 
  1516  0E2F                     	;# 
  1517  0E30                     	;# 
  1518  0E31                     	;# 
  1519  0E32                     	;# 
  1520  0E33                     	;# 
  1521  0E34                     	;# 
  1522  0E35                     	;# 
  1523  0E36                     	;# 
  1524  0E37                     	;# 
  1525  0E8F                     	;# 
  1526  0E90                     	;# 
  1527  0E91                     	;# 
  1528  0E92                     	;# 
  1529  0E93                     	;# 
  1530  0E94                     	;# 
  1531  0E95                     	;# 
  1532  0E96                     	;# 
  1533  0E97                     	;# 
  1534  0E9C                     	;# 
  1535  0E9D                     	;# 
  1536  0E9E                     	;# 
  1537  0EA1                     	;# 
  1538  0EA2                     	;# 
  1539  0EA3                     	;# 
  1540  0EA4                     	;# 
  1541  0EA5                     	;# 
  1542  0EA9                     	;# 
  1543  0EAA                     	;# 
  1544  0EAB                     	;# 
  1545  0EAC                     	;# 
  1546  0EB1                     	;# 
  1547  0EB2                     	;# 
  1548  0EB3                     	;# 
  1549  0EB8                     	;# 
  1550  0EB9                     	;# 
  1551  0EBA                     	;# 
  1552  0EBB                     	;# 
  1553  0EBC                     	;# 
  1554  0EBD                     	;# 
  1555  0EBE                     	;# 
  1556  0EC3                     	;# 
  1557  0EC5                     	;# 
  1558  0EC6                     	;# 
  1559  0EC7                     	;# 
  1560  0EC8                     	;# 
  1561  0EC9                     	;# 
  1562  0ECA                     	;# 
  1563  0ECB                     	;# 
  1564  0ECC                     	;# 
  1565  0F10                     	;# 
  1566  0F11                     	;# 
  1567  0F12                     	;# 
  1568  0F13                     	;# 
  1569  0F14                     	;# 
  1570  0F15                     	;# 
  1571  0F16                     	;# 
  1572  0F17                     	;# 
  1573  0F18                     	;# 
  1574  0F19                     	;# 
  1575  0F1A                     	;# 
  1576  0F1B                     	;# 
  1577  0F1C                     	;# 
  1578  0F1D                     	;# 
  1579  0F1E                     	;# 
  1580  0F1F                     	;# 
  1581  0F20                     	;# 
  1582  0F21                     	;# 
  1583  0F22                     	;# 
  1584  0F23                     	;# 
  1585  0F24                     	;# 
  1586  0F25                     	;# 
  1587  0F26                     	;# 
  1588  0F27                     	;# 
  1589  0F38                     	;# 
  1590  0F39                     	;# 
  1591  0F3A                     	;# 
  1592  0F3B                     	;# 
  1593  0F3C                     	;# 
  1594  0F3D                     	;# 
  1595  0F3E                     	;# 
  1596  0F3F                     	;# 
  1597  0F40                     	;# 
  1598  0F41                     	;# 
  1599  0F43                     	;# 
  1600  0F44                     	;# 
  1601  0F45                     	;# 
  1602  0F46                     	;# 
  1603  0F47                     	;# 
  1604  0F48                     	;# 
  1605  0F49                     	;# 
  1606  0F4A                     	;# 
  1607  0F4B                     	;# 
  1608  0F4C                     	;# 
  1609  0F4E                     	;# 
  1610  0F4F                     	;# 
  1611  0F50                     	;# 
  1612  0F51                     	;# 
  1613  0F52                     	;# 
  1614  0F53                     	;# 
  1615  0F54                     	;# 
  1616  0F55                     	;# 
  1617  0F56                     	;# 
  1618  0F57                     	;# 
  1619  0F65                     	;# 
  1620  0F68                     	;# 
  1621  0F69                     	;# 
  1622  0F6A                     	;# 
  1623  0F6B                     	;# 
  1624  0FE4                     	;# 
  1625  0FE5                     	;# 
  1626  0FE6                     	;# 
  1627  0FE7                     	;# 
  1628  0FE8                     	;# 
  1629  0FE9                     	;# 
  1630  0FEA                     	;# 
  1631  0FEB                     	;# 
  1632  0FED                     	;# 
  1633  0FEE                     	;# 
  1634  0FEF                     	;# 
  1635  0000                     	;# 
  1636  0001                     	;# 
  1637  0002                     	;# 
  1638  0003                     	;# 
  1639  0004                     	;# 
  1640  0005                     	;# 
  1641  0006                     	;# 
  1642  0007                     	;# 
  1643  0008                     	;# 
  1644  0009                     	;# 
  1645  000A                     	;# 
  1646  000B                     	;# 
  1647  000C                     	;# 
  1648  000D                     	;# 
  1649  000E                     	;# 
  1650  0010                     	;# 
  1651  0011                     	;# 
  1652  0012                     	;# 
  1653  0013                     	;# 
  1654  0016                     	;# 
  1655  0017                     	;# 
  1656  0018                     	;# 
  1657  001C                     	;# 
  1658  001C                     	;# 
  1659  001D                     	;# 
  1660  001D                     	;# 
  1661  001E                     	;# 
  1662  001F                     	;# 
  1663  008C                     	;# 
  1664  008C                     	;# 
  1665  008D                     	;# 
  1666  008E                     	;# 
  1667  008E                     	;# 
  1668  008F                     	;# 
  1669  0090                     	;# 
  1670  0090                     	;# 
  1671  0091                     	;# 
  1672  0093                     	;# 
  1673  0094                     	;# 
  1674  0095                     	;# 
  1675  0096                     	;# 
  1676  0097                     	;# 
  1677  0098                     	;# 
  1678  0099                     	;# 
  1679  009A                     	;# 
  1680  009B                     	;# 
  1681  009C                     	;# 
  1682  009D                     	;# 
  1683  009E                     	;# 
  1684  010C                     	;# 
  1685  010D                     	;# 
  1686  010E                     	;# 
  1687  010E                     	;# 
  1688  010F                     	;# 
  1689  0110                     	;# 
  1690  0110                     	;# 
  1691  0111                     	;# 
  1692  0112                     	;# 
  1693  0112                     	;# 
  1694  0113                     	;# 
  1695  0114                     	;# 
  1696  0114                     	;# 
  1697  0115                     	;# 
  1698  0116                     	;# 
  1699  0116                     	;# 
  1700  0117                     	;# 
  1701  0119                     	;# 
  1702  0119                     	;# 
  1703  0119                     	;# 
  1704  011A                     	;# 
  1705  011A                     	;# 
  1706  011A                     	;# 
  1707  011B                     	;# 
  1708  011B                     	;# 
  1709  011B                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011C                     	;# 
  1713  011C                     	;# 
  1714  011C                     	;# 
  1715  011D                     	;# 
  1716  011D                     	;# 
  1717  011D                     	;# 
  1718  011E                     	;# 
  1719  011E                     	;# 
  1720  011E                     	;# 
  1721  011F                     	;# 
  1722  011F                     	;# 
  1723  011F                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  018C                     	;# 
  1727  018D                     	;# 
  1728  018E                     	;# 
  1729  018F                     	;# 
  1730  0190                     	;# 
  1731  0191                     	;# 
  1732  0192                     	;# 
  1733  0196                     	;# 
  1734  0197                     	;# 
  1735  0198                     	;# 
  1736  0199                     	;# 
  1737  019A                     	;# 
  1738  019B                     	;# 
  1739  019C                     	;# 
  1740  020C                     	;# 
  1741  020C                     	;# 
  1742  020D                     	;# 
  1743  020E                     	;# 
  1744  020F                     	;# 
  1745  020F                     	;# 
  1746  0210                     	;# 
  1747  0210                     	;# 
  1748  0211                     	;# 
  1749  0211                     	;# 
  1750  0212                     	;# 
  1751  0212                     	;# 
  1752  0213                     	;# 
  1753  0214                     	;# 
  1754  0215                     	;# 
  1755  0215                     	;# 
  1756  0216                     	;# 
  1757  0216                     	;# 
  1758  0217                     	;# 
  1759  0217                     	;# 
  1760  0218                     	;# 
  1761  0218                     	;# 
  1762  0219                     	;# 
  1763  021A                     	;# 
  1764  021B                     	;# 
  1765  021B                     	;# 
  1766  021C                     	;# 
  1767  021C                     	;# 
  1768  021D                     	;# 
  1769  021D                     	;# 
  1770  021E                     	;# 
  1771  021F                     	;# 
  1772  028C                     	;# 
  1773  028C                     	;# 
  1774  028D                     	;# 
  1775  028D                     	;# 
  1776  028E                     	;# 
  1777  028F                     	;# 
  1778  0290                     	;# 
  1779  0290                     	;# 
  1780  0291                     	;# 
  1781  0292                     	;# 
  1782  0292                     	;# 
  1783  0293                     	;# 
  1784  0293                     	;# 
  1785  0294                     	;# 
  1786  0295                     	;# 
  1787  0296                     	;# 
  1788  0296                     	;# 
  1789  0297                     	;# 
  1790  0298                     	;# 
  1791  0298                     	;# 
  1792  0299                     	;# 
  1793  0299                     	;# 
  1794  029A                     	;# 
  1795  029B                     	;# 
  1796  029C                     	;# 
  1797  029C                     	;# 
  1798  029D                     	;# 
  1799  030C                     	;# 
  1800  030C                     	;# 
  1801  030D                     	;# 
  1802  030E                     	;# 
  1803  030F                     	;# 
  1804  0310                     	;# 
  1805  0310                     	;# 
  1806  0311                     	;# 
  1807  0312                     	;# 
  1808  0313                     	;# 
  1809  0314                     	;# 
  1810  0314                     	;# 
  1811  0315                     	;# 
  1812  0316                     	;# 
  1813  0317                     	;# 
  1814  0318                     	;# 
  1815  0318                     	;# 
  1816  0319                     	;# 
  1817  031A                     	;# 
  1818  031B                     	;# 
  1819  031C                     	;# 
  1820  031C                     	;# 
  1821  031D                     	;# 
  1822  031E                     	;# 
  1823  031F                     	;# 
  1824  038C                     	;# 
  1825  038D                     	;# 
  1826  038E                     	;# 
  1827  0390                     	;# 
  1828  0391                     	;# 
  1829  0392                     	;# 
  1830  040C                     	;# 
  1831  040D                     	;# 
  1832  040E                     	;# 
  1833  040F                     	;# 
  1834  0410                     	;# 
  1835  0411                     	;# 
  1836  0416                     	;# 
  1837  0416                     	;# 
  1838  0417                     	;# 
  1839  0418                     	;# 
  1840  0418                     	;# 
  1841  0419                     	;# 
  1842  041A                     	;# 
  1843  041A                     	;# 
  1844  041B                     	;# 
  1845  041C                     	;# 
  1846  041C                     	;# 
  1847  041D                     	;# 
  1848  041E                     	;# 
  1849  041F                     	;# 
  1850  048C                     	;# 
  1851  048C                     	;# 
  1852  048D                     	;# 
  1853  048E                     	;# 
  1854  048F                     	;# 
  1855  048F                     	;# 
  1856  0490                     	;# 
  1857  0491                     	;# 
  1858  0492                     	;# 
  1859  0492                     	;# 
  1860  0493                     	;# 
  1861  0494                     	;# 
  1862  0495                     	;# 
  1863  0495                     	;# 
  1864  0496                     	;# 
  1865  0497                     	;# 
  1866  0498                     	;# 
  1867  0499                     	;# 
  1868  049A                     	;# 
  1869  049B                     	;# 
  1870  049C                     	;# 
  1871  049D                     	;# 
  1872  050C                     	;# 
  1873  050C                     	;# 
  1874  050D                     	;# 
  1875  050E                     	;# 
  1876  050F                     	;# 
  1877  050F                     	;# 
  1878  0510                     	;# 
  1879  0511                     	;# 
  1880  0512                     	;# 
  1881  0512                     	;# 
  1882  0513                     	;# 
  1883  0514                     	;# 
  1884  0515                     	;# 
  1885  0515                     	;# 
  1886  0516                     	;# 
  1887  0517                     	;# 
  1888  0518                     	;# 
  1889  0519                     	;# 
  1890  051A                     	;# 
  1891  051B                     	;# 
  1892  051C                     	;# 
  1893  051D                     	;# 
  1894  058C                     	;# 
  1895  058C                     	;# 
  1896  058D                     	;# 
  1897  058E                     	;# 
  1898  058F                     	;# 
  1899  058F                     	;# 
  1900  0590                     	;# 
  1901  0591                     	;# 
  1902  0592                     	;# 
  1903  0593                     	;# 
  1904  060C                     	;# 
  1905  060D                     	;# 
  1906  060E                     	;# 
  1907  060F                     	;# 
  1908  0610                     	;# 
  1909  0611                     	;# 
  1910  0612                     	;# 
  1911  0613                     	;# 
  1912  0614                     	;# 
  1913  0616                     	;# 
  1914  0617                     	;# 
  1915  0618                     	;# 
  1916  0619                     	;# 
  1917  061A                     	;# 
  1918  061B                     	;# 
  1919  061C                     	;# 
  1920  061D                     	;# 
  1921  061E                     	;# 
  1922  068C                     	;# 
  1923  068D                     	;# 
  1924  068E                     	;# 
  1925  068F                     	;# 
  1926  0690                     	;# 
  1927  0691                     	;# 
  1928  0692                     	;# 
  1929  0693                     	;# 
  1930  0694                     	;# 
  1931  070C                     	;# 
  1932  070D                     	;# 
  1933  070E                     	;# 
  1934  070F                     	;# 
  1935  0710                     	;# 
  1936  0711                     	;# 
  1937  0712                     	;# 
  1938  0713                     	;# 
  1939  0714                     	;# 
  1940  0716                     	;# 
  1941  0717                     	;# 
  1942  0718                     	;# 
  1943  0719                     	;# 
  1944  071A                     	;# 
  1945  071B                     	;# 
  1946  071C                     	;# 
  1947  071D                     	;# 
  1948  071E                     	;# 
  1949  0796                     	;# 
  1950  0797                     	;# 
  1951  0798                     	;# 
  1952  0799                     	;# 
  1953  079A                     	;# 
  1954  079B                     	;# 
  1955  080C                     	;# 
  1956  080D                     	;# 
  1957  080E                     	;# 
  1958  080F                     	;# 
  1959  0810                     	;# 
  1960  0811                     	;# 
  1961  0812                     	;# 
  1962  0813                     	;# 
  1963  0814                     	;# 
  1964  081A                     	;# 
  1965  081B                     	;# 
  1966  081C                     	;# 
  1967  081D                     	;# 
  1968  081E                     	;# 
  1969  081F                     	;# 
  1970  088C                     	;# 
  1971  088D                     	;# 
  1972  088E                     	;# 
  1973  088F                     	;# 
  1974  0890                     	;# 
  1975  0891                     	;# 
  1976  0892                     	;# 
  1977  0893                     	;# 
  1978  0895                     	;# 
  1979  0896                     	;# 
  1980  0897                     	;# 
  1981  0898                     	;# 
  1982  0899                     	;# 
  1983  089A                     	;# 
  1984  089B                     	;# 
  1985  090C                     	;# 
  1986  090E                     	;# 
  1987  090F                     	;# 
  1988  091F                     	;# 
  1989  091F                     	;# 
  1990  098F                     	;# 
  1991  098F                     	;# 
  1992  0990                     	;# 
  1993  0991                     	;# 
  1994  0992                     	;# 
  1995  0993                     	;# 
  1996  0994                     	;# 
  1997  0995                     	;# 
  1998  0996                     	;# 
  1999  0997                     	;# 
  2000  0E0F                     	;# 
  2001  0E10                     	;# 
  2002  0E11                     	;# 
  2003  0E12                     	;# 
  2004  0E13                     	;# 
  2005  0E14                     	;# 
  2006  0E15                     	;# 
  2007  0E16                     	;# 
  2008  0E17                     	;# 
  2009  0E18                     	;# 
  2010  0E19                     	;# 
  2011  0E1A                     	;# 
  2012  0E1B                     	;# 
  2013  0E1C                     	;# 
  2014  0E1D                     	;# 
  2015  0E1E                     	;# 
  2016  0E1F                     	;# 
  2017  0E20                     	;# 
  2018  0E21                     	;# 
  2019  0E22                     	;# 
  2020  0E23                     	;# 
  2021  0E24                     	;# 
  2022  0E25                     	;# 
  2023  0E26                     	;# 
  2024  0E27                     	;# 
  2025  0E28                     	;# 
  2026  0E29                     	;# 
  2027  0E2A                     	;# 
  2028  0E2B                     	;# 
  2029  0E2C                     	;# 
  2030  0E2D                     	;# 
  2031  0E2E                     	;# 
  2032  0E2F                     	;# 
  2033  0E30                     	;# 
  2034  0E31                     	;# 
  2035  0E32                     	;# 
  2036  0E33                     	;# 
  2037  0E34                     	;# 
  2038  0E35                     	;# 
  2039  0E36                     	;# 
  2040  0E37                     	;# 
  2041  0E8F                     	;# 
  2042  0E90                     	;# 
  2043  0E91                     	;# 
  2044  0E92                     	;# 
  2045  0E93                     	;# 
  2046  0E94                     	;# 
  2047  0E95                     	;# 
  2048  0E96                     	;# 
  2049  0E97                     	;# 
  2050  0E9C                     	;# 
  2051  0E9D                     	;# 
  2052  0E9E                     	;# 
  2053  0EA1                     	;# 
  2054  0EA2                     	;# 
  2055  0EA3                     	;# 
  2056  0EA4                     	;# 
  2057  0EA5                     	;# 
  2058  0EA9                     	;# 
  2059  0EAA                     	;# 
  2060  0EAB                     	;# 
  2061  0EAC                     	;# 
  2062  0EB1                     	;# 
  2063  0EB2                     	;# 
  2064  0EB3                     	;# 
  2065  0EB8                     	;# 
  2066  0EB9                     	;# 
  2067  0EBA                     	;# 
  2068  0EBB                     	;# 
  2069  0EBC                     	;# 
  2070  0EBD                     	;# 
  2071  0EBE                     	;# 
  2072  0EC3                     	;# 
  2073  0EC5                     	;# 
  2074  0EC6                     	;# 
  2075  0EC7                     	;# 
  2076  0EC8                     	;# 
  2077  0EC9                     	;# 
  2078  0ECA                     	;# 
  2079  0ECB                     	;# 
  2080  0ECC                     	;# 
  2081  0F10                     	;# 
  2082  0F11                     	;# 
  2083  0F12                     	;# 
  2084  0F13                     	;# 
  2085  0F14                     	;# 
  2086  0F15                     	;# 
  2087  0F16                     	;# 
  2088  0F17                     	;# 
  2089  0F18                     	;# 
  2090  0F19                     	;# 
  2091  0F1A                     	;# 
  2092  0F1B                     	;# 
  2093  0F1C                     	;# 
  2094  0F1D                     	;# 
  2095  0F1E                     	;# 
  2096  0F1F                     	;# 
  2097  0F20                     	;# 
  2098  0F21                     	;# 
  2099  0F22                     	;# 
  2100  0F23                     	;# 
  2101  0F24                     	;# 
  2102  0F25                     	;# 
  2103  0F26                     	;# 
  2104  0F27                     	;# 
  2105  0F38                     	;# 
  2106  0F39                     	;# 
  2107  0F3A                     	;# 
  2108  0F3B                     	;# 
  2109  0F3C                     	;# 
  2110  0F3D                     	;# 
  2111  0F3E                     	;# 
  2112  0F3F                     	;# 
  2113  0F40                     	;# 
  2114  0F41                     	;# 
  2115  0F43                     	;# 
  2116  0F44                     	;# 
  2117  0F45                     	;# 
  2118  0F46                     	;# 
  2119  0F47                     	;# 
  2120  0F48                     	;# 
  2121  0F49                     	;# 
  2122  0F4A                     	;# 
  2123  0F4B                     	;# 
  2124  0F4C                     	;# 
  2125  0F4E                     	;# 
  2126  0F4F                     	;# 
  2127  0F50                     	;# 
  2128  0F51                     	;# 
  2129  0F52                     	;# 
  2130  0F53                     	;# 
  2131  0F54                     	;# 
  2132  0F55                     	;# 
  2133  0F56                     	;# 
  2134  0F57                     	;# 
  2135  0F65                     	;# 
  2136  0F68                     	;# 
  2137  0F69                     	;# 
  2138  0F6A                     	;# 
  2139  0F6B                     	;# 
  2140  0FE4                     	;# 
  2141  0FE5                     	;# 
  2142  0FE6                     	;# 
  2143  0FE7                     	;# 
  2144  0FE8                     	;# 
  2145  0FE9                     	;# 
  2146  0FEA                     	;# 
  2147  0FEB                     	;# 
  2148  0FED                     	;# 
  2149  0FEE                     	;# 
  2150  0FEF                     	;# 
  2151  0000                     	;# 
  2152  0001                     	;# 
  2153  0002                     	;# 
  2154  0003                     	;# 
  2155  0004                     	;# 
  2156  0005                     	;# 
  2157  0006                     	;# 
  2158  0007                     	;# 
  2159  0008                     	;# 
  2160  0009                     	;# 
  2161  000A                     	;# 
  2162  000B                     	;# 
  2163  000C                     	;# 
  2164  000D                     	;# 
  2165  000E                     	;# 
  2166  0010                     	;# 
  2167  0011                     	;# 
  2168  0012                     	;# 
  2169  0013                     	;# 
  2170  0016                     	;# 
  2171  0017                     	;# 
  2172  0018                     	;# 
  2173  001C                     	;# 
  2174  001C                     	;# 
  2175  001D                     	;# 
  2176  001D                     	;# 
  2177  001E                     	;# 
  2178  001F                     	;# 
  2179  008C                     	;# 
  2180  008C                     	;# 
  2181  008D                     	;# 
  2182  008E                     	;# 
  2183  008E                     	;# 
  2184  008F                     	;# 
  2185  0090                     	;# 
  2186  0090                     	;# 
  2187  0091                     	;# 
  2188  0093                     	;# 
  2189  0094                     	;# 
  2190  0095                     	;# 
  2191  0096                     	;# 
  2192  0097                     	;# 
  2193  0098                     	;# 
  2194  0099                     	;# 
  2195  009A                     	;# 
  2196  009B                     	;# 
  2197  009C                     	;# 
  2198  009D                     	;# 
  2199  009E                     	;# 
  2200  010C                     	;# 
  2201  010D                     	;# 
  2202  010E                     	;# 
  2203  010E                     	;# 
  2204  010F                     	;# 
  2205  0110                     	;# 
  2206  0110                     	;# 
  2207  0111                     	;# 
  2208  0112                     	;# 
  2209  0112                     	;# 
  2210  0113                     	;# 
  2211  0114                     	;# 
  2212  0114                     	;# 
  2213  0115                     	;# 
  2214  0116                     	;# 
  2215  0116                     	;# 
  2216  0117                     	;# 
  2217  0119                     	;# 
  2218  0119                     	;# 
  2219  0119                     	;# 
  2220  011A                     	;# 
  2221  011A                     	;# 
  2222  011A                     	;# 
  2223  011B                     	;# 
  2224  011B                     	;# 
  2225  011B                     	;# 
  2226  011B                     	;# 
  2227  011B                     	;# 
  2228  011C                     	;# 
  2229  011C                     	;# 
  2230  011C                     	;# 
  2231  011D                     	;# 
  2232  011D                     	;# 
  2233  011D                     	;# 
  2234  011E                     	;# 
  2235  011E                     	;# 
  2236  011E                     	;# 
  2237  011F                     	;# 
  2238  011F                     	;# 
  2239  011F                     	;# 
  2240  011F                     	;# 
  2241  011F                     	;# 
  2242  018C                     	;# 
  2243  018D                     	;# 
  2244  018E                     	;# 
  2245  018F                     	;# 
  2246  0190                     	;# 
  2247  0191                     	;# 
  2248  0192                     	;# 
  2249  0196                     	;# 
  2250  0197                     	;# 
  2251  0198                     	;# 
  2252  0199                     	;# 
  2253  019A                     	;# 
  2254  019B                     	;# 
  2255  019C                     	;# 
  2256  020C                     	;# 
  2257  020C                     	;# 
  2258  020D                     	;# 
  2259  020E                     	;# 
  2260  020F                     	;# 
  2261  020F                     	;# 
  2262  0210                     	;# 
  2263  0210                     	;# 
  2264  0211                     	;# 
  2265  0211                     	;# 
  2266  0212                     	;# 
  2267  0212                     	;# 
  2268  0213                     	;# 
  2269  0214                     	;# 
  2270  0215                     	;# 
  2271  0215                     	;# 
  2272  0216                     	;# 
  2273  0216                     	;# 
  2274  0217                     	;# 
  2275  0217                     	;# 
  2276  0218                     	;# 
  2277  0218                     	;# 
  2278  0219                     	;# 
  2279  021A                     	;# 
  2280  021B                     	;# 
  2281  021B                     	;# 
  2282  021C                     	;# 
  2283  021C                     	;# 
  2284  021D                     	;# 
  2285  021D                     	;# 
  2286  021E                     	;# 
  2287  021F                     	;# 
  2288  028C                     	;# 
  2289  028C                     	;# 
  2290  028D                     	;# 
  2291  028D                     	;# 
  2292  028E                     	;# 
  2293  028F                     	;# 
  2294  0290                     	;# 
  2295  0290                     	;# 
  2296  0291                     	;# 
  2297  0292                     	;# 
  2298  0292                     	;# 
  2299  0293                     	;# 
  2300  0293                     	;# 
  2301  0294                     	;# 
  2302  0295                     	;# 
  2303  0296                     	;# 
  2304  0296                     	;# 
  2305  0297                     	;# 
  2306  0298                     	;# 
  2307  0298                     	;# 
  2308  0299                     	;# 
  2309  0299                     	;# 
  2310  029A                     	;# 
  2311  029B                     	;# 
  2312  029C                     	;# 
  2313  029C                     	;# 
  2314  029D                     	;# 
  2315  030C                     	;# 
  2316  030C                     	;# 
  2317  030D                     	;# 
  2318  030E                     	;# 
  2319  030F                     	;# 
  2320  0310                     	;# 
  2321  0310                     	;# 
  2322  0311                     	;# 
  2323  0312                     	;# 
  2324  0313                     	;# 
  2325  0314                     	;# 
  2326  0314                     	;# 
  2327  0315                     	;# 
  2328  0316                     	;# 
  2329  0317                     	;# 
  2330  0318                     	;# 
  2331  0318                     	;# 
  2332  0319                     	;# 
  2333  031A                     	;# 
  2334  031B                     	;# 
  2335  031C                     	;# 
  2336  031C                     	;# 
  2337  031D                     	;# 
  2338  031E                     	;# 
  2339  031F                     	;# 
  2340  038C                     	;# 
  2341  038D                     	;# 
  2342  038E                     	;# 
  2343  0390                     	;# 
  2344  0391                     	;# 
  2345  0392                     	;# 
  2346  040C                     	;# 
  2347  040D                     	;# 
  2348  040E                     	;# 
  2349  040F                     	;# 
  2350  0410                     	;# 
  2351  0411                     	;# 
  2352  0416                     	;# 
  2353  0416                     	;# 
  2354  0417                     	;# 
  2355  0418                     	;# 
  2356  0418                     	;# 
  2357  0419                     	;# 
  2358  041A                     	;# 
  2359  041A                     	;# 
  2360  041B                     	;# 
  2361  041C                     	;# 
  2362  041C                     	;# 
  2363  041D                     	;# 
  2364  041E                     	;# 
  2365  041F                     	;# 
  2366  048C                     	;# 
  2367  048C                     	;# 
  2368  048D                     	;# 
  2369  048E                     	;# 
  2370  048F                     	;# 
  2371  048F                     	;# 
  2372  0490                     	;# 
  2373  0491                     	;# 
  2374  0492                     	;# 
  2375  0492                     	;# 
  2376  0493                     	;# 
  2377  0494                     	;# 
  2378  0495                     	;# 
  2379  0495                     	;# 
  2380  0496                     	;# 
  2381  0497                     	;# 
  2382  0498                     	;# 
  2383  0499                     	;# 
  2384  049A                     	;# 
  2385  049B                     	;# 
  2386  049C                     	;# 
  2387  049D                     	;# 
  2388  050C                     	;# 
  2389  050C                     	;# 
  2390  050D                     	;# 
  2391  050E                     	;# 
  2392  050F                     	;# 
  2393  050F                     	;# 
  2394  0510                     	;# 
  2395  0511                     	;# 
  2396  0512                     	;# 
  2397  0512                     	;# 
  2398  0513                     	;# 
  2399  0514                     	;# 
  2400  0515                     	;# 
  2401  0515                     	;# 
  2402  0516                     	;# 
  2403  0517                     	;# 
  2404  0518                     	;# 
  2405  0519                     	;# 
  2406  051A                     	;# 
  2407  051B                     	;# 
  2408  051C                     	;# 
  2409  051D                     	;# 
  2410  058C                     	;# 
  2411  058C                     	;# 
  2412  058D                     	;# 
  2413  058E                     	;# 
  2414  058F                     	;# 
  2415  058F                     	;# 
  2416  0590                     	;# 
  2417  0591                     	;# 
  2418  0592                     	;# 
  2419  0593                     	;# 
  2420  060C                     	;# 
  2421  060D                     	;# 
  2422  060E                     	;# 
  2423  060F                     	;# 
  2424  0610                     	;# 
  2425  0611                     	;# 
  2426  0612                     	;# 
  2427  0613                     	;# 
  2428  0614                     	;# 
  2429  0616                     	;# 
  2430  0617                     	;# 
  2431  0618                     	;# 
  2432  0619                     	;# 
  2433  061A                     	;# 
  2434  061B                     	;# 
  2435  061C                     	;# 
  2436  061D                     	;# 
  2437  061E                     	;# 
  2438  068C                     	;# 
  2439  068D                     	;# 
  2440  068E                     	;# 
  2441  068F                     	;# 
  2442  0690                     	;# 
  2443  0691                     	;# 
  2444  0692                     	;# 
  2445  0693                     	;# 
  2446  0694                     	;# 
  2447  070C                     	;# 
  2448  070D                     	;# 
  2449  070E                     	;# 
  2450  070F                     	;# 
  2451  0710                     	;# 
  2452  0711                     	;# 
  2453  0712                     	;# 
  2454  0713                     	;# 
  2455  0714                     	;# 
  2456  0716                     	;# 
  2457  0717                     	;# 
  2458  0718                     	;# 
  2459  0719                     	;# 
  2460  071A                     	;# 
  2461  071B                     	;# 
  2462  071C                     	;# 
  2463  071D                     	;# 
  2464  071E                     	;# 
  2465  0796                     	;# 
  2466  0797                     	;# 
  2467  0798                     	;# 
  2468  0799                     	;# 
  2469  079A                     	;# 
  2470  079B                     	;# 
  2471  080C                     	;# 
  2472  080D                     	;# 
  2473  080E                     	;# 
  2474  080F                     	;# 
  2475  0810                     	;# 
  2476  0811                     	;# 
  2477  0812                     	;# 
  2478  0813                     	;# 
  2479  0814                     	;# 
  2480  081A                     	;# 
  2481  081B                     	;# 
  2482  081C                     	;# 
  2483  081D                     	;# 
  2484  081E                     	;# 
  2485  081F                     	;# 
  2486  088C                     	;# 
  2487  088D                     	;# 
  2488  088E                     	;# 
  2489  088F                     	;# 
  2490  0890                     	;# 
  2491  0891                     	;# 
  2492  0892                     	;# 
  2493  0893                     	;# 
  2494  0895                     	;# 
  2495  0896                     	;# 
  2496  0897                     	;# 
  2497  0898                     	;# 
  2498  0899                     	;# 
  2499  089A                     	;# 
  2500  089B                     	;# 
  2501  090C                     	;# 
  2502  090E                     	;# 
  2503  090F                     	;# 
  2504  091F                     	;# 
  2505  091F                     	;# 
  2506  098F                     	;# 
  2507  098F                     	;# 
  2508  0990                     	;# 
  2509  0991                     	;# 
  2510  0992                     	;# 
  2511  0993                     	;# 
  2512  0994                     	;# 
  2513  0995                     	;# 
  2514  0996                     	;# 
  2515  0997                     	;# 
  2516  0E0F                     	;# 
  2517  0E10                     	;# 
  2518  0E11                     	;# 
  2519  0E12                     	;# 
  2520  0E13                     	;# 
  2521  0E14                     	;# 
  2522  0E15                     	;# 
  2523  0E16                     	;# 
  2524  0E17                     	;# 
  2525  0E18                     	;# 
  2526  0E19                     	;# 
  2527  0E1A                     	;# 
  2528  0E1B                     	;# 
  2529  0E1C                     	;# 
  2530  0E1D                     	;# 
  2531  0E1E                     	;# 
  2532  0E1F                     	;# 
  2533  0E20                     	;# 
  2534  0E21                     	;# 
  2535  0E22                     	;# 
  2536  0E23                     	;# 
  2537  0E24                     	;# 
  2538  0E25                     	;# 
  2539  0E26                     	;# 
  2540  0E27                     	;# 
  2541  0E28                     	;# 
  2542  0E29                     	;# 
  2543  0E2A                     	;# 
  2544  0E2B                     	;# 
  2545  0E2C                     	;# 
  2546  0E2D                     	;# 
  2547  0E2E                     	;# 
  2548  0E2F                     	;# 
  2549  0E30                     	;# 
  2550  0E31                     	;# 
  2551  0E32                     	;# 
  2552  0E33                     	;# 
  2553  0E34                     	;# 
  2554  0E35                     	;# 
  2555  0E36                     	;# 
  2556  0E37                     	;# 
  2557  0E8F                     	;# 
  2558  0E90                     	;# 
  2559  0E91                     	;# 
  2560  0E92                     	;# 
  2561  0E93                     	;# 
  2562  0E94                     	;# 
  2563  0E95                     	;# 
  2564  0E96                     	;# 
  2565  0E97                     	;# 
  2566  0E9C                     	;# 
  2567  0E9D                     	;# 
  2568  0E9E                     	;# 
  2569  0EA1                     	;# 
  2570  0EA2                     	;# 
  2571  0EA3                     	;# 
  2572  0EA4                     	;# 
  2573  0EA5                     	;# 
  2574  0EA9                     	;# 
  2575  0EAA                     	;# 
  2576  0EAB                     	;# 
  2577  0EAC                     	;# 
  2578  0EB1                     	;# 
  2579  0EB2                     	;# 
  2580  0EB3                     	;# 
  2581  0EB8                     	;# 
  2582  0EB9                     	;# 
  2583  0EBA                     	;# 
  2584  0EBB                     	;# 
  2585  0EBC                     	;# 
  2586  0EBD                     	;# 
  2587  0EBE                     	;# 
  2588  0EC3                     	;# 
  2589  0EC5                     	;# 
  2590  0EC6                     	;# 
  2591  0EC7                     	;# 
  2592  0EC8                     	;# 
  2593  0EC9                     	;# 
  2594  0ECA                     	;# 
  2595  0ECB                     	;# 
  2596  0ECC                     	;# 
  2597  0F10                     	;# 
  2598  0F11                     	;# 
  2599  0F12                     	;# 
  2600  0F13                     	;# 
  2601  0F14                     	;# 
  2602  0F15                     	;# 
  2603  0F16                     	;# 
  2604  0F17                     	;# 
  2605  0F18                     	;# 
  2606  0F19                     	;# 
  2607  0F1A                     	;# 
  2608  0F1B                     	;# 
  2609  0F1C                     	;# 
  2610  0F1D                     	;# 
  2611  0F1E                     	;# 
  2612  0F1F                     	;# 
  2613  0F20                     	;# 
  2614  0F21                     	;# 
  2615  0F22                     	;# 
  2616  0F23                     	;# 
  2617  0F24                     	;# 
  2618  0F25                     	;# 
  2619  0F26                     	;# 
  2620  0F27                     	;# 
  2621  0F38                     	;# 
  2622  0F39                     	;# 
  2623  0F3A                     	;# 
  2624  0F3B                     	;# 
  2625  0F3C                     	;# 
  2626  0F3D                     	;# 
  2627  0F3E                     	;# 
  2628  0F3F                     	;# 
  2629  0F40                     	;# 
  2630  0F41                     	;# 
  2631  0F43                     	;# 
  2632  0F44                     	;# 
  2633  0F45                     	;# 
  2634  0F46                     	;# 
  2635  0F47                     	;# 
  2636  0F48                     	;# 
  2637  0F49                     	;# 
  2638  0F4A                     	;# 
  2639  0F4B                     	;# 
  2640  0F4C                     	;# 
  2641  0F4E                     	;# 
  2642  0F4F                     	;# 
  2643  0F50                     	;# 
  2644  0F51                     	;# 
  2645  0F52                     	;# 
  2646  0F53                     	;# 
  2647  0F54                     	;# 
  2648  0F55                     	;# 
  2649  0F56                     	;# 
  2650  0F57                     	;# 
  2651  0F65                     	;# 
  2652  0F68                     	;# 
  2653  0F69                     	;# 
  2654  0F6A                     	;# 
  2655  0F6B                     	;# 
  2656  0FE4                     	;# 
  2657  0FE5                     	;# 
  2658  0FE6                     	;# 
  2659  0FE7                     	;# 
  2660  0FE8                     	;# 
  2661  0FE9                     	;# 
  2662  0FEA                     	;# 
  2663  0FEB                     	;# 
  2664  0FED                     	;# 
  2665  0FEE                     	;# 
  2666  0FEF                     	;# 
  2667  0000                     	;# 
  2668  0001                     	;# 
  2669  0002                     	;# 
  2670  0003                     	;# 
  2671  0004                     	;# 
  2672  0005                     	;# 
  2673  0006                     	;# 
  2674  0007                     	;# 
  2675  0008                     	;# 
  2676  0009                     	;# 
  2677  000A                     	;# 
  2678  000B                     	;# 
  2679  000C                     	;# 
  2680  000D                     	;# 
  2681  000E                     	;# 
  2682  0010                     	;# 
  2683  0011                     	;# 
  2684  0012                     	;# 
  2685  0013                     	;# 
  2686  0016                     	;# 
  2687  0017                     	;# 
  2688  0018                     	;# 
  2689  001C                     	;# 
  2690  001C                     	;# 
  2691  001D                     	;# 
  2692  001D                     	;# 
  2693  001E                     	;# 
  2694  001F                     	;# 
  2695  008C                     	;# 
  2696  008C                     	;# 
  2697  008D                     	;# 
  2698  008E                     	;# 
  2699  008E                     	;# 
  2700  008F                     	;# 
  2701  0090                     	;# 
  2702  0090                     	;# 
  2703  0091                     	;# 
  2704  0093                     	;# 
  2705  0094                     	;# 
  2706  0095                     	;# 
  2707  0096                     	;# 
  2708  0097                     	;# 
  2709  0098                     	;# 
  2710  0099                     	;# 
  2711  009A                     	;# 
  2712  009B                     	;# 
  2713  009C                     	;# 
  2714  009D                     	;# 
  2715  009E                     	;# 
  2716  010C                     	;# 
  2717  010D                     	;# 
  2718  010E                     	;# 
  2719  010E                     	;# 
  2720  010F                     	;# 
  2721  0110                     	;# 
  2722  0110                     	;# 
  2723  0111                     	;# 
  2724  0112                     	;# 
  2725  0112                     	;# 
  2726  0113                     	;# 
  2727  0114                     	;# 
  2728  0114                     	;# 
  2729  0115                     	;# 
  2730  0116                     	;# 
  2731  0116                     	;# 
  2732  0117                     	;# 
  2733  0119                     	;# 
  2734  0119                     	;# 
  2735  0119                     	;# 
  2736  011A                     	;# 
  2737  011A                     	;# 
  2738  011A                     	;# 
  2739  011B                     	;# 
  2740  011B                     	;# 
  2741  011B                     	;# 
  2742  011B                     	;# 
  2743  011B                     	;# 
  2744  011C                     	;# 
  2745  011C                     	;# 
  2746  011C                     	;# 
  2747  011D                     	;# 
  2748  011D                     	;# 
  2749  011D                     	;# 
  2750  011E                     	;# 
  2751  011E                     	;# 
  2752  011E                     	;# 
  2753  011F                     	;# 
  2754  011F                     	;# 
  2755  011F                     	;# 
  2756  011F                     	;# 
  2757  011F                     	;# 
  2758  018C                     	;# 
  2759  018D                     	;# 
  2760  018E                     	;# 
  2761  018F                     	;# 
  2762  0190                     	;# 
  2763  0191                     	;# 
  2764  0192                     	;# 
  2765  0196                     	;# 
  2766  0197                     	;# 
  2767  0198                     	;# 
  2768  0199                     	;# 
  2769  019A                     	;# 
  2770  019B                     	;# 
  2771  019C                     	;# 
  2772  020C                     	;# 
  2773  020C                     	;# 
  2774  020D                     	;# 
  2775  020E                     	;# 
  2776  020F                     	;# 
  2777  020F                     	;# 
  2778  0210                     	;# 
  2779  0210                     	;# 
  2780  0211                     	;# 
  2781  0211                     	;# 
  2782  0212                     	;# 
  2783  0212                     	;# 
  2784  0213                     	;# 
  2785  0214                     	;# 
  2786  0215                     	;# 
  2787  0215                     	;# 
  2788  0216                     	;# 
  2789  0216                     	;# 
  2790  0217                     	;# 
  2791  0217                     	;# 
  2792  0218                     	;# 
  2793  0218                     	;# 
  2794  0219                     	;# 
  2795  021A                     	;# 
  2796  021B                     	;# 
  2797  021B                     	;# 
  2798  021C                     	;# 
  2799  021C                     	;# 
  2800  021D                     	;# 
  2801  021D                     	;# 
  2802  021E                     	;# 
  2803  021F                     	;# 
  2804  028C                     	;# 
  2805  028C                     	;# 
  2806  028D                     	;# 
  2807  028D                     	;# 
  2808  028E                     	;# 
  2809  028F                     	;# 
  2810  0290                     	;# 
  2811  0290                     	;# 
  2812  0291                     	;# 
  2813  0292                     	;# 
  2814  0292                     	;# 
  2815  0293                     	;# 
  2816  0293                     	;# 
  2817  0294                     	;# 
  2818  0295                     	;# 
  2819  0296                     	;# 
  2820  0296                     	;# 
  2821  0297                     	;# 
  2822  0298                     	;# 
  2823  0298                     	;# 
  2824  0299                     	;# 
  2825  0299                     	;# 
  2826  029A                     	;# 
  2827  029B                     	;# 
  2828  029C                     	;# 
  2829  029C                     	;# 
  2830  029D                     	;# 
  2831  030C                     	;# 
  2832  030C                     	;# 
  2833  030D                     	;# 
  2834  030E                     	;# 
  2835  030F                     	;# 
  2836  0310                     	;# 
  2837  0310                     	;# 
  2838  0311                     	;# 
  2839  0312                     	;# 
  2840  0313                     	;# 
  2841  0314                     	;# 
  2842  0314                     	;# 
  2843  0315                     	;# 
  2844  0316                     	;# 
  2845  0317                     	;# 
  2846  0318                     	;# 
  2847  0318                     	;# 
  2848  0319                     	;# 
  2849  031A                     	;# 
  2850  031B                     	;# 
  2851  031C                     	;# 
  2852  031C                     	;# 
  2853  031D                     	;# 
  2854  031E                     	;# 
  2855  031F                     	;# 
  2856  038C                     	;# 
  2857  038D                     	;# 
  2858  038E                     	;# 
  2859  0390                     	;# 
  2860  0391                     	;# 
  2861  0392                     	;# 
  2862  040C                     	;# 
  2863  040D                     	;# 
  2864  040E                     	;# 
  2865  040F                     	;# 
  2866  0410                     	;# 
  2867  0411                     	;# 
  2868  0416                     	;# 
  2869  0416                     	;# 
  2870  0417                     	;# 
  2871  0418                     	;# 
  2872  0418                     	;# 
  2873  0419                     	;# 
  2874  041A                     	;# 
  2875  041A                     	;# 
  2876  041B                     	;# 
  2877  041C                     	;# 
  2878  041C                     	;# 
  2879  041D                     	;# 
  2880  041E                     	;# 
  2881  041F                     	;# 
  2882  048C                     	;# 
  2883  048C                     	;# 
  2884  048D                     	;# 
  2885  048E                     	;# 
  2886  048F                     	;# 
  2887  048F                     	;# 
  2888  0490                     	;# 
  2889  0491                     	;# 
  2890  0492                     	;# 
  2891  0492                     	;# 
  2892  0493                     	;# 
  2893  0494                     	;# 
  2894  0495                     	;# 
  2895  0495                     	;# 
  2896  0496                     	;# 
  2897  0497                     	;# 
  2898  0498                     	;# 
  2899  0499                     	;# 
  2900  049A                     	;# 
  2901  049B                     	;# 
  2902  049C                     	;# 
  2903  049D                     	;# 
  2904  050C                     	;# 
  2905  050C                     	;# 
  2906  050D                     	;# 
  2907  050E                     	;# 
  2908  050F                     	;# 
  2909  050F                     	;# 
  2910  0510                     	;# 
  2911  0511                     	;# 
  2912  0512                     	;# 
  2913  0512                     	;# 
  2914  0513                     	;# 
  2915  0514                     	;# 
  2916  0515                     	;# 
  2917  0515                     	;# 
  2918  0516                     	;# 
  2919  0517                     	;# 
  2920  0518                     	;# 
  2921  0519                     	;# 
  2922  051A                     	;# 
  2923  051B                     	;# 
  2924  051C                     	;# 
  2925  051D                     	;# 
  2926  058C                     	;# 
  2927  058C                     	;# 
  2928  058D                     	;# 
  2929  058E                     	;# 
  2930  058F                     	;# 
  2931  058F                     	;# 
  2932  0590                     	;# 
  2933  0591                     	;# 
  2934  0592                     	;# 
  2935  0593                     	;# 
  2936  060C                     	;# 
  2937  060D                     	;# 
  2938  060E                     	;# 
  2939  060F                     	;# 
  2940  0610                     	;# 
  2941  0611                     	;# 
  2942  0612                     	;# 
  2943  0613                     	;# 
  2944  0614                     	;# 
  2945  0616                     	;# 
  2946  0617                     	;# 
  2947  0618                     	;# 
  2948  0619                     	;# 
  2949  061A                     	;# 
  2950  061B                     	;# 
  2951  061C                     	;# 
  2952  061D                     	;# 
  2953  061E                     	;# 
  2954  068C                     	;# 
  2955  068D                     	;# 
  2956  068E                     	;# 
  2957  068F                     	;# 
  2958  0690                     	;# 
  2959  0691                     	;# 
  2960  0692                     	;# 
  2961  0693                     	;# 
  2962  0694                     	;# 
  2963  070C                     	;# 
  2964  070D                     	;# 
  2965  070E                     	;# 
  2966  070F                     	;# 
  2967  0710                     	;# 
  2968  0711                     	;# 
  2969  0712                     	;# 
  2970  0713                     	;# 
  2971  0714                     	;# 
  2972  0716                     	;# 
  2973  0717                     	;# 
  2974  0718                     	;# 
  2975  0719                     	;# 
  2976  071A                     	;# 
  2977  071B                     	;# 
  2978  071C                     	;# 
  2979  071D                     	;# 
  2980  071E                     	;# 
  2981  0796                     	;# 
  2982  0797                     	;# 
  2983  0798                     	;# 
  2984  0799                     	;# 
  2985  079A                     	;# 
  2986  079B                     	;# 
  2987  080C                     	;# 
  2988  080D                     	;# 
  2989  080E                     	;# 
  2990  080F                     	;# 
  2991  0810                     	;# 
  2992  0811                     	;# 
  2993  0812                     	;# 
  2994  0813                     	;# 
  2995  0814                     	;# 
  2996  081A                     	;# 
  2997  081B                     	;# 
  2998  081C                     	;# 
  2999  081D                     	;# 
  3000  081E                     	;# 
  3001  081F                     	;# 
  3002  088C                     	;# 
  3003  088D                     	;# 
  3004  088E                     	;# 
  3005  088F                     	;# 
  3006  0890                     	;# 
  3007  0891                     	;# 
  3008  0892                     	;# 
  3009  0893                     	;# 
  3010  0895                     	;# 
  3011  0896                     	;# 
  3012  0897                     	;# 
  3013  0898                     	;# 
  3014  0899                     	;# 
  3015  089A                     	;# 
  3016  089B                     	;# 
  3017  090C                     	;# 
  3018  090E                     	;# 
  3019  090F                     	;# 
  3020  091F                     	;# 
  3021  091F                     	;# 
  3022  098F                     	;# 
  3023  098F                     	;# 
  3024  0990                     	;# 
  3025  0991                     	;# 
  3026  0992                     	;# 
  3027  0993                     	;# 
  3028  0994                     	;# 
  3029  0995                     	;# 
  3030  0996                     	;# 
  3031  0997                     	;# 
  3032  0E0F                     	;# 
  3033  0E10                     	;# 
  3034  0E11                     	;# 
  3035  0E12                     	;# 
  3036  0E13                     	;# 
  3037  0E14                     	;# 
  3038  0E15                     	;# 
  3039  0E16                     	;# 
  3040  0E17                     	;# 
  3041  0E18                     	;# 
  3042  0E19                     	;# 
  3043  0E1A                     	;# 
  3044  0E1B                     	;# 
  3045  0E1C                     	;# 
  3046  0E1D                     	;# 
  3047  0E1E                     	;# 
  3048  0E1F                     	;# 
  3049  0E20                     	;# 
  3050  0E21                     	;# 
  3051  0E22                     	;# 
  3052  0E23                     	;# 
  3053  0E24                     	;# 
  3054  0E25                     	;# 
  3055  0E26                     	;# 
  3056  0E27                     	;# 
  3057  0E28                     	;# 
  3058  0E29                     	;# 
  3059  0E2A                     	;# 
  3060  0E2B                     	;# 
  3061  0E2C                     	;# 
  3062  0E2D                     	;# 
  3063  0E2E                     	;# 
  3064  0E2F                     	;# 
  3065  0E30                     	;# 
  3066  0E31                     	;# 
  3067  0E32                     	;# 
  3068  0E33                     	;# 
  3069  0E34                     	;# 
  3070  0E35                     	;# 
  3071  0E36                     	;# 
  3072  0E37                     	;# 
  3073  0E8F                     	;# 
  3074  0E90                     	;# 
  3075  0E91                     	;# 
  3076  0E92                     	;# 
  3077  0E93                     	;# 
  3078  0E94                     	;# 
  3079  0E95                     	;# 
  3080  0E96                     	;# 
  3081  0E97                     	;# 
  3082  0E9C                     	;# 
  3083  0E9D                     	;# 
  3084  0E9E                     	;# 
  3085  0EA1                     	;# 
  3086  0EA2                     	;# 
  3087  0EA3                     	;# 
  3088  0EA4                     	;# 
  3089  0EA5                     	;# 
  3090  0EA9                     	;# 
  3091  0EAA                     	;# 
  3092  0EAB                     	;# 
  3093  0EAC                     	;# 
  3094  0EB1                     	;# 
  3095  0EB2                     	;# 
  3096  0EB3                     	;# 
  3097  0EB8                     	;# 
  3098  0EB9                     	;# 
  3099  0EBA                     	;# 
  3100  0EBB                     	;# 
  3101  0EBC                     	;# 
  3102  0EBD                     	;# 
  3103  0EBE                     	;# 
  3104  0EC3                     	;# 
  3105  0EC5                     	;# 
  3106  0EC6                     	;# 
  3107  0EC7                     	;# 
  3108  0EC8                     	;# 
  3109  0EC9                     	;# 
  3110  0ECA                     	;# 
  3111  0ECB                     	;# 
  3112  0ECC                     	;# 
  3113  0F10                     	;# 
  3114  0F11                     	;# 
  3115  0F12                     	;# 
  3116  0F13                     	;# 
  3117  0F14                     	;# 
  3118  0F15                     	;# 
  3119  0F16                     	;# 
  3120  0F17                     	;# 
  3121  0F18                     	;# 
  3122  0F19                     	;# 
  3123  0F1A                     	;# 
  3124  0F1B                     	;# 
  3125  0F1C                     	;# 
  3126  0F1D                     	;# 
  3127  0F1E                     	;# 
  3128  0F1F                     	;# 
  3129  0F20                     	;# 
  3130  0F21                     	;# 
  3131  0F22                     	;# 
  3132  0F23                     	;# 
  3133  0F24                     	;# 
  3134  0F25                     	;# 
  3135  0F26                     	;# 
  3136  0F27                     	;# 
  3137  0F38                     	;# 
  3138  0F39                     	;# 
  3139  0F3A                     	;# 
  3140  0F3B                     	;# 
  3141  0F3C                     	;# 
  3142  0F3D                     	;# 
  3143  0F3E                     	;# 
  3144  0F3F                     	;# 
  3145  0F40                     	;# 
  3146  0F41                     	;# 
  3147  0F43                     	;# 
  3148  0F44                     	;# 
  3149  0F45                     	;# 
  3150  0F46                     	;# 
  3151  0F47                     	;# 
  3152  0F48                     	;# 
  3153  0F49                     	;# 
  3154  0F4A                     	;# 
  3155  0F4B                     	;# 
  3156  0F4C                     	;# 
  3157  0F4E                     	;# 
  3158  0F4F                     	;# 
  3159  0F50                     	;# 
  3160  0F51                     	;# 
  3161  0F52                     	;# 
  3162  0F53                     	;# 
  3163  0F54                     	;# 
  3164  0F55                     	;# 
  3165  0F56                     	;# 
  3166  0F57                     	;# 
  3167  0F65                     	;# 
  3168  0F68                     	;# 
  3169  0F69                     	;# 
  3170  0F6A                     	;# 
  3171  0F6B                     	;# 
  3172  0FE4                     	;# 
  3173  0FE5                     	;# 
  3174  0FE6                     	;# 
  3175  0FE7                     	;# 
  3176  0FE8                     	;# 
  3177  0FE9                     	;# 
  3178  0FEA                     	;# 
  3179  0FEB                     	;# 
  3180  0FED                     	;# 
  3181  0FEE                     	;# 
  3182  0FEF                     	;# 
  3183  0000                     	;# 
  3184  0001                     	;# 
  3185  0002                     	;# 
  3186  0003                     	;# 
  3187  0004                     	;# 
  3188  0005                     	;# 
  3189  0006                     	;# 
  3190  0007                     	;# 
  3191  0008                     	;# 
  3192  0009                     	;# 
  3193  000A                     	;# 
  3194  000B                     	;# 
  3195  000C                     	;# 
  3196  000D                     	;# 
  3197  000E                     	;# 
  3198  0010                     	;# 
  3199  0011                     	;# 
  3200  0012                     	;# 
  3201  0013                     	;# 
  3202  0016                     	;# 
  3203  0017                     	;# 
  3204  0018                     	;# 
  3205  001C                     	;# 
  3206  001C                     	;# 
  3207  001D                     	;# 
  3208  001D                     	;# 
  3209  001E                     	;# 
  3210  001F                     	;# 
  3211  008C                     	;# 
  3212  008C                     	;# 
  3213  008D                     	;# 
  3214  008E                     	;# 
  3215  008E                     	;# 
  3216  008F                     	;# 
  3217  0090                     	;# 
  3218  0090                     	;# 
  3219  0091                     	;# 
  3220  0093                     	;# 
  3221  0094                     	;# 
  3222  0095                     	;# 
  3223  0096                     	;# 
  3224  0097                     	;# 
  3225  0098                     	;# 
  3226  0099                     	;# 
  3227  009A                     	;# 
  3228  009B                     	;# 
  3229  009C                     	;# 
  3230  009D                     	;# 
  3231  009E                     	;# 
  3232  010C                     	;# 
  3233  010D                     	;# 
  3234  010E                     	;# 
  3235  010E                     	;# 
  3236  010F                     	;# 
  3237  0110                     	;# 
  3238  0110                     	;# 
  3239  0111                     	;# 
  3240  0112                     	;# 
  3241  0112                     	;# 
  3242  0113                     	;# 
  3243  0114                     	;# 
  3244  0114                     	;# 
  3245  0115                     	;# 
  3246  0116                     	;# 
  3247  0116                     	;# 
  3248  0117                     	;# 
  3249  0119                     	;# 
  3250  0119                     	;# 
  3251  0119                     	;# 
  3252  011A                     	;# 
  3253  011A                     	;# 
  3254  011A                     	;# 
  3255  011B                     	;# 
  3256  011B                     	;# 
  3257  011B                     	;# 
  3258  011B                     	;# 
  3259  011B                     	;# 
  3260  011C                     	;# 
  3261  011C                     	;# 
  3262  011C                     	;# 
  3263  011D                     	;# 
  3264  011D                     	;# 
  3265  011D                     	;# 
  3266  011E                     	;# 
  3267  011E                     	;# 
  3268  011E                     	;# 
  3269  011F                     	;# 
  3270  011F                     	;# 
  3271  011F                     	;# 
  3272  011F                     	;# 
  3273  011F                     	;# 
  3274  018C                     	;# 
  3275  018D                     	;# 
  3276  018E                     	;# 
  3277  018F                     	;# 
  3278  0190                     	;# 
  3279  0191                     	;# 
  3280  0192                     	;# 
  3281  0196                     	;# 
  3282  0197                     	;# 
  3283  0198                     	;# 
  3284  0199                     	;# 
  3285  019A                     	;# 
  3286  019B                     	;# 
  3287  019C                     	;# 
  3288  020C                     	;# 
  3289  020C                     	;# 
  3290  020D                     	;# 
  3291  020E                     	;# 
  3292  020F                     	;# 
  3293  020F                     	;# 
  3294  0210                     	;# 
  3295  0210                     	;# 
  3296  0211                     	;# 
  3297  0211                     	;# 
  3298  0212                     	;# 
  3299  0212                     	;# 
  3300  0213                     	;# 
  3301  0214                     	;# 
  3302  0215                     	;# 
  3303  0215                     	;# 
  3304  0216                     	;# 
  3305  0216                     	;# 
  3306  0217                     	;# 
  3307  0217                     	;# 
  3308  0218                     	;# 
  3309  0218                     	;# 
  3310  0219                     	;# 
  3311  021A                     	;# 
  3312  021B                     	;# 
  3313  021B                     	;# 
  3314  021C                     	;# 
  3315  021C                     	;# 
  3316  021D                     	;# 
  3317  021D                     	;# 
  3318  021E                     	;# 
  3319  021F                     	;# 
  3320  028C                     	;# 
  3321  028C                     	;# 
  3322  028D                     	;# 
  3323  028D                     	;# 
  3324  028E                     	;# 
  3325  028F                     	;# 
  3326  0290                     	;# 
  3327  0290                     	;# 
  3328  0291                     	;# 
  3329  0292                     	;# 
  3330  0292                     	;# 
  3331  0293                     	;# 
  3332  0293                     	;# 
  3333  0294                     	;# 
  3334  0295                     	;# 
  3335  0296                     	;# 
  3336  0296                     	;# 
  3337  0297                     	;# 
  3338  0298                     	;# 
  3339  0298                     	;# 
  3340  0299                     	;# 
  3341  0299                     	;# 
  3342  029A                     	;# 
  3343  029B                     	;# 
  3344  029C                     	;# 
  3345  029C                     	;# 
  3346  029D                     	;# 
  3347  030C                     	;# 
  3348  030C                     	;# 
  3349  030D                     	;# 
  3350  030E                     	;# 
  3351  030F                     	;# 
  3352  0310                     	;# 
  3353  0310                     	;# 
  3354  0311                     	;# 
  3355  0312                     	;# 
  3356  0313                     	;# 
  3357  0314                     	;# 
  3358  0314                     	;# 
  3359  0315                     	;# 
  3360  0316                     	;# 
  3361  0317                     	;# 
  3362  0318                     	;# 
  3363  0318                     	;# 
  3364  0319                     	;# 
  3365  031A                     	;# 
  3366  031B                     	;# 
  3367  031C                     	;# 
  3368  031C                     	;# 
  3369  031D                     	;# 
  3370  031E                     	;# 
  3371  031F                     	;# 
  3372  038C                     	;# 
  3373  038D                     	;# 
  3374  038E                     	;# 
  3375  0390                     	;# 
  3376  0391                     	;# 
  3377  0392                     	;# 
  3378  040C                     	;# 
  3379  040D                     	;# 
  3380  040E                     	;# 
  3381  040F                     	;# 
  3382  0410                     	;# 
  3383  0411                     	;# 
  3384  0416                     	;# 
  3385  0416                     	;# 
  3386  0417                     	;# 
  3387  0418                     	;# 
  3388  0418                     	;# 
  3389  0419                     	;# 
  3390  041A                     	;# 
  3391  041A                     	;# 
  3392  041B                     	;# 
  3393  041C                     	;# 
  3394  041C                     	;# 
  3395  041D                     	;# 
  3396  041E                     	;# 
  3397  041F                     	;# 
  3398  048C                     	;# 
  3399  048C                     	;# 
  3400  048D                     	;# 
  3401  048E                     	;# 
  3402  048F                     	;# 
  3403  048F                     	;# 
  3404  0490                     	;# 
  3405  0491                     	;# 
  3406  0492                     	;# 
  3407  0492                     	;# 
  3408  0493                     	;# 
  3409  0494                     	;# 
  3410  0495                     	;# 
  3411  0495                     	;# 
  3412  0496                     	;# 
  3413  0497                     	;# 
  3414  0498                     	;# 
  3415  0499                     	;# 
  3416  049A                     	;# 
  3417  049B                     	;# 
  3418  049C                     	;# 
  3419  049D                     	;# 
  3420  050C                     	;# 
  3421  050C                     	;# 
  3422  050D                     	;# 
  3423  050E                     	;# 
  3424  050F                     	;# 
  3425  050F                     	;# 
  3426  0510                     	;# 
  3427  0511                     	;# 
  3428  0512                     	;# 
  3429  0512                     	;# 
  3430  0513                     	;# 
  3431  0514                     	;# 
  3432  0515                     	;# 
  3433  0515                     	;# 
  3434  0516                     	;# 
  3435  0517                     	;# 
  3436  0518                     	;# 
  3437  0519                     	;# 
  3438  051A                     	;# 
  3439  051B                     	;# 
  3440  051C                     	;# 
  3441  051D                     	;# 
  3442  058C                     	;# 
  3443  058C                     	;# 
  3444  058D                     	;# 
  3445  058E                     	;# 
  3446  058F                     	;# 
  3447  058F                     	;# 
  3448  0590                     	;# 
  3449  0591                     	;# 
  3450  0592                     	;# 
  3451  0593                     	;# 
  3452  060C                     	;# 
  3453  060D                     	;# 
  3454  060E                     	;# 
  3455  060F                     	;# 
  3456  0610                     	;# 
  3457  0611                     	;# 
  3458  0612                     	;# 
  3459  0613                     	;# 
  3460  0614                     	;# 
  3461  0616                     	;# 
  3462  0617                     	;# 
  3463  0618                     	;# 
  3464  0619                     	;# 
  3465  061A                     	;# 
  3466  061B                     	;# 
  3467  061C                     	;# 
  3468  061D                     	;# 
  3469  061E                     	;# 
  3470  068C                     	;# 
  3471  068D                     	;# 
  3472  068E                     	;# 
  3473  068F                     	;# 
  3474  0690                     	;# 
  3475  0691                     	;# 
  3476  0692                     	;# 
  3477  0693                     	;# 
  3478  0694                     	;# 
  3479  070C                     	;# 
  3480  070D                     	;# 
  3481  070E                     	;# 
  3482  070F                     	;# 
  3483  0710                     	;# 
  3484  0711                     	;# 
  3485  0712                     	;# 
  3486  0713                     	;# 
  3487  0714                     	;# 
  3488  0716                     	;# 
  3489  0717                     	;# 
  3490  0718                     	;# 
  3491  0719                     	;# 
  3492  071A                     	;# 
  3493  071B                     	;# 
  3494  071C                     	;# 
  3495  071D                     	;# 
  3496  071E                     	;# 
  3497  0796                     	;# 
  3498  0797                     	;# 
  3499  0798                     	;# 
  3500  0799                     	;# 
  3501  079A                     	;# 
  3502  079B                     	;# 
  3503  080C                     	;# 
  3504  080D                     	;# 
  3505  080E                     	;# 
  3506  080F                     	;# 
  3507  0810                     	;# 
  3508  0811                     	;# 
  3509  0812                     	;# 
  3510  0813                     	;# 
  3511  0814                     	;# 
  3512  081A                     	;# 
  3513  081B                     	;# 
  3514  081C                     	;# 
  3515  081D                     	;# 
  3516  081E                     	;# 
  3517  081F                     	;# 
  3518  088C                     	;# 
  3519  088D                     	;# 
  3520  088E                     	;# 
  3521  088F                     	;# 
  3522  0890                     	;# 
  3523  0891                     	;# 
  3524  0892                     	;# 
  3525  0893                     	;# 
  3526  0895                     	;# 
  3527  0896                     	;# 
  3528  0897                     	;# 
  3529  0898                     	;# 
  3530  0899                     	;# 
  3531  089A                     	;# 
  3532  089B                     	;# 
  3533  090C                     	;# 
  3534  090E                     	;# 
  3535  090F                     	;# 
  3536  091F                     	;# 
  3537  091F                     	;# 
  3538  098F                     	;# 
  3539  098F                     	;# 
  3540  0990                     	;# 
  3541  0991                     	;# 
  3542  0992                     	;# 
  3543  0993                     	;# 
  3544  0994                     	;# 
  3545  0995                     	;# 
  3546  0996                     	;# 
  3547  0997                     	;# 
  3548  0E0F                     	;# 
  3549  0E10                     	;# 
  3550  0E11                     	;# 
  3551  0E12                     	;# 
  3552  0E13                     	;# 
  3553  0E14                     	;# 
  3554  0E15                     	;# 
  3555  0E16                     	;# 
  3556  0E17                     	;# 
  3557  0E18                     	;# 
  3558  0E19                     	;# 
  3559  0E1A                     	;# 
  3560  0E1B                     	;# 
  3561  0E1C                     	;# 
  3562  0E1D                     	;# 
  3563  0E1E                     	;# 
  3564  0E1F                     	;# 
  3565  0E20                     	;# 
  3566  0E21                     	;# 
  3567  0E22                     	;# 
  3568  0E23                     	;# 
  3569  0E24                     	;# 
  3570  0E25                     	;# 
  3571  0E26                     	;# 
  3572  0E27                     	;# 
  3573  0E28                     	;# 
  3574  0E29                     	;# 
  3575  0E2A                     	;# 
  3576  0E2B                     	;# 
  3577  0E2C                     	;# 
  3578  0E2D                     	;# 
  3579  0E2E                     	;# 
  3580  0E2F                     	;# 
  3581  0E30                     	;# 
  3582  0E31                     	;# 
  3583  0E32                     	;# 
  3584  0E33                     	;# 
  3585  0E34                     	;# 
  3586  0E35                     	;# 
  3587  0E36                     	;# 
  3588  0E37                     	;# 
  3589  0E8F                     	;# 
  3590  0E90                     	;# 
  3591  0E91                     	;# 
  3592  0E92                     	;# 
  3593  0E93                     	;# 
  3594  0E94                     	;# 
  3595  0E95                     	;# 
  3596  0E96                     	;# 
  3597  0E97                     	;# 
  3598  0E9C                     	;# 
  3599  0E9D                     	;# 
  3600  0E9E                     	;# 
  3601  0EA1                     	;# 
  3602  0EA2                     	;# 
  3603  0EA3                     	;# 
  3604  0EA4                     	;# 
  3605  0EA5                     	;# 
  3606  0EA9                     	;# 
  3607  0EAA                     	;# 
  3608  0EAB                     	;# 
  3609  0EAC                     	;# 
  3610  0EB1                     	;# 
  3611  0EB2                     	;# 
  3612  0EB3                     	;# 
  3613  0EB8                     	;# 
  3614  0EB9                     	;# 
  3615  0EBA                     	;# 
  3616  0EBB                     	;# 
  3617  0EBC                     	;# 
  3618  0EBD                     	;# 
  3619  0EBE                     	;# 
  3620  0EC3                     	;# 
  3621  0EC5                     	;# 
  3622  0EC6                     	;# 
  3623  0EC7                     	;# 
  3624  0EC8                     	;# 
  3625  0EC9                     	;# 
  3626  0ECA                     	;# 
  3627  0ECB                     	;# 
  3628  0ECC                     	;# 
  3629  0F10                     	;# 
  3630  0F11                     	;# 
  3631  0F12                     	;# 
  3632  0F13                     	;# 
  3633  0F14                     	;# 
  3634  0F15                     	;# 
  3635  0F16                     	;# 
  3636  0F17                     	;# 
  3637  0F18                     	;# 
  3638  0F19                     	;# 
  3639  0F1A                     	;# 
  3640  0F1B                     	;# 
  3641  0F1C                     	;# 
  3642  0F1D                     	;# 
  3643  0F1E                     	;# 
  3644  0F1F                     	;# 
  3645  0F20                     	;# 
  3646  0F21                     	;# 
  3647  0F22                     	;# 
  3648  0F23                     	;# 
  3649  0F24                     	;# 
  3650  0F25                     	;# 
  3651  0F26                     	;# 
  3652  0F27                     	;# 
  3653  0F38                     	;# 
  3654  0F39                     	;# 
  3655  0F3A                     	;# 
  3656  0F3B                     	;# 
  3657  0F3C                     	;# 
  3658  0F3D                     	;# 
  3659  0F3E                     	;# 
  3660  0F3F                     	;# 
  3661  0F40                     	;# 
  3662  0F41                     	;# 
  3663  0F43                     	;# 
  3664  0F44                     	;# 
  3665  0F45                     	;# 
  3666  0F46                     	;# 
  3667  0F47                     	;# 
  3668  0F48                     	;# 
  3669  0F49                     	;# 
  3670  0F4A                     	;# 
  3671  0F4B                     	;# 
  3672  0F4C                     	;# 
  3673  0F4E                     	;# 
  3674  0F4F                     	;# 
  3675  0F50                     	;# 
  3676  0F51                     	;# 
  3677  0F52                     	;# 
  3678  0F53                     	;# 
  3679  0F54                     	;# 
  3680  0F55                     	;# 
  3681  0F56                     	;# 
  3682  0F57                     	;# 
  3683  0F65                     	;# 
  3684  0F68                     	;# 
  3685  0F69                     	;# 
  3686  0F6A                     	;# 
  3687  0F6B                     	;# 
  3688  0FE4                     	;# 
  3689  0FE5                     	;# 
  3690  0FE6                     	;# 
  3691  0FE7                     	;# 
  3692  0FE8                     	;# 
  3693  0FE9                     	;# 
  3694  0FEA                     	;# 
  3695  0FEB                     	;# 
  3696  0FED                     	;# 
  3697  0FEE                     	;# 
  3698  0FEF                     	;# 
  3699                           
  3700                           	psect	idataBANK1
  3701  07B1                     __pidataBANK1:	
  3702                           
  3703                           ;initializer for _fsmStateTable
  3704  07B1  34D1               	retlw	low _do_I2C_IDLE
  3705  07B2  3407               	retlw	high _do_I2C_IDLE
  3706  07B3  34E7               	retlw	low _do_I2C_SEND_ADR_READ
  3707  07B4  3407               	retlw	high _do_I2C_SEND_ADR_READ
  3708  07B5  346F               	retlw	low _do_I2C_SEND_ADR_WRITE
  3709  07B6  340F               	retlw	high _do_I2C_SEND_ADR_WRITE
  3710  07B7  34F8               	retlw	low _do_I2C_TX
  3711  07B8  3406               	retlw	high _do_I2C_TX
  3712  07B9  3487               	retlw	low _do_I2C_RX
  3713  07BA  340F               	retlw	high _do_I2C_RX
  3714  07BB  3463               	retlw	low _do_I2C_RCEN
  3715  07BC  340F               	retlw	high _do_I2C_RCEN
  3716  07BD  34AD               	retlw	low _do_I2C_TX_EMPTY
  3717  07BE  3406               	retlw	high _do_I2C_TX_EMPTY
  3718  07BF  3499               	retlw	low _do_I2C_SEND_RESTART_READ
  3719  07C0  3407               	retlw	high _do_I2C_SEND_RESTART_READ
  3720  07C1  34F3               	retlw	low _do_I2C_SEND_RESTART_WRITE
  3721  07C2  3406               	retlw	high _do_I2C_SEND_RESTART_WRITE
  3722  07C3  34AC               	retlw	low _do_I2C_SEND_RESTART
  3723  07C4  3407               	retlw	high _do_I2C_SEND_RESTART
  3724  07C5  34A1               	retlw	low _do_I2C_SEND_STOP
  3725  07C6  3407               	retlw	high _do_I2C_SEND_STOP
  3726  07C7  3458               	retlw	low _do_I2C_DO_ACK
  3727  07C8  340F               	retlw	high _do_I2C_DO_ACK
  3728  07C9  34F7               	retlw	low _do_I2C_DO_NACK_STOP
  3729  07CA  340F               	retlw	high _do_I2C_DO_NACK_STOP
  3730  07CB  3482               	retlw	low _do_I2C_DO_NACK_RESTART
  3731  07CC  340F               	retlw	high _do_I2C_DO_NACK_RESTART
  3732  07CD  34DA               	retlw	low _do_I2C_RESET
  3733  07CE  3407               	retlw	high _do_I2C_RESET
  3734  07CF  3475               	retlw	low _do_I2C_DO_ADDRESS_NACK
  3735  07D0  3406               	retlw	high _do_I2C_DO_ADDRESS_NACK
  3736  0013                     _TRISC	set	19
  3737  0012                     _TRISB	set	18
  3738  0011                     _TRISA	set	17
  3739  0018                     _LATC	set	24
  3740  0017                     _LATB	set	23
  3741  0016                     _LATA	set	22
  3742  000B                     _INTCONbits	set	11
  3743  005F                     _GIE	set	95
  3744  018C                     _SSP1BUF	set	396
  3745  0191                     _SSP1CON2bits	set	401
  3746  018D                     _SSP1ADD	set	397
  3747  0191                     _SSP1CON2	set	401
  3748  0190                     _SSP1CON1	set	400
  3749  018F                     _SSP1STAT	set	399
  3750  0190                     _SSP1CON1bits	set	400
  3751  070F                     _PIR3bits	set	1807
  3752  0719                     _PIE3bits	set	1817
  3753  0892                     _OSCTUNE	set	2194
  3754  0893                     _OSCFRQ	set	2195
  3755  0891                     _OSCEN	set	2193
  3756  088F                     _OSCCON3	set	2191
  3757  088D                     _OSCCON1	set	2189
  3758  0EC5                     _SSP1CLKPPSbits	set	3781
  3759  0EC6                     _SSP1DATPPSbits	set	3782
  3760  0E8F                     _PPSLOCKbits	set	3727
  3761  0E8F                     _PPSLOCK	set	3727
  3762  0F24                     _RC4PPS	set	3876
  3763  0F23                     _RC3PPS	set	3875
  3764  0F50                     _ODCONC	set	3920
  3765  0F45                     _ODCONB	set	3909
  3766  0F3A                     _ODCONA	set	3898
  3767  0F4F                     _WPUC	set	3919
  3768  0F39                     _WPUA	set	3897
  3769  0F44                     _WPUB	set	3908
  3770  0F65                     _WPUE	set	3941
  3771  0F38                     _ANSELA	set	3896
  3772  0F43                     _ANSELB	set	3907
  3773  0F4E                     _ANSELC	set	3918
  3774                           
  3775                           ; #config settings
  3776  0000                     
  3777                           	psect	cinit
  3778  0023                     start_initialization:	
  3779  0023                     __initialization:	
  3780                           
  3781                           ; Initialize objects allocated to BANK1
  3782  0023  30B1               	movlw	low __pidataBANK1
  3783  0024  0084               	movwf	4
  3784  0025  3087               	movlw	(high __pidataBANK1)| (0+128)
  3785  0026  0085               	movwf	5
  3786  0027  30A0               	movlw	low __pdataBANK1
  3787  0028  0086               	movwf	6
  3788  0029  3000               	movlw	high __pdataBANK1
  3789  002A  0087               	movwf	7
  3790  002B  3020               	movlw	32
  3791  002C  318F  2752  3180   	fcall	init_ram
  3792  002F  30C0               	movlw	low __pbssBANK1
  3793                           
  3794                           ; Clear objects allocated to BANK0
  3795  0030  01DB               	clrf	__pbssBANK0& (0+127)
  3796  0031  01DC               	clrf	(__pbssBANK0+1)& (0+127)
  3797  0032  01DD               	clrf	(__pbssBANK0+2)& (0+127)
  3798  0033  01DE               	clrf	(__pbssBANK0+3)& (0+127)
  3799                           
  3800                           ; Clear objects allocated to BANK1
  3801  0034  0084               	movwf	4
  3802  0035  3000               	movlw	high __pbssBANK1
  3803  0036  0085               	movwf	5
  3804  0037  301D               	movlw	29
  3805  0038  318F  274C  3180   	fcall	clear_ram0
  3806  003B                     end_of_initialization:	
  3807                           ;End of C runtime variable initialization code
  3808                           
  3809  003B                     __end_of__initialization:	
  3810  003B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3811  003C  0020               	movlb	0
  3812  003D  283E               	ljmp	_main	;jump to C main() function
  3813  003E                     __pmaintext:	
  3814 ;;
  3815 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3816 ;;
  3817 ;; *************** function _main *****************
  3818 ;; Defined at:
  3819 ;;		line 57 in file "main.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  setSpeed        3   53[BANK0 ] float 
  3824 ;;  factor          3   50[BANK0 ] float 
  3825 ;;  temperature     3   56[BANK0 ] float 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : B1F/0
  3832 ;;		On exit  : 1F/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;Total ram usage:        9 bytes
  3840 ;; Hardware stack levels required when called:   19
  3841 ;; This function calls:
  3842 ;;		_SYSTEM_Initialize
  3843 ;;		_Thermo5_ReadTemperature
  3844 ;;		___ftadd
  3845 ;;		___ftdiv
  3846 ;;		___ftge
  3847 ;;		___ftmul
  3848 ;;		___ftsub
  3849 ;;		___fttol
  3850 ;;		_fan_setSpeed
  3851 ;; This function is called by:
  3852 ;;		Startup code after reset
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function _main
  3858  003E                     _main:	
  3859                           
  3860                           ;main.c: 59: SYSTEM_Initialize();
  3861                           
  3862                           ;incstack = 0
  3863 ;; hardware stack exceeded
  3864                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3865  003E  20EA  3180         	fcall	_SYSTEM_Initialize
  3866  0040  284B               	goto	l721
  3867  0041                     l4940:	
  3868                           
  3869                           ;main.c: 83: fan_setSpeed((uint16_t) 6000.0);
  3870  0041  3070               	movlw	112
  3871  0042  00B1               	movwf	fan_setSpeed@speed
  3872  0043  3017               	movlw	23
  3873  0044  2848               	goto	L2
  3874  0045                     l4944:	
  3875                           ;main.c: 84: } else if (temperature > 38.0) {
  3876                           
  3877                           
  3878                           ;main.c: 85: fan_setSpeed((uint16_t) 2000.0);
  3879  0045  30D0               	movlw	208
  3880  0046  00B1               	movwf	fan_setSpeed@speed
  3881  0047  3007               	movlw	7
  3882  0048                     L2:	
  3883  0048  00B2               	movwf	fan_setSpeed@speed+1
  3884  0049                     L1:	
  3885  0049  23C0  3180         	fcall	_fan_setSpeed
  3886  004B                     l721:	
  3887                           ;main.c: 76: float temperature;
  3888                           ;main.c: 78: while (1) {
  3889                           
  3890                           ;main.c: 86: } else {
  3891                           
  3892                           
  3893                           ;main.c: 80: temperature = Thermo5_ReadTemperature(INTERNAL_DIODE);
  3894  004B  3000               	movlw	0
  3895  004C  218A  3180         	fcall	_Thermo5_ReadTemperature
  3896  004E  0843               	movf	?_Thermo5_ReadTemperature,w
  3897  004F  00D8               	movwf	main@temperature
  3898  0050  0844               	movf	?_Thermo5_ReadTemperature+1,w
  3899  0051  00D9               	movwf	main@temperature+1
  3900  0052  0845               	movf	?_Thermo5_ReadTemperature+2,w
  3901  0053  00DA               	movwf	main@temperature+2
  3902                           
  3903                           ;main.c: 82: if (temperature < 32.0) {
  3904  0054  0858               	movf	main@temperature,w
  3905  0055  00A0               	movwf	___ftge@ff1
  3906  0056  0859               	movf	main@temperature+1,w
  3907  0057  00A1               	movwf	___ftge@ff1+1
  3908  0058  085A               	movf	main@temperature+2,w
  3909  0059  00A2               	movwf	___ftge@ff1+2
  3910  005A  3042               	movlw	66
  3911  005B  01A3               	clrf	___ftge@ff2
  3912  005C  01A4               	clrf	___ftge@ff2+1
  3913  005D  00A5               	movwf	___ftge@ff2+2
  3914  005E  20BE  3180         	fcall	___ftge
  3915  0060  1C03               	btfss	3,0
  3916  0061  2841               	goto	l4940
  3917  0062  3018               	movlw	24
  3918  0063  01A0               	clrf	___ftge@ff1
  3919  0064  00A1               	movwf	___ftge@ff1+1
  3920  0065  3042               	movlw	66
  3921  0066  00A2               	movwf	___ftge@ff1+2
  3922  0067  0858               	movf	main@temperature,w
  3923  0068  00A3               	movwf	___ftge@ff2
  3924  0069  0859               	movf	main@temperature+1,w
  3925  006A  00A4               	movwf	___ftge@ff2+1
  3926  006B  085A               	movf	main@temperature+2,w
  3927  006C  00A5               	movwf	___ftge@ff2+2
  3928  006D  20BE  3180         	fcall	___ftge
  3929  006F  1C03               	btfss	3,0
  3930  0070  2845               	goto	l4944
  3931                           
  3932                           ;main.c: 87: float factor = (temperature - 32.0) / (38.0 - 32.0);
  3933  0071  30C0               	movlw	192
  3934  0072  01B4               	clrf	___ftdiv@f2
  3935  0073  00B5               	movwf	___ftdiv@f2+1
  3936  0074  3040               	movlw	64
  3937  0075  00B6               	movwf	___ftdiv@f2+2
  3938  0076  30C2               	movlw	194
  3939  0077  01A8               	clrf	___ftadd@f1
  3940  0078  01A9               	clrf	___ftadd@f1+1
  3941  0079  00AA               	movwf	___ftadd@f1+2
  3942  007A  0858               	movf	main@temperature,w
  3943  007B  00AB               	movwf	___ftadd@f2
  3944  007C  0859               	movf	main@temperature+1,w
  3945  007D  00AC               	movwf	___ftadd@f2+1
  3946  007E  085A               	movf	main@temperature+2,w
  3947  007F  00AD               	movwf	___ftadd@f2+2
  3948  0080  22A2  3180         	fcall	___ftadd
  3949  0082  0828               	movf	?___ftadd,w
  3950  0083  00B7               	movwf	___ftdiv@f1
  3951  0084  0829               	movf	?___ftadd+1,w
  3952  0085  00B8               	movwf	___ftdiv@f1+1
  3953  0086  082A               	movf	?___ftadd+2,w
  3954  0087  00B9               	movwf	___ftdiv@f1+2
  3955  0088  212E  3180         	fcall	___ftdiv
  3956  008A  0834               	movf	?___ftdiv,w
  3957  008B  00D2               	movwf	main@factor
  3958  008C  0835               	movf	?___ftdiv+1,w
  3959  008D  00D3               	movwf	main@factor+1
  3960  008E  0836               	movf	?___ftdiv+2,w
  3961  008F  00D4               	movwf	main@factor+2
  3962                           
  3963                           ;main.c: 88: float setSpeed = 6000.0 - ((6000.0 - 2000.0) * factor);
  3964  0090  307A               	movlw	122
  3965  0091  01A8               	clrf	___ftmul@f1
  3966  0092  00A9               	movwf	___ftmul@f1+1
  3967  0093  3045               	movlw	69
  3968  0094  00AA               	movwf	___ftmul@f1+2
  3969  0095  0852               	movf	main@factor,w
  3970  0096  00AB               	movwf	___ftmul@f2
  3971  0097  0853               	movf	main@factor+1,w
  3972  0098  00AC               	movwf	___ftmul@f2+1
  3973  0099  0854               	movf	main@factor+2,w
  3974  009A  00AD               	movwf	___ftmul@f2+2
  3975  009B  2246  3180         	fcall	___ftmul
  3976  009D  0828               	movf	?___ftmul,w
  3977  009E  00B7               	movwf	___ftsub@f2
  3978  009F  0829               	movf	?___ftmul+1,w
  3979  00A0  00B8               	movwf	___ftsub@f2+1
  3980  00A1  082A               	movf	?___ftmul+2,w
  3981  00A2  00B9               	movwf	___ftsub@f2+2
  3982  00A3  3080               	movlw	128
  3983  00A4  00BA               	movwf	___ftsub@f1
  3984  00A5  30BB               	movlw	187
  3985  00A6  00BB               	movwf	___ftsub@f1+1
  3986  00A7  3045               	movlw	69
  3987  00A8  00BC               	movwf	___ftsub@f1+2
  3988  00A9  2350  3180         	fcall	___ftsub
  3989  00AB  0837               	movf	?___ftsub,w
  3990  00AC  00D5               	movwf	main@setSpeed
  3991  00AD  0838               	movf	?___ftsub+1,w
  3992  00AE  00D6               	movwf	main@setSpeed+1
  3993  00AF  0839               	movf	?___ftsub+2,w
  3994  00B0  00D7               	movwf	main@setSpeed+2
  3995                           
  3996                           ;main.c: 89: fan_setSpeed((uint16_t) setSpeed);
  3997  00B1  0855               	movf	main@setSpeed,w
  3998  00B2  00A0               	movwf	___fttol@f1
  3999  00B3  0856               	movf	main@setSpeed+1,w
  4000  00B4  00A1               	movwf	___fttol@f1+1
  4001  00B5  0857               	movf	main@setSpeed+2,w
  4002  00B6  00A2               	movwf	___fttol@f1+2
  4003  00B7  236B  3180         	fcall	___fttol
  4004  00B9  0821               	movf	?___fttol+1,w
  4005  00BA  00B2               	movwf	fan_setSpeed@speed+1
  4006  00BB  0820               	movf	?___fttol,w
  4007  00BC  00B1               	movwf	fan_setSpeed@speed
  4008  00BD  2849               	goto	L1
  4009  00BE                     __end_of_main:	
  4010  00BE                     __ptext6:	
  4011 ;; *************** function ___ftge *****************
  4012 ;; Defined at:
  4013 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  ff1             3    0[BANK0 ] float 
  4016 ;;  ff2             3    3[BANK0 ] float 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;		None               void
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 1F/0
  4025 ;;		On exit  : 1F/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4028 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;Total ram usage:        6 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    6
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function ___ftge
  4044  00BE                     ___ftge:	
  4045                           
  4046                           ;incstack = 0
  4047                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4048  00BE  1FA2               	btfss	___ftge@ff1+2,7
  4049  00BF  28CD               	goto	l3244
  4050  00C0  0820               	movf	___ftge@ff1,w
  4051  00C1  3C00               	sublw	0
  4052  00C2  00A0               	movwf	___ftge@ff1
  4053  00C3  0821               	movf	___ftge@ff1+1,w
  4054  00C4  1C03               	skipc
  4055  00C5  0F21               	incfsz	___ftge@ff1+1,w
  4056  00C6  3C00               	sublw	0
  4057  00C7  00A1               	movwf	___ftge@ff1+1
  4058  00C8  0822               	movf	___ftge@ff1+2,w
  4059  00C9  1C03               	skipc
  4060  00CA  0F22               	incfsz	___ftge@ff1+2,w
  4061  00CB  3C80               	sublw	128
  4062  00CC  00A2               	movwf	___ftge@ff1+2
  4063  00CD                     l3244:	
  4064  00CD  1FA5               	btfss	___ftge@ff2+2,7
  4065  00CE  28DC               	goto	l3248
  4066  00CF  0823               	movf	___ftge@ff2,w
  4067  00D0  3C00               	sublw	0
  4068  00D1  00A3               	movwf	___ftge@ff2
  4069  00D2  0824               	movf	___ftge@ff2+1,w
  4070  00D3  1C03               	skipc
  4071  00D4  0F24               	incfsz	___ftge@ff2+1,w
  4072  00D5  3C00               	sublw	0
  4073  00D6  00A4               	movwf	___ftge@ff2+1
  4074  00D7  0825               	movf	___ftge@ff2+2,w
  4075  00D8  1C03               	skipc
  4076  00D9  0F25               	incfsz	___ftge@ff2+2,w
  4077  00DA  3C80               	sublw	128
  4078  00DB  00A5               	movwf	___ftge@ff2+2
  4079  00DC                     l3248:	
  4080  00DC  3080               	movlw	128
  4081  00DD  06A2               	xorwf	___ftge@ff1+2,f
  4082  00DE  06A5               	xorwf	___ftge@ff2+2,f
  4083  00DF  0825               	movf	___ftge@ff2+2,w
  4084  00E0  0222               	subwf	___ftge@ff1+2,w
  4085  00E1  1D03               	skipz
  4086  00E2  0008               	return
  4087  00E3  0824               	movf	___ftge@ff2+1,w
  4088  00E4  0221               	subwf	___ftge@ff1+1,w
  4089  00E5  1D03               	skipz
  4090  00E6  0008               	return
  4091  00E7  0823               	movf	___ftge@ff2,w
  4092  00E8  0220               	subwf	___ftge@ff1,w
  4093  00E9  0008               	return
  4094  00EA                     __end_of___ftge:	
  4095  00EA                     __ptext13:	
  4096 ;; *************** function _SYSTEM_Initialize *****************
  4097 ;; Defined at:
  4098 ;;		line 83 in file "mcc_generated_files/mcc.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : B1F/0
  4109 ;;		On exit  : 1F/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;Total ram usage:        0 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:   18
  4119 ;; This function calls:
  4120 ;;		_OSCILLATOR_Initialize
  4121 ;;		_PIN_MANAGER_Initialize
  4122 ;;		_Thermo5_Initialize
  4123 ;;		_fan_Initialize
  4124 ;; This function is called by:
  4125 ;;		_main
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _SYSTEM_Initialize
  4131  00EA                     _SYSTEM_Initialize:	
  4132                           
  4133                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  4134                           
  4135                           ;incstack = 0
  4136 ;; hardware stack exceeded
  4137                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4138  00EA  20FA  3180         	fcall	_PIN_MANAGER_Initialize
  4139                           
  4140                           ;mcc.c: 87: OSCILLATOR_Initialize();
  4141  00EC  20F1  3180         	fcall	_OSCILLATOR_Initialize
  4142                           
  4143                           ;mcc.c: 88: fan_Initialize();
  4144  00EE  23EE  3180         	fcall	_fan_Initialize
  4145                           
  4146                           ;mcc.c: 89: Thermo5_Initialize();
  4147  00F0  2BDC               	ljmp	l4784
  4148  00F1                     __end_of_SYSTEM_Initialize:	
  4149  00F1                     __ptext73:	
  4150 ;; *************** function _OSCILLATOR_Initialize *****************
  4151 ;; Defined at:
  4152 ;;		line 92 in file "mcc_generated_files/mcc.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 1F/11
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;Total ram usage:        0 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    6
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_SYSTEM_Initialize
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _OSCILLATOR_Initialize
  4182  00F1                     _OSCILLATOR_Initialize:	
  4183                           
  4184                           ;mcc.c: 95: OSCCON1 = 0x62;
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4188  00F1  3062               	movlw	98
  4189  00F2  0031               	movlb	17	; select bank17
  4190  00F3  008D               	movwf	13	;volatile
  4191                           
  4192                           ;mcc.c: 97: OSCCON3 = 0x00;
  4193  00F4  018F               	clrf	15	;volatile
  4194                           
  4195                           ;mcc.c: 99: OSCEN = 0x00;
  4196  00F5  0191               	clrf	17	;volatile
  4197                           
  4198                           ;mcc.c: 101: OSCFRQ = 0x02;
  4199  00F6  3002               	movlw	2
  4200  00F7  0093               	movwf	19	;volatile
  4201                           
  4202                           ;mcc.c: 103: OSCTUNE = 0x00;
  4203  00F8  0192               	clrf	18	;volatile
  4204  00F9  0008               	return
  4205  00FA                     __end_of_OSCILLATOR_Initialize:	
  4206  00FA                     __ptext72:	
  4207 ;; *************** function _PIN_MANAGER_Initialize *****************
  4208 ;; Defined at:
  4209 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  state           1    0[BANK0 ] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0
  4218 ;; Tracked objects:
  4219 ;;		On entry : B1F/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;Total ram usage:        1 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    6
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_SYSTEM_Initialize
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _PIN_MANAGER_Initialize
  4239  00FA                     _PIN_MANAGER_Initialize:	
  4240                           
  4241                           ;pin_manager.c: 56: LATA = 0x00;
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4245  00FA  0196               	clrf	22	;volatile
  4246                           
  4247                           ;pin_manager.c: 57: LATB = 0x00;
  4248  00FB  0197               	clrf	23	;volatile
  4249                           
  4250                           ;pin_manager.c: 58: LATC = 0x00;
  4251  00FC  0198               	clrf	24	;volatile
  4252                           
  4253                           ;pin_manager.c: 63: TRISA = 0xFF;
  4254  00FD  30FF               	movlw	255
  4255  00FE  0091               	movwf	17	;volatile
  4256                           
  4257                           ;pin_manager.c: 64: TRISB = 0xFF;
  4258  00FF  0092               	movwf	18	;volatile
  4259                           
  4260                           ;pin_manager.c: 65: TRISC = 0xFF;
  4261  0100  0093               	movwf	19	;volatile
  4262                           
  4263                           ;pin_manager.c: 70: ANSELC = 0xE7;
  4264  0101  30E7               	movlw	231
  4265  0102  003E               	movlb	30	; select bank30
  4266  0103  00CE               	movwf	78	;volatile
  4267                           
  4268                           ;pin_manager.c: 71: ANSELB = 0xFF;
  4269  0104  30FF               	movlw	255
  4270  0105  00C3               	movwf	67	;volatile
  4271                           
  4272                           ;pin_manager.c: 72: ANSELA = 0xFF;
  4273  0106  00B8               	movwf	56	;volatile
  4274                           
  4275                           ;pin_manager.c: 77: WPUE = 0x00;
  4276  0107  01E5               	clrf	101	;volatile
  4277                           
  4278                           ;pin_manager.c: 78: WPUB = 0x00;
  4279  0108  01C4               	clrf	68	;volatile
  4280                           
  4281                           ;pin_manager.c: 79: WPUA = 0x00;
  4282  0109  01B9               	clrf	57	;volatile
  4283                           
  4284                           ;pin_manager.c: 80: WPUC = 0x00;
  4285  010A  01CF               	clrf	79	;volatile
  4286                           
  4287                           ;pin_manager.c: 85: ODCONA = 0x00;
  4288  010B  01BA               	clrf	58	;volatile
  4289                           
  4290                           ;pin_manager.c: 86: ODCONB = 0x00;
  4291  010C  01C5               	clrf	69	;volatile
  4292                           
  4293                           ;pin_manager.c: 87: ODCONC = 0x00;
  4294  010D  01D0               	clrf	80	;volatile
  4295                           
  4296                           ;pin_manager.c: 94: bool state = GIE;
  4297  010E  3000               	movlw	0
  4298  010F  1B8B               	btfsc	11,7	;volatile
  4299  0110  3001               	movlw	1
  4300  0111  0020               	movlb	0	; select bank0
  4301  0112  00A0               	movwf	PIN_MANAGER_Initialize@state
  4302                           
  4303                           ;pin_manager.c: 95: GIE = 0;
  4304  0113  138B               	bcf	11,7	;volatile
  4305                           
  4306                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  4307                           
  4308                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  4309  0114  2661  3180         	fcall	PL257	;call to abstracted procedure
  4310                           
  4311                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  4312  0116  100F               	bcf	15,0	;volatile
  4313                           
  4314                           ;pin_manager.c: 100: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  4315  0117  0846               	movf	70,w	;volatile
  4316  0118  39E0               	andlw	-32
  4317  0119  3813               	iorlw	19
  4318  011A  00C6               	movwf	70	;volatile
  4319                           
  4320                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  4321  011B  0845               	movf	69,w	;volatile
  4322  011C  39E0               	andlw	-32
  4323  011D  3814               	iorlw	20
  4324  011E  00C5               	movwf	69	;volatile
  4325                           
  4326                           ;pin_manager.c: 102: RC3PPS = 0x15;
  4327  011F  3015               	movlw	21
  4328  0120  003E               	movlb	30	; select bank30
  4329  0121  00A3               	movwf	35	;volatile
  4330                           
  4331                           ;pin_manager.c: 103: RC4PPS = 0x14;
  4332  0122  3014               	movlw	20
  4333  0123  00A4               	movwf	36	;volatile
  4334                           
  4335                           ;pin_manager.c: 105: PPSLOCK = 0x55;
  4336                           
  4337                           ;pin_manager.c: 106: PPSLOCK = 0xAA;
  4338  0124  2661  3180         	fcall	PL257	;call to abstracted procedure
  4339                           
  4340                           ;pin_manager.c: 107: PPSLOCKbits.PPSLOCKED = 0x01;
  4341  0126  140F               	bsf	15,0	;volatile
  4342                           
  4343                           ;pin_manager.c: 109: GIE = state;
  4344  0127  0020               	movlb	0	; select bank0
  4345  0128  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  4346  0129  292C               	goto	u1230
  4347  012A  178B               	bsf	11,7	;volatile
  4348  012B  0008               	return
  4349  012C                     u1230:	
  4350  012C  138B               	bcf	11,7	;volatile
  4351  012D  0008               	return
  4352  012E                     __end_of_PIN_MANAGER_Initialize:	
  4353  012E                     __ptext9:	
  4354 ;; *************** function ___ftdiv *****************
  4355 ;; Defined at:
  4356 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  f2              3   20[BANK0 ] float 
  4359 ;;  f1              3   23[BANK0 ] float 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  f3              3   30[BANK0 ] float 
  4362 ;;  sign            1   34[BANK0 ] unsigned char 
  4363 ;;  exp             1   33[BANK0 ] unsigned char 
  4364 ;;  cntr            1   29[BANK0 ] unsigned char 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  3   20[BANK0 ] float 
  4367 ;; Registers used:
  4368 ;;		wreg, status,2, status,0, pclath, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 1F/0
  4371 ;;		On exit  : 1F/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;Total ram usage:       15 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    7
  4381 ;; This function calls:
  4382 ;;		___ftpack
  4383 ;; This function is called by:
  4384 ;;		_Thermo5_ReadTemperature
  4385 ;;		_main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           
  4390                           ;psect for function ___ftdiv
  4391  012E                     ___ftdiv:	
  4392                           
  4393                           ;incstack = 0
  4394                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4395  012E  0837               	movf	___ftdiv@f1,w
  4396  012F  00BA               	movwf	??___ftdiv
  4397  0130  0838               	movf	___ftdiv@f1+1,w
  4398  0131  00BB               	movwf	??___ftdiv+1
  4399  0132  0839               	movf	___ftdiv@f1+2,w
  4400  0133  00BC               	movwf	??___ftdiv+2
  4401  0134  1003               	clrc
  4402  0135  0D3B               	rlf	??___ftdiv+1,w
  4403  0136  0D3C               	rlf	??___ftdiv+2,w
  4404  0137  00C1               	movwf	___ftdiv@exp
  4405  0138  0841               	movf	___ftdiv@exp,w
  4406  0139  1D03               	btfss	3,2
  4407  013A  293C               	goto	l3028
  4408  013B  2E71               	ljmp	PL265	;call to abstracted procedure
  4409  013C                     l3028:	
  4410  013C  0834               	movf	___ftdiv@f2,w
  4411  013D  00BA               	movwf	??___ftdiv
  4412  013E  0835               	movf	___ftdiv@f2+1,w
  4413  013F  00BB               	movwf	??___ftdiv+1
  4414  0140  0836               	movf	___ftdiv@f2+2,w
  4415  0141  00BC               	movwf	??___ftdiv+2
  4416  0142  1003               	clrc
  4417  0143  0D3B               	rlf	??___ftdiv+1,w
  4418  0144  0D3C               	rlf	??___ftdiv+2,w
  4419  0145  00C2               	movwf	___ftdiv@sign
  4420  0146  0842               	movf	___ftdiv@sign,w
  4421  0147  1D03               	btfss	3,2
  4422  0148  294A               	goto	l1020
  4423  0149  2E71               	ljmp	PL265	;call to abstracted procedure
  4424  014A                     l1020:	
  4425  014A  3089               	movlw	137
  4426  014B  01BE               	clrf	___ftdiv@f3
  4427  014C  01BF               	clrf	___ftdiv@f3+1
  4428  014D  01C0               	clrf	___ftdiv@f3+2
  4429  014E  0742               	addwf	___ftdiv@sign,w
  4430  014F  00BA               	movwf	??___ftdiv
  4431  0150  02C1               	subwf	___ftdiv@exp,f
  4432  0151  0839               	movf	___ftdiv@f1+2,w
  4433  0152  00C2               	movwf	___ftdiv@sign
  4434  0153  0836               	movf	___ftdiv@f2+2,w
  4435  0154  06C2               	xorwf	___ftdiv@sign,f
  4436  0155  3080               	movlw	128
  4437  0156  05C2               	andwf	___ftdiv@sign,f
  4438  0157  3018               	movlw	24
  4439  0158  17B8               	bsf	___ftdiv@f1+1,7
  4440  0159  01B9               	clrf	___ftdiv@f1+2
  4441  015A  17B5               	bsf	___ftdiv@f2+1,7
  4442  015B  01B6               	clrf	___ftdiv@f2+2
  4443  015C  00BD               	movwf	___ftdiv@cntr
  4444  015D                     l3050:	
  4445  015D  35BE               	lslf	___ftdiv@f3,f
  4446  015E  0DBF               	rlf	___ftdiv@f3+1,f
  4447  015F  0DC0               	rlf	___ftdiv@f3+2,f
  4448  0160  0836               	movf	___ftdiv@f2+2,w
  4449  0161  0239               	subwf	___ftdiv@f1+2,w
  4450  0162  1D03               	skipz
  4451  0163  296A               	goto	u1465
  4452  0164  0835               	movf	___ftdiv@f2+1,w
  4453  0165  0238               	subwf	___ftdiv@f1+1,w
  4454  0166  1D03               	skipz
  4455  0167  296A               	goto	u1465
  4456  0168  0834               	movf	___ftdiv@f2,w
  4457  0169  0237               	subwf	___ftdiv@f1,w
  4458  016A                     u1465:	
  4459  016A  1C03               	skipc
  4460  016B  2973               	goto	l3056
  4461  016C  0834               	movf	___ftdiv@f2,w
  4462  016D  02B7               	subwf	___ftdiv@f1,f
  4463  016E  0835               	movf	___ftdiv@f2+1,w
  4464  016F  3BB8               	subwfb	___ftdiv@f1+1,f
  4465  0170  0836               	movf	___ftdiv@f2+2,w
  4466  0171  3BB9               	subwfb	___ftdiv@f1+2,f
  4467  0172  143E               	bsf	___ftdiv@f3,0
  4468  0173                     l3056:	
  4469  0173  35B7               	lslf	___ftdiv@f1,f
  4470  0174  0DB8               	rlf	___ftdiv@f1+1,f
  4471  0175  0DB9               	rlf	___ftdiv@f1+2,f
  4472  0176  0BBD               	decfsz	___ftdiv@cntr,f
  4473  0177  295D               	goto	l3050
  4474  0178  083E               	movf	___ftdiv@f3,w
  4475  0179  00A0               	movwf	___ftpack@arg
  4476  017A  083F               	movf	___ftdiv@f3+1,w
  4477  017B  00A1               	movwf	___ftpack@arg+1
  4478  017C  0840               	movf	___ftdiv@f3+2,w
  4479  017D  00A2               	movwf	___ftpack@arg+2
  4480  017E  0841               	movf	___ftdiv@exp,w
  4481  017F  00A3               	movwf	___ftpack@exp
  4482  0180  0842               	movf	___ftdiv@sign,w
  4483  0181  00A4               	movwf	___ftpack@sign
  4484  0182  2208               	fcall	___ftpack
  4485  0183  0820               	movf	?___ftpack,w
  4486  0184  00B4               	movwf	?___ftdiv
  4487  0185  0821               	movf	?___ftpack+1,w
  4488  0186  00B5               	movwf	?___ftdiv+1
  4489  0187  0822               	movf	?___ftpack+2,w
  4490  0188  00B6               	movwf	?___ftdiv+2
  4491  0189  0008               	return
  4492  018A                     __end_of___ftdiv:	
  4493  018A                     __ptext7:	
  4494 ;; *************** function _Thermo5_ReadTemperature *****************
  4495 ;; Defined at:
  4496 ;;		line 92 in file "mcc_generated_files/Thermo5Drivers/Thermo5.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  sensor          1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  sensor          1   42[BANK0 ] unsigned char 
  4501 ;;  temp            3   47[BANK0 ] float 
  4502 ;;  dataL           2   45[BANK0 ] unsigned int 
  4503 ;;  dataH           2   43[BANK0 ] unsigned int 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  3   35[BANK0 ] float 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 1F/0
  4510 ;;		On exit  : 1F/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4513 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;Total ram usage:       15 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:   16
  4520 ;; This function calls:
  4521 ;;		_Read_Thermo_Register
  4522 ;;		___ftdiv
  4523 ;;		___lwtoft
  4524 ;; This function is called by:
  4525 ;;		_main
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           
  4530                           ;psect for function _Thermo5_ReadTemperature
  4531  018A                     _Thermo5_ReadTemperature:	
  4532                           
  4533                           ;incstack = 0
  4534 ;; hardware stack exceeded
  4535                           ; Regs used in _Thermo5_ReadTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4536                           ;Thermo5_ReadTemperature@sensor stored from wreg
  4537  018A  00CA               	movwf	Thermo5_ReadTemperature@sensor
  4538                           
  4539                           ;Thermo5.c: 93: uint16_t dataH, dataL;
  4540                           ;Thermo5.c: 94: switch (sensor) {
  4541  018B  29A9               	goto	l4904
  4542  018C                     l4894:	
  4543                           
  4544                           ;Thermo5.c: 96: dataH = Read_Thermo_Register(0x00);
  4545  018C  3000               	movlw	0
  4546  018D  21F2  3180         	fcall	_Read_Thermo_Register
  4547  018F  00CB               	movwf	Thermo5_ReadTemperature@dataH
  4548  0190  3029               	movlw	41
  4549  0191  29A3               	goto	L8
  4550  0192                     l4896:	
  4551                           ;Thermo5.c: 98: break;
  4552                           
  4553                           ;Thermo5.c: 97: dataL = Read_Thermo_Register(0x29);
  4554                           
  4555                           
  4556                           ;Thermo5.c: 100: dataH = Read_Thermo_Register(0x01);
  4557  0192  3001               	movlw	1
  4558  0193  21F2  3180         	fcall	_Read_Thermo_Register
  4559  0195  00CB               	movwf	Thermo5_ReadTemperature@dataH
  4560  0196  3010               	movlw	16
  4561  0197  29A3               	goto	L8
  4562  0198                     l4898:	
  4563                           ;Thermo5.c: 102: break;
  4564                           
  4565                           ;Thermo5.c: 101: dataL = Read_Thermo_Register(0x10);
  4566                           
  4567                           
  4568                           ;Thermo5.c: 104: dataH = Read_Thermo_Register(0x23);
  4569  0198  3023               	movlw	35
  4570  0199  21F2  3180         	fcall	_Read_Thermo_Register
  4571  019B  00CB               	movwf	Thermo5_ReadTemperature@dataH
  4572  019C  3024               	movlw	36
  4573  019D  29A3               	goto	L8
  4574  019E                     l4900:	
  4575                           ;Thermo5.c: 106: break;
  4576                           
  4577                           ;Thermo5.c: 105: dataL = Read_Thermo_Register(0x24);
  4578                           
  4579                           
  4580                           ;Thermo5.c: 108: dataH = Read_Thermo_Register(0x2A);
  4581  019E  302A               	movlw	42
  4582  019F  21F2  3180         	fcall	_Read_Thermo_Register
  4583  01A1  00CB               	movwf	Thermo5_ReadTemperature@dataH
  4584  01A2  302B               	movlw	43
  4585  01A3                     L8:	
  4586  01A3  01CC               	clrf	Thermo5_ReadTemperature@dataH+1
  4587                           
  4588                           ;Thermo5.c: 109: dataL = Read_Thermo_Register(0x2B);
  4589  01A4  21F2  3180         	fcall	_Read_Thermo_Register
  4590  01A6  00CD               	movwf	Thermo5_ReadTemperature@dataL
  4591  01A7  01CE               	clrf	Thermo5_ReadTemperature@dataL+1
  4592                           
  4593                           ;Thermo5.c: 110: break;
  4594  01A8  29B7               	goto	l4906
  4595  01A9                     l4904:	
  4596  01A9  084A               	movf	Thermo5_ReadTemperature@sensor,w
  4597                           
  4598                           ; Switch size 1, requested type "space"
  4599                           ; Number of cases is 4, Range of values is 0 to 3
  4600                           ; switch strategies available:
  4601                           ; Name         Instructions Cycles
  4602                           ; simple_byte           13     7 (average)
  4603                           ; direct_byte           14     6 (fixed)
  4604                           ; jumptable            260     6 (fixed)
  4605                           ;	Chosen strategy is simple_byte
  4606  01AA  3A00               	xorlw	0	; case 0
  4607  01AB  1903               	skipnz
  4608  01AC  298C               	goto	l4894
  4609  01AD  3A01               	xorlw	1	; case 1
  4610  01AE  1903               	skipnz
  4611  01AF  2992               	goto	l4896
  4612  01B0  3A03               	xorlw	3	; case 2
  4613  01B1  1903               	skipnz
  4614  01B2  2998               	goto	l4898
  4615  01B3  3A01               	xorlw	1	; case 3
  4616  01B4  1903               	skipnz
  4617  01B5  299E               	goto	l4900
  4618  01B6  29B7               	goto	l4906
  4619  01B7                     l4906:	
  4620                           
  4621                           ;Thermo5.c: 112: float temp = (float) ((dataH << 3) + (dataL >> 5));
  4622  01B7  084C               	movf	Thermo5_ReadTemperature@dataH+1,w
  4623  01B8  00C7               	movwf	??_Thermo5_ReadTemperature+1
  4624  01B9  084B               	movf	Thermo5_ReadTemperature@dataH,w
  4625  01BA  00C6               	movwf	??_Thermo5_ReadTemperature
  4626  01BB  35C6               	lslf	??_Thermo5_ReadTemperature,f
  4627  01BC  0DC7               	rlf	??_Thermo5_ReadTemperature+1,f
  4628  01BD  35C6               	lslf	??_Thermo5_ReadTemperature,f
  4629  01BE  0DC7               	rlf	??_Thermo5_ReadTemperature+1,f
  4630  01BF  35C6               	lslf	??_Thermo5_ReadTemperature,f
  4631  01C0  0DC7               	rlf	??_Thermo5_ReadTemperature+1,f
  4632  01C1  0846               	movf	??_Thermo5_ReadTemperature,w
  4633  01C2  00A8               	movwf	___lwtoft@c
  4634  01C3  0847               	movf	??_Thermo5_ReadTemperature+1,w
  4635  01C4  00A9               	movwf	___lwtoft@c+1
  4636  01C5  084E               	movf	Thermo5_ReadTemperature@dataL+1,w
  4637  01C6  00C9               	movwf	??_Thermo5_ReadTemperature+3
  4638  01C7  084D               	movf	Thermo5_ReadTemperature@dataL,w
  4639  01C8  00C8               	movwf	??_Thermo5_ReadTemperature+2
  4640  01C9  3005               	movlw	5
  4641  01CA                     u2945:	
  4642  01CA  36C9               	lsrf	??_Thermo5_ReadTemperature+3,f
  4643  01CB  0CC8               	rrf	??_Thermo5_ReadTemperature+2,f
  4644  01CC  0B89               	decfsz	9,f
  4645  01CD  29CA               	goto	u2945
  4646  01CE  0848               	movf	??_Thermo5_ReadTemperature+2,w
  4647  01CF  07A8               	addwf	___lwtoft@c,f
  4648  01D0  0849               	movf	??_Thermo5_ReadTemperature+3,w
  4649  01D1  3DA9               	addwfc	___lwtoft@c+1,f
  4650  01D2  21F8  3180         	fcall	___lwtoft
  4651  01D4  0828               	movf	?___lwtoft,w
  4652  01D5  00CF               	movwf	Thermo5_ReadTemperature@temp
  4653  01D6  0829               	movf	?___lwtoft+1,w
  4654  01D7  00D0               	movwf	Thermo5_ReadTemperature@temp+1
  4655  01D8  082A               	movf	?___lwtoft+2,w
  4656  01D9  00D1               	movwf	Thermo5_ReadTemperature@temp+2
  4657                           
  4658                           ;Thermo5.c: 113: temp /= 8;
  4659  01DA  3041               	movlw	65
  4660  01DB  01B4               	clrf	___ftdiv@f2
  4661  01DC  01B5               	clrf	___ftdiv@f2+1
  4662  01DD  00B6               	movwf	___ftdiv@f2+2
  4663  01DE  084F               	movf	Thermo5_ReadTemperature@temp,w
  4664  01DF  00B7               	movwf	___ftdiv@f1
  4665  01E0  0850               	movf	Thermo5_ReadTemperature@temp+1,w
  4666  01E1  00B8               	movwf	___ftdiv@f1+1
  4667  01E2  0851               	movf	Thermo5_ReadTemperature@temp+2,w
  4668  01E3  00B9               	movwf	___ftdiv@f1+2
  4669  01E4  212E               	fcall	___ftdiv
  4670  01E5  0834               	movf	?___ftdiv,w
  4671  01E6  00CF               	movwf	Thermo5_ReadTemperature@temp
  4672  01E7  0835               	movf	?___ftdiv+1,w
  4673  01E8  00D0               	movwf	Thermo5_ReadTemperature@temp+1
  4674  01E9  0836               	movf	?___ftdiv+2,w
  4675  01EA  00D1               	movwf	Thermo5_ReadTemperature@temp+2
  4676                           
  4677                           ;Thermo5.c: 114: return temp;
  4678  01EB  084F               	movf	Thermo5_ReadTemperature@temp,w
  4679  01EC  00C3               	movwf	?_Thermo5_ReadTemperature
  4680  01ED  0850               	movf	Thermo5_ReadTemperature@temp+1,w
  4681  01EE  00C4               	movwf	?_Thermo5_ReadTemperature+1
  4682  01EF  0851               	movf	Thermo5_ReadTemperature@temp+2,w
  4683  01F0  00C5               	movwf	?_Thermo5_ReadTemperature+2
  4684  01F1  0008               	return
  4685  01F2                     __end_of_Thermo5_ReadTemperature:	
  4686  01F2                     __ptext11:	
  4687 ;; *************** function _Read_Thermo_Register *****************
  4688 ;; Defined at:
  4689 ;;		line 83 in file "mcc_generated_files/Thermo5Drivers/Thermo5.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  addr            1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  addr            1   18[BANK0 ] unsigned char 
  4694 ;;  data            1   19[BANK0 ] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      unsigned char 
  4697 ;; Registers used:
  4698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 1F/0
  4701 ;;		On exit  : 1F/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:   15
  4711 ;; This function calls:
  4712 ;;		_i2c_read1ByteRegister
  4713 ;; This function is called by:
  4714 ;;		_Thermo5_ReadTemperature
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _Read_Thermo_Register
  4720  01F2                     _Read_Thermo_Register:	
  4721                           
  4722                           ;incstack = 0
  4723 ;; hardware stack exceeded
  4724                           ; Regs used in _Read_Thermo_Register: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4725                           ;Read_Thermo_Register@addr stored from wreg
  4726  01F2  00B2               	movwf	Read_Thermo_Register@addr
  4727                           
  4728                           ;Thermo5.c: 84: uint8_t data = i2c_read1ByteRegister(0b1001100, addr);
  4729  01F3  00AC               	movwf	i2c_read1ByteRegister@reg
  4730  01F4  304C               	movlw	76
  4731  01F5  249D               	fcall	_i2c_read1ByteRegister
  4732  01F6  00B3               	movwf	Read_Thermo_Register@data
  4733                           
  4734                           ;Thermo5.c: 85: return data;
  4735  01F7  0008               	return
  4736  01F8                     __end_of_Read_Thermo_Register:	
  4737  01F8                     __ptext8:	
  4738 ;; *************** function ___lwtoft *****************
  4739 ;; Defined at:
  4740 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwtoft.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  c               2    8[BANK0 ] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  3    8[BANK0 ] float 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0, pclath, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 1F/0
  4751 ;;		On exit  : 1F/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:        3 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    7
  4761 ;; This function calls:
  4762 ;;		___ftpack
  4763 ;; This function is called by:
  4764 ;;		_Thermo5_ReadTemperature
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function ___lwtoft
  4770  01F8                     ___lwtoft:	
  4771                           
  4772                           ;incstack = 0
  4773                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4774  01F8  0828               	movf	___lwtoft@c,w
  4775  01F9  00A0               	movwf	___ftpack@arg
  4776  01FA  0829               	movf	___lwtoft@c+1,w
  4777  01FB  00A1               	movwf	___ftpack@arg+1
  4778  01FC  308E               	movlw	142
  4779  01FD  01A2               	clrf	___ftpack@arg+2
  4780  01FE  00A3               	movwf	___ftpack@exp
  4781  01FF  01A4               	clrf	___ftpack@sign
  4782  0200  2208               	fcall	___ftpack
  4783  0201  0820               	movf	?___ftpack,w
  4784  0202  00A8               	movwf	?___lwtoft
  4785  0203  0821               	movf	?___ftpack+1,w
  4786  0204  00A9               	movwf	?___lwtoft+1
  4787  0205  0822               	movf	?___ftpack+2,w
  4788  0206  00AA               	movwf	?___lwtoft+2
  4789  0207  0008               	return
  4790  0208                     __end_of___lwtoft:	
  4791  0208                     __ptext10:	
  4792 ;; *************** function ___ftpack *****************
  4793 ;; Defined at:
  4794 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  arg             3    0[BANK0 ] unsigned um
  4797 ;;  exp             1    3[BANK0 ] unsigned char 
  4798 ;;  sign            1    4[BANK0 ] unsigned char 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  3    0[BANK0 ] float 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 1F/0
  4807 ;;		On exit  : 1F/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4810 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;Total ram usage:        8 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    6
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		___ftadd
  4821 ;;		___ftdiv
  4822 ;;		___ftmul
  4823 ;;		___lwtoft
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           
  4828                           ;psect for function ___ftpack
  4829  0208                     ___ftpack:	
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4833  0208  0823               	movf	___ftpack@exp,w
  4834  0209  1903               	btfsc	3,2
  4835  020A  2A10               	goto	l966
  4836  020B  0822               	movf	___ftpack@arg+2,w
  4837  020C  0421               	iorwf	___ftpack@arg+1,w
  4838  020D  0420               	iorwf	___ftpack@arg,w
  4839  020E  1D03               	skipz
  4840  020F  2A18               	goto	l2778
  4841  0210                     l966:	
  4842  0210  01A0               	clrf	?___ftpack
  4843  0211  01A1               	clrf	?___ftpack+1
  4844  0212  01A2               	clrf	?___ftpack+2
  4845  0213  0008               	return
  4846  0214                     l2776:	
  4847  0214  0AA3               	incf	___ftpack@exp,f
  4848  0215  36A2               	lsrf	___ftpack@arg+2,f
  4849  0216  0CA1               	rrf	___ftpack@arg+1,f
  4850  0217  0CA0               	rrf	___ftpack@arg,f
  4851  0218                     l2778:	
  4852  0218  30FE               	movlw	254
  4853  0219  0522               	andwf	___ftpack@arg+2,w
  4854  021A  1903               	btfsc	3,2
  4855  021B  2A26               	goto	l2782
  4856  021C  2A14               	goto	l2776
  4857  021D                     l2780:	
  4858  021D  0AA3               	incf	___ftpack@exp,f
  4859  021E  0AA0               	incf	___ftpack@arg,f
  4860  021F  1903               	skipnz
  4861  0220  0AA1               	incf	___ftpack@arg+1,f
  4862  0221  1903               	skipnz
  4863  0222  0AA2               	incf	___ftpack@arg+2,f
  4864  0223  36A2               	lsrf	___ftpack@arg+2,f
  4865  0224  0CA1               	rrf	___ftpack@arg+1,f
  4866  0225  0CA0               	rrf	___ftpack@arg,f
  4867  0226                     l2782:	
  4868  0226  30FF               	movlw	255
  4869  0227  0522               	andwf	___ftpack@arg+2,w
  4870  0228  1903               	btfsc	3,2
  4871  0229  2A33               	goto	l2786
  4872  022A  2A1D               	goto	l2780
  4873  022B                     l2788:	
  4874  022B  3002               	movlw	2
  4875  022C  0223               	subwf	___ftpack@exp,w
  4876  022D  1C03               	btfss	3,0
  4877  022E  2A35               	goto	l978
  4878  022F  03A3               	decf	___ftpack@exp,f
  4879  0230  35A0               	lslf	___ftpack@arg,f
  4880  0231  0DA1               	rlf	___ftpack@arg+1,f
  4881  0232  0DA2               	rlf	___ftpack@arg+2,f
  4882  0233                     l2786:	
  4883  0233  1FA1               	btfss	___ftpack@arg+1,7
  4884  0234  2A2B               	goto	l2788
  4885  0235                     l978:	
  4886  0235  1C23               	btfss	___ftpack@exp,0
  4887  0236  13A1               	bcf	___ftpack@arg+1,7
  4888  0237  36A3               	lsrf	___ftpack@exp,f
  4889  0238  0823               	movf	___ftpack@exp,w
  4890  0239  00A7               	movwf	??___ftpack+2
  4891  023A  01A6               	clrf	??___ftpack+1
  4892  023B  01A5               	clrf	??___ftpack
  4893  023C  0825               	movf	??___ftpack,w
  4894  023D  04A0               	iorwf	___ftpack@arg,f
  4895  023E  0826               	movf	??___ftpack+1,w
  4896  023F  04A1               	iorwf	___ftpack@arg+1,f
  4897  0240  0827               	movf	??___ftpack+2,w
  4898  0241  04A2               	iorwf	___ftpack@arg+2,f
  4899  0242  0824               	movf	___ftpack@sign,w
  4900  0243  1D03               	btfss	3,2
  4901  0244  17A2               	bsf	___ftpack@arg+2,7
  4902  0245  0008               	return
  4903  0246                     __end_of___ftpack:	
  4904  0246                     __ptext5:	
  4905 ;; *************** function ___ftmul *****************
  4906 ;; Defined at:
  4907 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  f1              3    8[BANK0 ] float 
  4910 ;;  f2              3   11[BANK0 ] float 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  4913 ;;  sign            1   22[BANK0 ] unsigned char 
  4914 ;;  cntr            1   21[BANK0 ] unsigned char 
  4915 ;;  exp             1   17[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  3    8[BANK0 ] float 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, pclath, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 1F/0
  4922 ;;		On exit  : 1F/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4925 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;Total ram usage:       15 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    7
  4932 ;; This function calls:
  4933 ;;		___ftpack
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function ___ftmul
  4941  0246                     ___ftmul:	
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4945  0246  0828               	movf	___ftmul@f1,w
  4946  0247  00AE               	movwf	??___ftmul
  4947  0248  0829               	movf	___ftmul@f1+1,w
  4948  0249  00AF               	movwf	??___ftmul+1
  4949  024A  082A               	movf	___ftmul@f1+2,w
  4950  024B  00B0               	movwf	??___ftmul+2
  4951  024C  1003               	clrc
  4952  024D  0D2F               	rlf	??___ftmul+1,w
  4953  024E  0D30               	rlf	??___ftmul+2,w
  4954  024F  00B1               	movwf	___ftmul@exp
  4955  0250  0831               	movf	___ftmul@exp,w
  4956  0251  1D03               	btfss	3,2
  4957  0252  2A54               	goto	l3264
  4958  0253  2E6D               	ljmp	PL261	;call to abstracted procedure
  4959  0254                     l3264:	
  4960  0254  082B               	movf	___ftmul@f2,w
  4961  0255  00AE               	movwf	??___ftmul
  4962  0256  082C               	movf	___ftmul@f2+1,w
  4963  0257  00AF               	movwf	??___ftmul+1
  4964  0258  082D               	movf	___ftmul@f2+2,w
  4965  0259  00B0               	movwf	??___ftmul+2
  4966  025A  1003               	clrc
  4967  025B  0D2F               	rlf	??___ftmul+1,w
  4968  025C  0D30               	rlf	??___ftmul+2,w
  4969  025D  00B6               	movwf	___ftmul@sign
  4970  025E  0836               	movf	___ftmul@sign,w
  4971  025F  1D03               	btfss	3,2
  4972  0260  2A62               	goto	l3268
  4973  0261  2E6D               	ljmp	PL261	;call to abstracted procedure
  4974  0262                     l3268:	
  4975  0262  0836               	movf	___ftmul@sign,w
  4976  0263  3E7B               	addlw	123
  4977  0264  07B1               	addwf	___ftmul@exp,f
  4978  0265  082A               	movf	___ftmul@f1+2,w
  4979  0266  00B6               	movwf	___ftmul@sign
  4980  0267  082D               	movf	___ftmul@f2+2,w
  4981  0268  06B6               	xorwf	___ftmul@sign,f
  4982  0269  3080               	movlw	128
  4983  026A  05B6               	andwf	___ftmul@sign,f
  4984  026B  30FF               	movlw	255
  4985  026C  17A9               	bsf	___ftmul@f1+1,7
  4986  026D  17AC               	bsf	___ftmul@f2+1,7
  4987  026E  05AB               	andwf	___ftmul@f2,f
  4988  026F  05AC               	andwf	___ftmul@f2+1,f
  4989  0270  3007               	movlw	7
  4990  0271  01AD               	clrf	___ftmul@f2+2
  4991  0272  01B2               	clrf	___ftmul@f3_as_product
  4992  0273  01B3               	clrf	___ftmul@f3_as_product+1
  4993  0274  01B4               	clrf	___ftmul@f3_as_product+2
  4994  0275  00B5               	movwf	___ftmul@cntr
  4995  0276                     l3286:	
  4996  0276  1C28               	btfss	___ftmul@f1,0
  4997  0277  2A7A               	goto	l3290
  4998  0278  265A  3180         	fcall	PL255	;call to abstracted procedure
  4999  027A                     l3290:	
  5000  027A  36AA               	lsrf	___ftmul@f1+2,f
  5001  027B  0CA9               	rrf	___ftmul@f1+1,f
  5002  027C  0CA8               	rrf	___ftmul@f1,f
  5003  027D  35AB               	lslf	___ftmul@f2,f
  5004  027E  0DAC               	rlf	___ftmul@f2+1,f
  5005  027F  0DAD               	rlf	___ftmul@f2+2,f
  5006  0280  0BB5               	decfsz	___ftmul@cntr,f
  5007  0281  2A76               	goto	l3286
  5008  0282  3009               	movlw	9
  5009  0283  00B5               	movwf	___ftmul@cntr
  5010  0284                     l3298:	
  5011  0284  1C28               	btfss	___ftmul@f1,0
  5012  0285  2A88               	goto	l3302
  5013  0286  265A  3180         	fcall	PL255	;call to abstracted procedure
  5014  0288                     l3302:	
  5015  0288  36AA               	lsrf	___ftmul@f1+2,f
  5016  0289  0CA9               	rrf	___ftmul@f1+1,f
  5017  028A  0CA8               	rrf	___ftmul@f1,f
  5018  028B  36B4               	lsrf	___ftmul@f3_as_product+2,f
  5019  028C  0CB3               	rrf	___ftmul@f3_as_product+1,f
  5020  028D  0CB2               	rrf	___ftmul@f3_as_product,f
  5021  028E  0BB5               	decfsz	___ftmul@cntr,f
  5022  028F  2A84               	goto	l3298
  5023  0290  0832               	movf	___ftmul@f3_as_product,w
  5024  0291  00A0               	movwf	___ftpack@arg
  5025  0292  0833               	movf	___ftmul@f3_as_product+1,w
  5026  0293  00A1               	movwf	___ftpack@arg+1
  5027  0294  0834               	movf	___ftmul@f3_as_product+2,w
  5028  0295  00A2               	movwf	___ftpack@arg+2
  5029  0296  0831               	movf	___ftmul@exp,w
  5030  0297  00A3               	movwf	___ftpack@exp
  5031  0298  0836               	movf	___ftmul@sign,w
  5032  0299  00A4               	movwf	___ftpack@sign
  5033  029A  2208               	fcall	___ftpack
  5034  029B  0820               	movf	?___ftpack,w
  5035  029C  00A8               	movwf	?___ftmul
  5036  029D  0821               	movf	?___ftpack+1,w
  5037  029E  00A9               	movwf	?___ftmul+1
  5038  029F  0822               	movf	?___ftpack+2,w
  5039  02A0  00AA               	movwf	?___ftmul+2
  5040  02A1  0008               	return
  5041  02A2                     __end_of___ftmul:	
  5042  02A2                     __ptext4:	
  5043 ;; *************** function ___ftadd *****************
  5044 ;; Defined at:
  5045 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  f1              3    8[BANK0 ] float 
  5048 ;;  f2              3   11[BANK0 ] float 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  exp1            1   19[BANK0 ] unsigned char 
  5051 ;;  exp2            1   18[BANK0 ] unsigned char 
  5052 ;;  sign            1   17[BANK0 ] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  3    8[BANK0 ] float 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0, pclath, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 1F/0
  5059 ;;		On exit  : 1F/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5062 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;Total ram usage:       12 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    7
  5069 ;; This function calls:
  5070 ;;		___ftpack
  5071 ;; This function is called by:
  5072 ;;		_main
  5073 ;;		___ftsub
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function ___ftadd
  5079  02A2                     ___ftadd:	
  5080                           
  5081                           ;incstack = 0
  5082                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5083  02A2  0828               	movf	___ftadd@f1,w
  5084  02A3  00AE               	movwf	??___ftadd
  5085  02A4  0829               	movf	___ftadd@f1+1,w
  5086  02A5  00AF               	movwf	??___ftadd+1
  5087  02A6  082A               	movf	___ftadd@f1+2,w
  5088  02A7  00B0               	movwf	??___ftadd+2
  5089  02A8  1003               	clrc
  5090  02A9  0D2F               	rlf	??___ftadd+1,w
  5091  02AA  0D30               	rlf	??___ftadd+2,w
  5092  02AB  00B3               	movwf	___ftadd@exp1
  5093  02AC  082B               	movf	___ftadd@f2,w
  5094  02AD  00AE               	movwf	??___ftadd
  5095  02AE  082C               	movf	___ftadd@f2+1,w
  5096  02AF  00AF               	movwf	??___ftadd+1
  5097  02B0  082D               	movf	___ftadd@f2+2,w
  5098  02B1  00B0               	movwf	??___ftadd+2
  5099  02B2  1003               	clrc
  5100  02B3  0D2F               	rlf	??___ftadd+1,w
  5101  02B4  0D30               	rlf	??___ftadd+2,w
  5102  02B5  00B2               	movwf	___ftadd@exp2
  5103  02B6  0833               	movf	___ftadd@exp1,w
  5104  02B7  1903               	btfsc	3,2
  5105  02B8  2AC5               	goto	l2954
  5106  02B9  0832               	movf	___ftadd@exp2,w
  5107  02BA  0233               	subwf	___ftadd@exp1,w
  5108  02BB  0832               	movf	___ftadd@exp2,w
  5109  02BC  1803               	skipnc
  5110  02BD  2ACD               	goto	L3
  5111  02BE  00AE               	movwf	??___ftadd
  5112  02BF  0833               	movf	___ftadd@exp1,w
  5113  02C0  02AE               	subwf	??___ftadd,f
  5114  02C1  3019               	movlw	25
  5115  02C2  022E               	subwf	??___ftadd,w
  5116  02C3  1C03               	skipc
  5117  02C4  2ACC               	goto	l2958
  5118  02C5                     l2954:	
  5119  02C5  082B               	movf	___ftadd@f2,w
  5120  02C6  00A8               	movwf	?___ftadd
  5121  02C7  082C               	movf	___ftadd@f2+1,w
  5122  02C8  00A9               	movwf	?___ftadd+1
  5123  02C9  082D               	movf	___ftadd@f2+2,w
  5124  02CA  00AA               	movwf	?___ftadd+2
  5125  02CB  0008               	return
  5126  02CC                     l2958:	
  5127  02CC  0832               	movf	___ftadd@exp2,w
  5128  02CD                     L3:	
  5129  02CD  1903               	btfsc	3,2
  5130  02CE  0008               	return
  5131  02CF  0833               	movf	___ftadd@exp1,w
  5132  02D0  0232               	subwf	___ftadd@exp2,w
  5133  02D1  1803               	skipnc
  5134  02D2  2ADB               	goto	l2964
  5135  02D3  0833               	movf	___ftadd@exp1,w
  5136  02D4  00AE               	movwf	??___ftadd
  5137  02D5  0832               	movf	___ftadd@exp2,w
  5138  02D6  02AE               	subwf	??___ftadd,f
  5139  02D7  3019               	movlw	25
  5140  02D8  022E               	subwf	??___ftadd,w
  5141  02D9  1803               	btfsc	3,0
  5142  02DA  0008               	return
  5143  02DB                     l2964:	
  5144  02DB  3006               	movlw	6
  5145  02DC  00B1               	movwf	___ftadd@sign
  5146  02DD  1BAA               	btfsc	___ftadd@f1+2,7
  5147  02DE  17B1               	bsf	___ftadd@sign,7
  5148  02DF  1BAD               	btfsc	___ftadd@f2+2,7
  5149  02E0  1731               	bsf	___ftadd@sign,6
  5150  02E1  17A9               	bsf	___ftadd@f1+1,7
  5151  02E2  01AA               	clrf	___ftadd@f1+2
  5152  02E3  17AC               	bsf	___ftadd@f2+1,7
  5153  02E4  01AD               	clrf	___ftadd@f2+2
  5154  02E5  0832               	movf	___ftadd@exp2,w
  5155  02E6  0233               	subwf	___ftadd@exp1,w
  5156  02E7  1803               	skipnc
  5157  02E8  2B00               	goto	l2986
  5158  02E9                     l2976:	
  5159  02E9  35AB               	lslf	___ftadd@f2,f
  5160  02EA  0DAC               	rlf	___ftadd@f2+1,f
  5161  02EB  0DAD               	rlf	___ftadd@f2+2,f
  5162  02EC  03B2               	decf	___ftadd@exp2,f
  5163  02ED  0832               	movf	___ftadd@exp2,w
  5164  02EE  0633               	xorwf	___ftadd@exp1,w
  5165  02EF  1903               	skipnz
  5166  02F0  2AFB               	goto	l2984
  5167  02F1  03B1               	decf	___ftadd@sign,f
  5168  02F2  0831               	movf	___ftadd@sign,w
  5169  02F3  3907               	andlw	7
  5170  02F4  1903               	btfsc	3,2
  5171  02F5  2AFB               	goto	l2984
  5172  02F6  2AE9               	goto	l2976
  5173  02F7                     l2982:	
  5174  02F7  36AA               	lsrf	___ftadd@f1+2,f
  5175  02F8  0CA9               	rrf	___ftadd@f1+1,f
  5176  02F9  0CA8               	rrf	___ftadd@f1,f
  5177  02FA  0AB3               	incf	___ftadd@exp1,f
  5178  02FB                     l2984:	
  5179  02FB  0833               	movf	___ftadd@exp1,w
  5180  02FC  0632               	xorwf	___ftadd@exp2,w
  5181  02FD  1903               	btfsc	3,2
  5182  02FE  2B1A               	goto	l1002
  5183  02FF  2AF7               	goto	l2982
  5184  0300                     l2986:	
  5185  0300  0833               	movf	___ftadd@exp1,w
  5186  0301  0232               	subwf	___ftadd@exp2,w
  5187  0302  1803               	skipnc
  5188  0303  2B1A               	goto	l1002
  5189  0304                     l2988:	
  5190  0304  35A8               	lslf	___ftadd@f1,f
  5191  0305  0DA9               	rlf	___ftadd@f1+1,f
  5192  0306  0DAA               	rlf	___ftadd@f1+2,f
  5193  0307  03B3               	decf	___ftadd@exp1,f
  5194  0308  0832               	movf	___ftadd@exp2,w
  5195  0309  0633               	xorwf	___ftadd@exp1,w
  5196  030A  1903               	skipnz
  5197  030B  2B16               	goto	l2996
  5198  030C  03B1               	decf	___ftadd@sign,f
  5199  030D  0831               	movf	___ftadd@sign,w
  5200  030E  3907               	andlw	7
  5201  030F  1903               	btfsc	3,2
  5202  0310  2B16               	goto	l2996
  5203  0311  2B04               	goto	l2988
  5204  0312                     l2994:	
  5205  0312  36AD               	lsrf	___ftadd@f2+2,f
  5206  0313  0CAC               	rrf	___ftadd@f2+1,f
  5207  0314  0CAB               	rrf	___ftadd@f2,f
  5208  0315  0AB2               	incf	___ftadd@exp2,f
  5209  0316                     l2996:	
  5210  0316  0833               	movf	___ftadd@exp1,w
  5211  0317  0632               	xorwf	___ftadd@exp2,w
  5212  0318  1D03               	skipz
  5213  0319  2B12               	goto	l2994
  5214  031A                     l1002:	
  5215  031A  1FB1               	btfss	___ftadd@sign,7
  5216  031B  2B25               	goto	l3002
  5217  031C  30FF               	movlw	255
  5218  031D  06A8               	xorwf	___ftadd@f1,f
  5219  031E  06A9               	xorwf	___ftadd@f1+1,f
  5220  031F  06AA               	xorwf	___ftadd@f1+2,f
  5221  0320  0AA8               	incf	___ftadd@f1,f
  5222  0321  1903               	skipnz
  5223  0322  0AA9               	incf	___ftadd@f1+1,f
  5224  0323  1903               	skipnz
  5225  0324  0AAA               	incf	___ftadd@f1+2,f
  5226  0325                     l3002:	
  5227  0325  1F31               	btfss	___ftadd@sign,6
  5228  0326  2B2D               	goto	l3008
  5229  0327  2667  3180         	fcall	PL259	;call to abstracted procedure
  5230  0329  1903               	skipnz
  5231  032A  0AAC               	incf	___ftadd@f2+1,f
  5232  032B  1903               	skipnz
  5233  032C  0AAD               	incf	___ftadd@f2+2,f
  5234  032D                     l3008:	
  5235  032D  01B1               	clrf	___ftadd@sign
  5236  032E  0828               	movf	___ftadd@f1,w
  5237  032F  07AB               	addwf	___ftadd@f2,f
  5238  0330  0829               	movf	___ftadd@f1+1,w
  5239  0331  3DAC               	addwfc	___ftadd@f2+1,f
  5240  0332  082A               	movf	___ftadd@f1+2,w
  5241  0333  3DAD               	addwfc	___ftadd@f2+2,f
  5242  0334  1FAD               	btfss	___ftadd@f2+2,7
  5243  0335  2B3E               	goto	l3020
  5244  0336  2667  3180         	fcall	PL259	;call to abstracted procedure
  5245  0338  1903               	skipnz
  5246  0339  0AAC               	incf	___ftadd@f2+1,f
  5247  033A  1903               	skipnz
  5248  033B  0AAD               	incf	___ftadd@f2+2,f
  5249  033C  01B1               	clrf	___ftadd@sign
  5250  033D  0AB1               	incf	___ftadd@sign,f
  5251  033E                     l3020:	
  5252  033E  082B               	movf	___ftadd@f2,w
  5253  033F  00A0               	movwf	___ftpack@arg
  5254  0340  082C               	movf	___ftadd@f2+1,w
  5255  0341  00A1               	movwf	___ftpack@arg+1
  5256  0342  082D               	movf	___ftadd@f2+2,w
  5257  0343  00A2               	movwf	___ftpack@arg+2
  5258  0344  0833               	movf	___ftadd@exp1,w
  5259  0345  00A3               	movwf	___ftpack@exp
  5260  0346  0831               	movf	___ftadd@sign,w
  5261  0347  00A4               	movwf	___ftpack@sign
  5262  0348  2208               	fcall	___ftpack
  5263  0349  0820               	movf	?___ftpack,w
  5264  034A  00A8               	movwf	?___ftadd
  5265  034B  0821               	movf	?___ftpack+1,w
  5266  034C  00A9               	movwf	?___ftadd+1
  5267  034D  0822               	movf	?___ftpack+2,w
  5268  034E  00AA               	movwf	?___ftadd+2
  5269  034F  0008               	return
  5270  0350                     __end_of___ftadd:	
  5271  0350                     __ptext3:	
  5272 ;; *************** function ___ftsub *****************
  5273 ;; Defined at:
  5274 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftsub.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  f2              3   23[BANK0 ] float 
  5277 ;;  f1              3   26[BANK0 ] float 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  3   23[BANK0 ] float 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0, pclath, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 1F/0
  5286 ;;		On exit  : 1F/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5289 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;Total ram usage:        6 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    8
  5296 ;; This function calls:
  5297 ;;		___ftadd
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           
  5304                           ;psect for function ___ftsub
  5305  0350                     ___ftsub:	
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5309  0350  0839               	movf	___ftsub@f2+2,w
  5310  0351  0438               	iorwf	___ftsub@f2+1,w
  5311  0352  0437               	iorwf	___ftsub@f2,w
  5312  0353  1903               	skipnz
  5313  0354  2B57               	goto	l3316
  5314  0355  3080               	movlw	128
  5315  0356  06B9               	xorwf	___ftsub@f2+2,f
  5316  0357                     l3316:	
  5317  0357  083A               	movf	___ftsub@f1,w
  5318  0358  00A8               	movwf	___ftadd@f1
  5319  0359  083B               	movf	___ftsub@f1+1,w
  5320  035A  00A9               	movwf	___ftadd@f1+1
  5321  035B  083C               	movf	___ftsub@f1+2,w
  5322  035C  00AA               	movwf	___ftadd@f1+2
  5323  035D  0837               	movf	___ftsub@f2,w
  5324  035E  00AB               	movwf	___ftadd@f2
  5325  035F  0838               	movf	___ftsub@f2+1,w
  5326  0360  00AC               	movwf	___ftadd@f2+1
  5327  0361  0839               	movf	___ftsub@f2+2,w
  5328  0362  00AD               	movwf	___ftadd@f2+2
  5329  0363  22A2               	fcall	___ftadd
  5330  0364  0828               	movf	?___ftadd,w
  5331  0365  00B7               	movwf	?___ftsub
  5332  0366  0829               	movf	?___ftadd+1,w
  5333  0367  00B8               	movwf	?___ftsub+1
  5334  0368  082A               	movf	?___ftadd+2,w
  5335  0369  00B9               	movwf	?___ftsub+2
  5336  036A  0008               	return
  5337  036B                     __end_of___ftsub:	
  5338  036B                     __ptext2:	
  5339 ;; *************** function ___fttol *****************
  5340 ;; Defined at:
  5341 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  f1              3    0[BANK0 ] float 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  lval            4    8[BANK0 ] unsigned long 
  5346 ;;  exp1            1   12[BANK0 ] unsigned char 
  5347 ;;  sign1           1    7[BANK0 ] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  4    0[BANK0 ] long 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0
  5352 ;; Tracked objects:
  5353 ;;		On entry : 1F/0
  5354 ;;		On exit  : 1F/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;Total ram usage:       13 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    6
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_main
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           
  5372                           ;psect for function ___fttol
  5373  036B                     ___fttol:	
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5377  036B  2653  3180         	fcall	PL253	;call to abstracted procedure
  5378  036D  1003               	clrc
  5379  036E  0D25               	rlf	??___fttol+1,w
  5380  036F  0D26               	rlf	??___fttol+2,w
  5381  0370  00AC               	movwf	___fttol@exp1
  5382  0371  082C               	movf	___fttol@exp1,w
  5383  0372  1D03               	btfss	3,2
  5384  0373  2B79               	goto	l3324
  5385  0374                     l3322:	
  5386  0374  01A0               	clrf	?___fttol
  5387  0375  01A1               	clrf	?___fttol+1
  5388  0376  01A2               	clrf	?___fttol+2
  5389  0377  01A3               	clrf	?___fttol+3
  5390  0378  0008               	return
  5391  0379                     l3324:	
  5392  0379  2653  3180         	fcall	PL253	;call to abstracted procedure
  5393  037B  3017               	movlw	23
  5394  037C                     u1645:	
  5395  037C  36A6               	lsrf	??___fttol+2,f
  5396  037D  0CA5               	rrf	??___fttol+1,f
  5397  037E  0CA4               	rrf	??___fttol,f
  5398  037F  0B89               	decfsz	9,f
  5399  0380  2B7C               	goto	u1645
  5400  0381  0824               	movf	??___fttol,w
  5401  0382  00A7               	movwf	___fttol@sign1
  5402  0383  17A1               	bsf	___fttol@f1+1,7
  5403  0384  01A2               	clrf	___fttol@f1+2
  5404  0385  0820               	movf	___fttol@f1,w
  5405  0386  00A8               	movwf	___fttol@lval
  5406  0387  0821               	movf	___fttol@f1+1,w
  5407  0388  00A9               	movwf	___fttol@lval+1
  5408  0389  0822               	movf	___fttol@f1+2,w
  5409  038A  00AA               	movwf	___fttol@lval+2
  5410  038B  308E               	movlw	142
  5411  038C  01AB               	clrf	___fttol@lval+3
  5412  038D  02AC               	subwf	___fttol@exp1,f
  5413  038E  1FAC               	btfss	___fttol@exp1,7
  5414  038F  2B9C               	goto	l3344
  5415  0390  082C               	movf	___fttol@exp1,w
  5416  0391  3A80               	xorlw	128
  5417  0392  3E8F               	addlw	143
  5418  0393  1C03               	btfss	3,0
  5419  0394  2B74               	goto	l3322
  5420  0395                     l3340:	
  5421  0395  36AB               	lsrf	___fttol@lval+3,f
  5422  0396  0CAA               	rrf	___fttol@lval+2,f
  5423  0397  0CA9               	rrf	___fttol@lval+1,f
  5424  0398  0CA8               	rrf	___fttol@lval,f
  5425  0399  0FAC               	incfsz	___fttol@exp1,f
  5426  039A  2B95               	goto	l3340
  5427  039B  2BA9               	goto	l3352
  5428  039C                     l3344:	
  5429  039C  3018               	movlw	24
  5430  039D  022C               	subwf	___fttol@exp1,w
  5431  039E  1803               	btfsc	3,0
  5432  039F  2B74               	goto	l3322
  5433  03A0                     l3350:	
  5434  03A0  082C               	movf	___fttol@exp1,w
  5435  03A1  1903               	btfsc	3,2
  5436  03A2  2BA9               	goto	l3352
  5437  03A3  35A8               	lslf	___fttol@lval,f
  5438  03A4  0DA9               	rlf	___fttol@lval+1,f
  5439  03A5  0DAA               	rlf	___fttol@lval+2,f
  5440  03A6  0DAB               	rlf	___fttol@lval+3,f
  5441  03A7  03AC               	decf	___fttol@exp1,f
  5442  03A8  2BA0               	goto	l3350
  5443  03A9                     l3352:	
  5444  03A9  0827               	movf	___fttol@sign1,w
  5445  03AA  1903               	btfsc	3,2
  5446  03AB  2BB7               	goto	l3356
  5447  03AC  09A8               	comf	___fttol@lval,f
  5448  03AD  09A9               	comf	___fttol@lval+1,f
  5449  03AE  09AA               	comf	___fttol@lval+2,f
  5450  03AF  09AB               	comf	___fttol@lval+3,f
  5451  03B0  0AA8               	incf	___fttol@lval,f
  5452  03B1  1903               	skipnz
  5453  03B2  0AA9               	incf	___fttol@lval+1,f
  5454  03B3  1903               	skipnz
  5455  03B4  0AAA               	incf	___fttol@lval+2,f
  5456  03B5  1903               	skipnz
  5457  03B6  0AAB               	incf	___fttol@lval+3,f
  5458  03B7                     l3356:	
  5459  03B7  082B               	movf	___fttol@lval+3,w
  5460  03B8  00A3               	movwf	?___fttol+3
  5461  03B9  082A               	movf	___fttol@lval+2,w
  5462  03BA  00A2               	movwf	?___fttol+2
  5463  03BB  0829               	movf	___fttol@lval+1,w
  5464  03BC  00A1               	movwf	?___fttol+1
  5465  03BD  0828               	movf	___fttol@lval,w
  5466  03BE  00A0               	movwf	?___fttol
  5467  03BF  0008               	return
  5468  03C0                     __end_of___fttol:	
  5469  03C0                     __ptext1:	
  5470 ;; *************** function _fan_setSpeed *****************
  5471 ;; Defined at:
  5472 ;;		line 66 in file "mcc_generated_files/fanDrivers/fan.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  speed           2   17[BANK0 ] unsigned int 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 1F/0
  5483 ;;		On exit  : 1F/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;Total ram usage:        4 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:   16
  5493 ;; This function calls:
  5494 ;;		_fan_write
  5495 ;; This function is called by:
  5496 ;;		_main
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _fan_setSpeed
  5502  03C0                     _fan_setSpeed:	
  5503                           
  5504                           ;fan.c: 67: fan_write(0x3C, (speed % 32) << 3);
  5505                           
  5506                           ;incstack = 0
  5507 ;; hardware stack exceeded
  5508                           ; Regs used in _fan_setSpeed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5509  03C0  0831               	movf	fan_setSpeed@speed,w
  5510  03C1  391F               	andlw	31
  5511  03C2  0709               	addwf	9,w
  5512  03C3  0709               	addwf	9,w
  5513  03C4  0709               	addwf	9,w
  5514  03C5  00AF               	movwf	fan_write@data
  5515  03C6  303C               	movlw	60
  5516  03C7  23D6  3180         	fcall	_fan_write
  5517                           
  5518                           ;fan.c: 68: fan_write(0x3D, speed >> 5);
  5519  03C9  0832               	movf	fan_setSpeed@speed+1,w
  5520  03CA  00B4               	movwf	??_fan_setSpeed+1
  5521  03CB  0831               	movf	fan_setSpeed@speed,w
  5522  03CC  00B3               	movwf	??_fan_setSpeed
  5523  03CD  3005               	movlw	5
  5524  03CE                     u2935:	
  5525  03CE  36B4               	lsrf	??_fan_setSpeed+1,f
  5526  03CF  0CB3               	rrf	??_fan_setSpeed,f
  5527  03D0  0B89               	decfsz	9,f
  5528  03D1  2BCE               	goto	u2935
  5529  03D2  0833               	movf	??_fan_setSpeed,w
  5530  03D3  00AF               	movwf	fan_write@data
  5531  03D4  303D               	movlw	61
  5532  03D5  2BD6               	ljmp	_fan_write
  5533  03D6                     __end_of_fan_setSpeed:	
  5534  03D6                     __ptext15:	
  5535 ;; *************** function _fan_write *****************
  5536 ;; Defined at:
  5537 ;;		line 58 in file "mcc_generated_files/fanDrivers/fan.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  reg             1    wreg     unsigned char 
  5540 ;;  data            1   15[BANK0 ] unsigned char 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  reg             1   16[BANK0 ] unsigned char 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 1F/0
  5549 ;;		On exit  : 1F/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5552 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;Total ram usage:        2 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:   15
  5559 ;; This function calls:
  5560 ;;		_i2c_write1ByteRegister
  5561 ;; This function is called by:
  5562 ;;		_fan_setSpeed
  5563 ;;		_fan_Initialize
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           
  5568                           ;psect for function _fan_write
  5569  03D6                     _fan_write:	
  5570                           
  5571                           ;incstack = 0
  5572 ;; hardware stack exceeded
  5573                           ; Regs used in _fan_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5574                           ;fan_write@reg stored from wreg
  5575  03D6  00B0               	movwf	fan_write@reg
  5576                           
  5577                           ;fan.c: 59: i2c_write1ByteRegister(0b0101111, reg, data);
  5578  03D7  00AC               	movwf	i2c_write1ByteRegister@reg
  5579  03D8  082F               	movf	fan_write@data,w
  5580  03D9  00AD               	movwf	i2c_write1ByteRegister@data
  5581  03DA  302F               	movlw	47
  5582  03DB  2C78               	ljmp	_i2c_write1ByteRegister
  5583  03DC                     __end_of_fan_write:	
  5584  03DC                     __ptext16:	
  5585 ;; *************** function _Thermo5_Initialize *****************
  5586 ;; Defined at:
  5587 ;;		line 225 in file "mcc_generated_files/Thermo5Drivers/Thermo5.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;		None
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      void 
  5594 ;; Registers used:
  5595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 1F/0
  5598 ;;		On exit  : 1F/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;Total ram usage:        0 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:   17
  5608 ;; This function calls:
  5609 ;;		_Thermo5_SetHysteresis
  5610 ;;		_Write_Thermo_Register
  5611 ;; This function is called by:
  5612 ;;		_SYSTEM_Initialize
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           
  5617                           ;psect for function _Thermo5_Initialize
  5618  03DC                     _Thermo5_Initialize:	
  5619  03DC                     l4784:	
  5620                           ;incstack = 0
  5621 ;; hardware stack exceeded
  5622                           ; Regs used in _Thermo5_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5623                           
  5624  03DC  3003               	movlw	3
  5625                           
  5626                           ;Thermo5.c: 226: Write_Thermo_Register(0x03, 0b00000001);
  5627  03DD  01AF               	clrf	Write_Thermo_Register@val
  5628  03DE  0AAF               	incf	Write_Thermo_Register@val,f
  5629  03DF  23E8  3180         	fcall	_Write_Thermo_Register
  5630                           
  5631                           ;Thermo5.c: 227: Write_Thermo_Register(0x1F, 0b1110);
  5632  03E1  300E               	movlw	14
  5633  03E2  00AF               	movwf	Write_Thermo_Register@val
  5634  03E3  301F               	movlw	31
  5635  03E4  23E8  3180         	fcall	_Write_Thermo_Register
  5636                           
  5637                           ;Thermo5.c: 228: Thermo5_SetHysteresis(0);
  5638  03E6  3000               	movlw	0
  5639  03E7  2BFC               	ljmp	_Thermo5_SetHysteresis
  5640  03E8                     __end_of_Thermo5_Initialize:	
  5641  03E8                     __ptext18:	
  5642 ;; *************** function _Write_Thermo_Register *****************
  5643 ;; Defined at:
  5644 ;;		line 88 in file "mcc_generated_files/Thermo5Drivers/Thermo5.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  addr            1    wreg     unsigned char 
  5647 ;;  val             1   15[BANK0 ] unsigned char 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  addr            1   16[BANK0 ] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 1F/0
  5656 ;;		On exit  : 1F/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5659 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;Total ram usage:        2 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:   15
  5666 ;; This function calls:
  5667 ;;		_i2c_write1ByteRegister
  5668 ;; This function is called by:
  5669 ;;		_Thermo5_SetHysteresis
  5670 ;;		_Thermo5_Initialize
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           
  5675                           ;psect for function _Write_Thermo_Register
  5676  03E8                     _Write_Thermo_Register:	
  5677                           
  5678                           ;incstack = 0
  5679 ;; hardware stack exceeded
  5680                           ; Regs used in _Write_Thermo_Register: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5681                           ;Write_Thermo_Register@addr stored from wreg
  5682  03E8  00B0               	movwf	Write_Thermo_Register@addr
  5683                           
  5684                           ;Thermo5.c: 89: i2c_write1ByteRegister(0b1001100, addr, val);
  5685  03E9  00AC               	movwf	i2c_write1ByteRegister@reg
  5686  03EA  082F               	movf	Write_Thermo_Register@val,w
  5687  03EB  00AD               	movwf	i2c_write1ByteRegister@data
  5688  03EC  304C               	movlw	76
  5689  03ED  2C78               	ljmp	_i2c_write1ByteRegister
  5690  03EE                     __end_of_Write_Thermo_Register:	
  5691  03EE                     __ptext14:	
  5692 ;; *************** function _fan_Initialize *****************
  5693 ;; Defined at:
  5694 ;;		line 71 in file "mcc_generated_files/fanDrivers/fan.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 1F/11
  5705 ;;		On exit  : 1F/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;Total ram usage:        1 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:   16
  5715 ;; This function calls:
  5716 ;;		_fan_write
  5717 ;; This function is called by:
  5718 ;;		_SYSTEM_Initialize
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function _fan_Initialize
  5724  03EE                     _fan_Initialize:	
  5725                           
  5726                           ;fan.c: 72: _delay((unsigned long)((10)*(1000000/4000.0)));
  5727                           
  5728                           ;incstack = 0
  5729 ;; hardware stack exceeded
  5730                           ; Regs used in _fan_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5731  03EE  3004               	movlw	4
  5732  03EF  0020               	movlb	0	; select bank0
  5733  03F0  00B1               	movwf	??_fan_Initialize
  5734  03F1  303D               	movlw	61
  5735  03F2                     u3057:	
  5736  03F2  0B89               	decfsz	9,f
  5737  03F3  2BF2               	goto	u3057
  5738  03F4  0BB1               	decfsz	??_fan_Initialize,f
  5739  03F5  2BF2               	goto	u3057
  5740  03F6  3200               	nop2
  5741                           
  5742                           ;fan.c: 73: fan_write(0x32, 0b10101011);
  5743  03F7  30AB               	movlw	171
  5744  03F8  0020               	movlb	0	; select bank0
  5745  03F9  00AF               	movwf	fan_write@data
  5746  03FA  3032               	movlw	50
  5747  03FB  2BD6               	ljmp	_fan_write
  5748  03FC                     __end_of_fan_Initialize:	
  5749  03FC                     __ptext17:	
  5750 ;; *************** function _Thermo5_SetHysteresis *****************
  5751 ;; Defined at:
  5752 ;;		line 195 in file "mcc_generated_files/Thermo5Drivers/Thermo5.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  hysteresis      1    wreg     unsigned char 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  hysteresis      1   17[BANK0 ] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 1F/0
  5763 ;;		On exit  : 1F/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;Total ram usage:        1 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:   16
  5773 ;; This function calls:
  5774 ;;		_Write_Thermo_Register
  5775 ;; This function is called by:
  5776 ;;		_Thermo5_Initialize
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           
  5781                           ;psect for function _Thermo5_SetHysteresis
  5782  03FC                     _Thermo5_SetHysteresis:	
  5783                           
  5784                           ;incstack = 0
  5785 ;; hardware stack exceeded
  5786                           ; Regs used in _Thermo5_SetHysteresis: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5787                           ;Thermo5_SetHysteresis@hysteresis stored from wreg
  5788  03FC  00B1               	movwf	Thermo5_SetHysteresis@hysteresis
  5789                           
  5790                           ;Thermo5.c: 196: Write_Thermo_Register(0x21, hysteresis);
  5791  03FD  00AF               	movwf	Write_Thermo_Register@val
  5792  03FE  3021               	movlw	33
  5793  03FF  2BE8               	ljmp	_Write_Thermo_Register
  5794  0400                     __end_of_Thermo5_SetHysteresis:	
  5795  0400                     __ptext104:	
  5796 ;; *************** function i1_rd2RegCompleteHandler *****************
  5797 ;; Defined at:
  5798 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  p               1    7[COMMON] PTR void 
  5801 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5802 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1    wreg      enum E91
  5807 ;; Registers used:
  5808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 1F/1
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5814 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;Total ram usage:        1 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    2
  5821 ;; This function calls:
  5822 ;;		i1_i2c_setBuffer
  5823 ;;		i1_i2c_setDataCompleteCallback
  5824 ;; This function is called by:
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           
  5829                           ;psect for function i1_rd2RegCompleteHandler
  5830  0400                     i1_rd2RegCompleteHandler:	
  5831  0400                     i1l2828:	
  5832                           ;incstack = 0
  5833 ;; hardware stack exceeded
  5834                           ; Regs used in i1_rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5835                           
  5836                           
  5837                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  5838  0400  3002               	movlw	2
  5839  0401  00F0               	movwf	i1i2c_setBuffer@bufferSize
  5840  0402  01F1               	clrf	i1i2c_setBuffer@bufferSize+1
  5841  0403  0877               	movf	i1rd2RegCompleteHandler@p,w
  5842  0404  258C  3180         	fcall	i1_i2c_setBuffer
  5843                           
  5844                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  5845  0406  01F4               	clrf	i1i2c_setDataCompleteCallback@cb
  5846  0407  01F5               	clrf	i1i2c_setDataCompleteCallback@cb+1
  5847  0408  01F6               	clrf	i1i2c_setDataCompleteCallback@p
  5848  0409  2598               	fcall	i1_i2c_setDataCompleteCallback
  5849                           
  5850                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  5851  040A  3402               	retlw	2
  5852  040B                     __end_ofi1_rd2RegCompleteHandler:	
  5853  040B                     __ptext105:	
  5854 ;; *************** function i1_rd1RegCompleteHandler *****************
  5855 ;; Defined at:
  5856 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  p               1    7[COMMON] PTR void 
  5859 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5860 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      enum E91
  5865 ;; Registers used:
  5866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 1F/1
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        1 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    2
  5879 ;; This function calls:
  5880 ;;		i1_i2c_setBuffer
  5881 ;;		i1_i2c_setDataCompleteCallback
  5882 ;; This function is called by:
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function i1_rd1RegCompleteHandler
  5888  040B                     i1_rd1RegCompleteHandler:	
  5889  040B                     i1l2820:	
  5890                           ;incstack = 0
  5891 ;; hardware stack exceeded
  5892                           ; Regs used in i1_rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5893                           
  5894                           
  5895                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  5896  040B  01F0               	clrf	i1i2c_setBuffer@bufferSize
  5897  040C  0AF0               	incf	i1i2c_setBuffer@bufferSize,f
  5898  040D  01F1               	clrf	i1i2c_setBuffer@bufferSize+1
  5899  040E  0877               	movf	i1rd1RegCompleteHandler@p,w
  5900  040F  258C  3180         	fcall	i1_i2c_setBuffer
  5901                           
  5902                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  5903  0411  01F4               	clrf	i1i2c_setDataCompleteCallback@cb
  5904  0412  01F5               	clrf	i1i2c_setDataCompleteCallback@cb+1
  5905  0413  01F6               	clrf	i1i2c_setDataCompleteCallback@p
  5906  0414  2598               	fcall	i1_i2c_setDataCompleteCallback
  5907                           
  5908                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  5909  0415  3402               	retlw	2
  5910  0416                     __end_ofi1_rd1RegCompleteHandler:	
  5911  0416                     __ptext106:	
  5912 ;; *************** function i1_wr1RegCompleteHandler *****************
  5913 ;; Defined at:
  5914 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  p               1    7[COMMON] PTR void 
  5917 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5918 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      enum E91
  5923 ;; Registers used:
  5924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 1F/1
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5930 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;Total ram usage:        1 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    2
  5937 ;; This function calls:
  5938 ;;		i1_i2c_setBuffer
  5939 ;;		i1_i2c_setDataCompleteCallback
  5940 ;; This function is called by:
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           
  5945                           ;psect for function i1_wr1RegCompleteHandler
  5946  0416                     i1_wr1RegCompleteHandler:	
  5947  0416                     i1l2812:	
  5948                           ;incstack = 0
  5949 ;; hardware stack exceeded
  5950                           ; Regs used in i1_wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5951                           
  5952                           
  5953                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  5954  0416  01F0               	clrf	i1i2c_setBuffer@bufferSize
  5955  0417  0AF0               	incf	i1i2c_setBuffer@bufferSize,f
  5956  0418  01F1               	clrf	i1i2c_setBuffer@bufferSize+1
  5957  0419  0877               	movf	i1wr1RegCompleteHandler@p,w
  5958  041A  258C  3180         	fcall	i1_i2c_setBuffer
  5959                           
  5960                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  5961  041C  01F4               	clrf	i1i2c_setDataCompleteCallback@cb
  5962  041D  01F5               	clrf	i1i2c_setDataCompleteCallback@cb+1
  5963  041E  01F6               	clrf	i1i2c_setDataCompleteCallback@p
  5964  041F  2598               	fcall	i1_i2c_setDataCompleteCallback
  5965                           
  5966                           ;i2c_simple_master.c: 35: return i2c_continue;
  5967  0420  3404               	retlw	4
  5968  0421                     __end_ofi1_wr1RegCompleteHandler:	
  5969  0421                     __ptext57:	
  5970 ;; *************** function _rd2RegCompleteHandler *****************
  5971 ;; Defined at:
  5972 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  p               1    7[BANK0 ] PTR void 
  5975 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5976 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      enum E91
  5981 ;; Registers used:
  5982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 1E/0
  5985 ;;		On exit  : 1F/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5988 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5992 ;;Total ram usage:        1 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    8
  5995 ;; This function calls:
  5996 ;;		_i2c_setBuffer
  5997 ;;		_i2c_setDataCompleteCallback
  5998 ;; This function is called by:
  5999 ;;		_do_I2C_DO_ADDRESS_NACK
  6000 ;;		_do_I2C_TX
  6001 ;;		_do_I2C_RX
  6002 ;;		_do_I2C_TX_EMPTY
  6003 ;;		i1_do_I2C_DO_ADDRESS_NACK
  6004 ;;		i1_do_I2C_TX
  6005 ;;		i1_do_I2C_RX
  6006 ;;		i1_do_I2C_TX_EMPTY
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           
  6011                           ;psect for function _rd2RegCompleteHandler
  6012  0421                     _rd2RegCompleteHandler:	
  6013                           
  6014                           ;Skip over the trampoline to the duplicate function for level 1
  6015  0421  1C7E               	btfss	126,0
  6016  0422  2C24               	goto	l2370
  6017  0423  2C00               	ljmp	i1l2828
  6018  0424                     _rd2RegCompleteHandler$intlevel0:	
  6019  0424                     l2370:	
  6020                           ;incstack = 0
  6021 ;; hardware stack exceeded
  6022                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6023                           
  6024                           
  6025                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  6026  0424  3002               	movlw	2
  6027  0425  0020               	movlb	0	; select bank0
  6028  0426  00A0               	movwf	i2c_setBuffer@bufferSize
  6029  0427  01A1               	clrf	i2c_setBuffer@bufferSize+1
  6030  0428  0827               	movf	rd2RegCompleteHandler@p,w
  6031  0429  24E6  3180         	fcall	_i2c_setBuffer
  6032                           
  6033                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  6034  042B  0020               	movlb	0	; select bank0
  6035  042C  01A4               	clrf	i2c_setDataCompleteCallback@cb
  6036  042D  01A5               	clrf	i2c_setDataCompleteCallback@cb+1
  6037  042E  01A6               	clrf	i2c_setDataCompleteCallback@p
  6038  042F  24F8               	fcall	_i2c_setDataCompleteCallback
  6039                           
  6040                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  6041  0430  3402               	retlw	2
  6042  0431                     __end_of_rd2RegCompleteHandler:	
  6043  0431                     __ptext58:	
  6044 ;; *************** function _rd1RegCompleteHandler *****************
  6045 ;; Defined at:
  6046 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  p               1    7[BANK0 ] PTR void 
  6049 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6050 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      enum E91
  6055 ;; Registers used:
  6056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 1E/0
  6059 ;;		On exit  : 1F/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6062 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;Total ram usage:        1 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    8
  6069 ;; This function calls:
  6070 ;;		_i2c_setBuffer
  6071 ;;		_i2c_setDataCompleteCallback
  6072 ;; This function is called by:
  6073 ;;		_i2c_read1ByteRegister
  6074 ;;		_do_I2C_DO_ADDRESS_NACK
  6075 ;;		_do_I2C_TX
  6076 ;;		_do_I2C_RX
  6077 ;;		_do_I2C_TX_EMPTY
  6078 ;;		i1_do_I2C_DO_ADDRESS_NACK
  6079 ;;		i1_do_I2C_TX
  6080 ;;		i1_do_I2C_RX
  6081 ;;		i1_do_I2C_TX_EMPTY
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           
  6086                           ;psect for function _rd1RegCompleteHandler
  6087  0431                     _rd1RegCompleteHandler:	
  6088                           
  6089                           ;Skip over the trampoline to the duplicate function for level 1
  6090  0431  1C7E               	btfss	126,0
  6091  0432  2C34               	goto	l2362
  6092  0433  2C0B               	ljmp	i1l2820
  6093  0434                     _rd1RegCompleteHandler$intlevel0:	
  6094  0434                     l2362:	
  6095                           ;incstack = 0
  6096 ;; hardware stack exceeded
  6097                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6098                           
  6099                           
  6100                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  6101  0434  0020               	movlb	0	; select bank0
  6102  0435  01A0               	clrf	i2c_setBuffer@bufferSize
  6103  0436  0AA0               	incf	i2c_setBuffer@bufferSize,f
  6104  0437  01A1               	clrf	i2c_setBuffer@bufferSize+1
  6105  0438  0827               	movf	rd1RegCompleteHandler@p,w
  6106  0439  24E6  3180         	fcall	_i2c_setBuffer
  6107                           
  6108                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  6109  043B  0020               	movlb	0	; select bank0
  6110  043C  01A4               	clrf	i2c_setDataCompleteCallback@cb
  6111  043D  01A5               	clrf	i2c_setDataCompleteCallback@cb+1
  6112  043E  01A6               	clrf	i2c_setDataCompleteCallback@p
  6113  043F  24F8               	fcall	_i2c_setDataCompleteCallback
  6114                           
  6115                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  6116  0440  3402               	retlw	2
  6117  0441                     __end_of_rd1RegCompleteHandler:	
  6118  0441                     __ptext59:	
  6119 ;; *************** function _wr1RegCompleteHandler *****************
  6120 ;; Defined at:
  6121 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  p               1    7[BANK0 ] PTR void 
  6124 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6125 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      enum E91
  6130 ;; Registers used:
  6131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 1E/0
  6134 ;;		On exit  : 1F/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6137 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;Total ram usage:        1 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    8
  6144 ;; This function calls:
  6145 ;;		_i2c_setBuffer
  6146 ;;		_i2c_setDataCompleteCallback
  6147 ;; This function is called by:
  6148 ;;		_i2c_write1ByteRegister
  6149 ;;		_do_I2C_DO_ADDRESS_NACK
  6150 ;;		_do_I2C_TX
  6151 ;;		_do_I2C_RX
  6152 ;;		_do_I2C_TX_EMPTY
  6153 ;;		i1_do_I2C_DO_ADDRESS_NACK
  6154 ;;		i1_do_I2C_TX
  6155 ;;		i1_do_I2C_RX
  6156 ;;		i1_do_I2C_TX_EMPTY
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function _wr1RegCompleteHandler
  6162  0441                     _wr1RegCompleteHandler:	
  6163                           
  6164                           ;Skip over the trampoline to the duplicate function for level 1
  6165  0441  1C7E               	btfss	126,0
  6166  0442  2C44               	goto	l2354
  6167  0443  2C16               	ljmp	i1l2812
  6168  0444                     _wr1RegCompleteHandler$intlevel0:	
  6169  0444                     l2354:	
  6170                           ;incstack = 0
  6171 ;; hardware stack exceeded
  6172                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6173                           
  6174                           
  6175                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  6176  0444  0020               	movlb	0	; select bank0
  6177  0445  01A0               	clrf	i2c_setBuffer@bufferSize
  6178  0446  0AA0               	incf	i2c_setBuffer@bufferSize,f
  6179  0447  01A1               	clrf	i2c_setBuffer@bufferSize+1
  6180  0448  0827               	movf	wr1RegCompleteHandler@p,w
  6181  0449  24E6  3180         	fcall	_i2c_setBuffer
  6182                           
  6183                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  6184  044B  0020               	movlb	0	; select bank0
  6185  044C  01A4               	clrf	i2c_setDataCompleteCallback@cb
  6186  044D  01A5               	clrf	i2c_setDataCompleteCallback@cb+1
  6187  044E  01A6               	clrf	i2c_setDataCompleteCallback@p
  6188  044F  24F8               	fcall	_i2c_setDataCompleteCallback
  6189                           
  6190                           ;i2c_simple_master.c: 35: return i2c_continue;
  6191  0450  3404               	retlw	4
  6192  0451                     __end_of_wr1RegCompleteHandler:	
  6193  0451                     __ptext61:	
  6194 ;; *************** function _wr2RegCompleteHandler *****************
  6195 ;; Defined at:
  6196 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  p               1    7[BANK0 ] PTR void 
  6199 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6200 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      enum E91
  6205 ;; Registers used:
  6206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 1E/0
  6209 ;;		On exit  : 1F/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6212 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;Total ram usage:        1 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    8
  6219 ;; This function calls:
  6220 ;;		_i2c_setBuffer
  6221 ;;		_i2c_setDataCompleteCallback
  6222 ;; This function is called by:
  6223 ;;		_do_I2C_DO_ADDRESS_NACK
  6224 ;;		_do_I2C_TX
  6225 ;;		_do_I2C_RX
  6226 ;;		_do_I2C_TX_EMPTY
  6227 ;;		i1_do_I2C_DO_ADDRESS_NACK
  6228 ;;		i1_do_I2C_TX
  6229 ;;		i1_do_I2C_RX
  6230 ;;		i1_do_I2C_TX_EMPTY
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           
  6235                           ;psect for function _wr2RegCompleteHandler
  6236  0451                     _wr2RegCompleteHandler:	
  6237                           
  6238                           ;Skip over the trampoline to the duplicate function for level 1
  6239  0451  1C7E               	btfss	126,0
  6240  0452  2C54               	goto	l2378
  6241  0453  2D6F               	ljmp	i1l2836
  6242  0454                     _wr2RegCompleteHandler$intlevel0:	
  6243  0454                     l2378:	
  6244                           ;incstack = 0
  6245 ;; hardware stack exceeded
  6246                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6247                           
  6248                           
  6249                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  6250  0454  3002               	movlw	2
  6251  0455  0020               	movlb	0	; select bank0
  6252  0456  00A0               	movwf	i2c_setBuffer@bufferSize
  6253  0457  01A1               	clrf	i2c_setBuffer@bufferSize+1
  6254  0458  0827               	movf	wr2RegCompleteHandler@p,w
  6255  0459  24E6  3180         	fcall	_i2c_setBuffer
  6256                           
  6257                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  6258  045B  0020               	movlb	0	; select bank0
  6259  045C  01A4               	clrf	i2c_setDataCompleteCallback@cb
  6260  045D  01A5               	clrf	i2c_setDataCompleteCallback@cb+1
  6261  045E  01A6               	clrf	i2c_setDataCompleteCallback@p
  6262  045F  24F8               	fcall	_i2c_setDataCompleteCallback
  6263                           
  6264                           ;i2c_simple_master.c: 114: return i2c_continue;
  6265  0460  3404               	retlw	4
  6266  0461                     __end_of_wr2RegCompleteHandler:	
  6267  0461                     __ptext56:	
  6268 ;; *************** function _rdBlkRegCompleteHandler *****************
  6269 ;; Defined at:
  6270 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  p               1    7[BANK0 ] PTR void 
  6273 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6274 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      enum E91
  6279 ;; Registers used:
  6280 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 1E/0
  6283 ;;		On exit  : 1F/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6286 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;Total ram usage:        1 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    8
  6293 ;; This function calls:
  6294 ;;		_i2c_setBuffer
  6295 ;;		_i2c_setDataCompleteCallback
  6296 ;; This function is called by:
  6297 ;;		_do_I2C_DO_ADDRESS_NACK
  6298 ;;		_do_I2C_TX
  6299 ;;		_do_I2C_RX
  6300 ;;		_do_I2C_TX_EMPTY
  6301 ;;		i1_do_I2C_DO_ADDRESS_NACK
  6302 ;;		i1_do_I2C_TX
  6303 ;;		i1_do_I2C_RX
  6304 ;;		i1_do_I2C_TX_EMPTY
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function _rdBlkRegCompleteHandler
  6310  0461                     _rdBlkRegCompleteHandler:	
  6311                           
  6312                           ;Skip over the trampoline to the duplicate function for level 1
  6313  0461  1C7E               	btfss	126,0
  6314  0462  2C64               	goto	l2386
  6315  0463  2D7A               	ljmp	i1l2844
  6316  0464                     _rdBlkRegCompleteHandler$intlevel0:	
  6317  0464                     l2386:	
  6318                           ;incstack = 0
  6319 ;; hardware stack exceeded
  6320                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6321                           
  6322                           
  6323                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  6324  0464  0020               	movlb	0	; select bank0
  6325  0465  0827               	movf	rdBlkRegCompleteHandler@p,w
  6326  0466  0086               	movwf	6
  6327  0467  0187               	clrf	7
  6328  0468  3F40               	moviw [0]fsr1
  6329  0469  00A0               	movwf	i2c_setBuffer@bufferSize
  6330  046A  3F41               	moviw [1]fsr1
  6331  046B  00A1               	movwf	i2c_setBuffer@bufferSize+1
  6332  046C  0827               	movf	rdBlkRegCompleteHandler@p,w
  6333  046D  3E02               	addlw	2
  6334  046E  0086               	movwf	6
  6335  046F  0801               	movf	1,w
  6336  0470  24E6  3180         	fcall	_i2c_setBuffer
  6337                           
  6338                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  6339  0472  0020               	movlb	0	; select bank0
  6340  0473  01A4               	clrf	i2c_setDataCompleteCallback@cb
  6341  0474  01A5               	clrf	i2c_setDataCompleteCallback@cb+1
  6342  0475  01A6               	clrf	i2c_setDataCompleteCallback@p
  6343  0476  24F8               	fcall	_i2c_setDataCompleteCallback
  6344                           
  6345                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  6346  0477  3402               	retlw	2
  6347  0478                     __end_of_rdBlkRegCompleteHandler:	
  6348  0478                     __ptext19:	
  6349 ;; *************** function _i2c_write1ByteRegister *****************
  6350 ;; Defined at:
  6351 ;;		line 38 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  address         1    wreg     unsigned char 
  6354 ;;  reg             1   12[BANK0 ] unsigned char 
  6355 ;;  data            1   13[BANK0 ] unsigned char 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  address         1   14[BANK0 ] unsigned char 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1    wreg      void 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 1F/0
  6364 ;;		On exit  : 1F/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;Total ram usage:        3 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:   14
  6374 ;; This function calls:
  6375 ;;		_i2c_close
  6376 ;;		_i2c_masterWrite
  6377 ;;		_i2c_open
  6378 ;;		_i2c_setAddressNACKCallback
  6379 ;;		_i2c_setBuffer
  6380 ;;		_i2c_setDataCompleteCallback
  6381 ;; This function is called by:
  6382 ;;		_fan_write
  6383 ;;		_Write_Thermo_Register
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           
  6388                           ;psect for function _i2c_write1ByteRegister
  6389  0478                     _i2c_write1ByteRegister:	
  6390                           
  6391                           ;incstack = 0
  6392 ;; hardware stack exceeded
  6393                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6394                           ;i2c_write1ByteRegister@address stored from wreg
  6395  0478  00AE               	movwf	i2c_write1ByteRegister@address
  6396  0479                     l4734:	
  6397                           ;i2c_simple_master.c: 40: while(!i2c_open(address));
  6398                           
  6399  0479  082E               	movf	i2c_write1ByteRegister@address,w
  6400  047A  2502  3180         	fcall	_i2c_open
  6401  047C  3A00               	xorlw	0
  6402  047D  1903               	skipnz
  6403  047E  2C79               	goto	l4734
  6404                           
  6405                           ;i2c_simple_master.c: 41: i2c_setDataCompleteCallback(wr1RegCompleteHandler,&data);
  6406  047F  3041               	movlw	low _wr1RegCompleteHandler
  6407  0480  00A4               	movwf	i2c_setDataCompleteCallback@cb
  6408  0481  3004               	movlw	high _wr1RegCompleteHandler
  6409  0482  00A5               	movwf	i2c_setDataCompleteCallback@cb+1
  6410  0483  302D               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
  6411  0484  00A6               	movwf	i2c_setDataCompleteCallback@p
  6412  0485  24F8  3180         	fcall	_i2c_setDataCompleteCallback
  6413  0487  302C               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
  6414                           
  6415                           ;i2c_simple_master.c: 42: i2c_setBuffer(&reg,1);
  6416  0488  01A0               	clrf	i2c_setBuffer@bufferSize
  6417  0489  0AA0               	incf	i2c_setBuffer@bufferSize,f
  6418  048A  01A1               	clrf	i2c_setBuffer@bufferSize+1
  6419  048B  24E6  3180         	fcall	_i2c_setBuffer
  6420                           
  6421                           ;i2c_simple_master.c: 43: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
  6422  048D  303D               	movlw	low _i2c_restartWrite
  6423  048E  0020               	movlb	0	; select bank0
  6424  048F  00A4               	movwf	i2c_setAddressNACKCallback@cb
  6425  0490  300F               	movlw	high _i2c_restartWrite
  6426  0491  00A5               	movwf	i2c_setAddressNACKCallback@cb+1
  6427  0492  01A6               	clrf	i2c_setAddressNACKCallback@p
  6428  0493  2547  3180         	fcall	_i2c_setAddressNACKCallback
  6429                           
  6430                           ;i2c_simple_master.c: 44: i2c_masterWrite();
  6431  0495  2500  3180         	fcall	_i2c_masterWrite
  6432  0497                     l4744:	
  6433                           ;i2c_simple_master.c: 45: while(I2C_BUSY == i2c_close());
  6434                           
  6435  0497  24D4  3180         	fcall	_i2c_close
  6436  0499  3A01               	xorlw	1
  6437  049A  1D03               	btfss	3,2
  6438  049B  0008               	return
  6439  049C  2C97               	goto	l4744
  6440  049D                     __end_of_i2c_write1ByteRegister:	
  6441  049D                     __ptext12:	
  6442 ;; *************** function _i2c_read1ByteRegister *****************
  6443 ;; Defined at:
  6444 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  address         1    wreg     unsigned char 
  6447 ;;  reg             1   12[BANK0 ] unsigned char 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  address         1   13[BANK0 ] unsigned char 
  6450 ;;  x               2   15[BANK0 ] int 
  6451 ;;  d2              1   17[BANK0 ] unsigned char 
  6452 ;;  e               1   14[BANK0 ] enum E86
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 1F/0
  6459 ;;		On exit  : 1F/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6462 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;Total ram usage:        6 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:   14
  6469 ;; This function calls:
  6470 ;;		_i2c_close
  6471 ;;		_i2c_masterWrite
  6472 ;;		_i2c_open
  6473 ;;		_i2c_setAddressNACKCallback
  6474 ;;		_i2c_setBuffer
  6475 ;;		_i2c_setDataCompleteCallback
  6476 ;; This function is called by:
  6477 ;;		_Read_Thermo_Register
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           
  6482                           ;psect for function _i2c_read1ByteRegister
  6483  049D                     _i2c_read1ByteRegister:	
  6484                           
  6485                           ;incstack = 0
  6486 ;; hardware stack exceeded
  6487                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6488                           ;i2c_read1ByteRegister@address stored from wreg
  6489  049D  00AD               	movwf	i2c_read1ByteRegister@address
  6490                           
  6491                           ;i2c_simple_master.c: 67: uint8_t d2=42;
  6492  049E  302A               	movlw	42
  6493  049F  00B1               	movwf	i2c_read1ByteRegister@d2
  6494                           
  6495                           ;i2c_simple_master.c: 68: i2c_error_t e;
  6496                           ;i2c_simple_master.c: 69: int x;
  6497                           ;i2c_simple_master.c: 71: for(x = 2; x != 0; x--)
  6498  04A0  3002               	movlw	2
  6499  04A1  00AF               	movwf	i2c_read1ByteRegister@x
  6500  04A2  01B0               	clrf	i2c_read1ByteRegister@x+1
  6501  04A3                     l4754:	
  6502  04A3  082D               	movf	i2c_read1ByteRegister@address,w
  6503  04A4  2502  3180         	fcall	_i2c_open
  6504  04A6  3A00               	xorlw	0
  6505  04A7  1903               	skipnz
  6506  04A8  2CA3               	goto	l4754
  6507                           
  6508                           ;i2c_simple_master.c: 74: i2c_setDataCompleteCallback(rd1RegCompleteHandler,&d2);
  6509  04A9  3031               	movlw	low _rd1RegCompleteHandler
  6510  04AA  00A4               	movwf	i2c_setDataCompleteCallback@cb
  6511  04AB  3004               	movlw	high _rd1RegCompleteHandler
  6512  04AC  00A5               	movwf	i2c_setDataCompleteCallback@cb+1
  6513  04AD  3031               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
  6514  04AE  00A6               	movwf	i2c_setDataCompleteCallback@p
  6515  04AF  24F8  3180         	fcall	_i2c_setDataCompleteCallback
  6516  04B1  302C               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
  6517                           
  6518                           ;i2c_simple_master.c: 75: i2c_setBuffer(&reg,1);
  6519  04B2  01A0               	clrf	i2c_setBuffer@bufferSize
  6520  04B3  0AA0               	incf	i2c_setBuffer@bufferSize,f
  6521  04B4  01A1               	clrf	i2c_setBuffer@bufferSize+1
  6522  04B5  24E6  3180         	fcall	_i2c_setBuffer
  6523                           
  6524                           ;i2c_simple_master.c: 76: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
  6525  04B7  303D               	movlw	low _i2c_restartWrite
  6526  04B8  0020               	movlb	0	; select bank0
  6527  04B9  00A4               	movwf	i2c_setAddressNACKCallback@cb
  6528  04BA  300F               	movlw	high _i2c_restartWrite
  6529  04BB  00A5               	movwf	i2c_setAddressNACKCallback@cb+1
  6530  04BC  01A6               	clrf	i2c_setAddressNACKCallback@p
  6531  04BD  2547  3180         	fcall	_i2c_setAddressNACKCallback
  6532                           
  6533                           ;i2c_simple_master.c: 77: i2c_masterWrite();
  6534  04BF  2500  3180         	fcall	_i2c_masterWrite
  6535  04C1                     l4764:	
  6536                           ;i2c_simple_master.c: 78: while(I2C_BUSY == (e = i2c_close()));
  6537                           
  6538  04C1  24D4  3180         	fcall	_i2c_close
  6539  04C3  00AE               	movwf	i2c_read1ByteRegister@e
  6540  04C4  032E               	decf	i2c_read1ByteRegister@e,w
  6541  04C5  1903               	btfsc	3,2
  6542  04C6  2CC1               	goto	l4764
  6543                           
  6544                           ;i2c_simple_master.c: 79: if(e==I2C_NOERR) break;
  6545  04C7  082E               	movf	i2c_read1ByteRegister@e,w
  6546  04C8  1903               	btfsc	3,2
  6547  04C9  2CD2               	goto	l4772
  6548  04CA  30FF               	movlw	-1
  6549  04CB  07AF               	addwf	i2c_read1ByteRegister@x,f
  6550  04CC  1C03               	skipc
  6551  04CD  03B0               	decf	i2c_read1ByteRegister@x+1,f
  6552  04CE  082F               	movf	i2c_read1ByteRegister@x,w
  6553  04CF  0430               	iorwf	i2c_read1ByteRegister@x+1,w
  6554  04D0  1D03               	btfss	3,2
  6555  04D1  2CA3               	goto	l4754
  6556  04D2                     l4772:	
  6557                           
  6558                           ;i2c_simple_master.c: 80: }
  6559                           ;i2c_simple_master.c: 83: return d2;
  6560  04D2  0831               	movf	i2c_read1ByteRegister@d2,w
  6561  04D3  0008               	return
  6562  04D4                     __end_of_i2c_read1ByteRegister:	
  6563  04D4                     __ptext69:	
  6564 ;; *************** function _i2c_close *****************
  6565 ;; Defined at:
  6566 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;		None
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  ret             1    0[BANK0 ] enum E14433
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      enum E86
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, pclath, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 1F/0
  6577 ;;		On exit  : 1F/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;Total ram usage:        1 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    7
  6587 ;; This function calls:
  6588 ;;		_mssp1_clearIRQ
  6589 ;;		_mssp1_disableIRQ
  6590 ;; This function is called by:
  6591 ;;		_i2c_write1ByteRegister
  6592 ;;		_i2c_read1ByteRegister
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _i2c_close
  6598  04D4                     _i2c_close:	
  6599                           
  6600                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _i2c_close: [wreg+status,2+status,0+pclath+cstack]
  6604  04D4  01A0               	clrf	i2c_close@ret
  6605  04D5  0AA0               	incf	i2c_close@ret,f
  6606                           
  6607                           ;i2c_master.c: 165: if(!i2c_status.busy)
  6608  04D6  0021               	movlb	1	; select bank1
  6609  04D7  1840               	btfsc	_i2c_status^(0+128),0
  6610  04D8  2CE3               	goto	l331
  6611  04D9  30FF               	movlw	255
  6612                           
  6613                           ;i2c_master.c: 166: {
  6614                           ;i2c_master.c: 167: i2c_status.inUse = 0;
  6615  04DA  10C0               	bcf	_i2c_status^(0+128),1
  6616                           
  6617                           ;i2c_master.c: 169: i2c_status.address = 0xff;
  6618  04DB  00C1               	movwf	(_i2c_status^(0+128)+1)
  6619  04DC                     i19L__ptext71:	
  6620                           ;i2c_master.c: 170: mssp1_clearIRQ();
  6621                           
  6622                           
  6623                           ;psect for function _mssp1_clearIRQ
  6624  04DC                     i19L_mssp1_clearIRQ:	
  6625  04DC                     i19Ll2440:	
  6626                           
  6627                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  6628  04DC  002E               	movlb	14	; select bank14
  6629  04DD  100F               	bcf	15,0	;volatile
  6630  04DE                     i19Ll43:	
  6631  04DE                     i20L__ptext70:	
  6632                           ;i2c_master.c: 171: mssp1_disableIRQ();
  6633                           
  6634                           
  6635                           ;psect for function _mssp1_disableIRQ
  6636  04DE                     i20L_mssp1_disableIRQ:	
  6637  04DE                     i20Ll2612:	
  6638                           
  6639                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
  6640  04DE  1019               	bcf	25,0	;volatile
  6641  04DF                     i20Ll40:	
  6642                           
  6643                           ;i2c_master.c: 172: ret = i2c_status.error;
  6644  04DF  0021               	movlb	1	; select bank1
  6645  04E0  084A               	movf	(_i2c_status^(0+128)+10),w
  6646  04E1  0020               	movlb	0	; select bank0
  6647  04E2  00A0               	movwf	i2c_close@ret
  6648  04E3                     l331:	
  6649                           
  6650                           ;i2c_master.c: 173: }
  6651                           ;i2c_master.c: 174: return ret;
  6652  04E3  0020               	movlb	0	; select bank0
  6653  04E4  0820               	movf	i2c_close@ret,w
  6654  04E5  0008               	return
  6655  04E6                     __end_of_i2c_close:	
  6656  04E6                     __ptext64:	
  6657 ;; *************** function _i2c_setBuffer *****************
  6658 ;; Defined at:
  6659 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  buffer          1    wreg     PTR void 
  6662 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  6663 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  6664 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  6665 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  buffer          1    2[BANK0 ] PTR void 
  6668 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  6669 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  6670 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg
  6675 ;; Tracked objects:
  6676 ;;		On entry : 1F/0
  6677 ;;		On exit  : 1F/1
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6684 ;;Total ram usage:        3 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    6
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_wr1RegCompleteHandler
  6691 ;;		_i2c_write1ByteRegister
  6692 ;;		_rd1RegCompleteHandler
  6693 ;;		_i2c_read1ByteRegister
  6694 ;;		_rd2RegCompleteHandler
  6695 ;;		_wr2RegCompleteHandler
  6696 ;;		_rdBlkRegCompleteHandler
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           
  6701                           ;psect for function _i2c_setBuffer
  6702  04E6                     _i2c_setBuffer:	
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in _i2c_setBuffer: [wreg]
  6706                           ;i2c_setBuffer@buffer stored from wreg
  6707  04E6  00A2               	movwf	i2c_setBuffer@buffer
  6708                           
  6709                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  6710  04E7  0021               	movlb	1	; select bank1
  6711  04E8  1D40               	btfss	_i2c_status^(0+128),2
  6712  04E9  0008               	return
  6713                           
  6714                           ;i2c_master.c: 187: {
  6715                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  6716  04EA  0020               	movlb	0	; select bank0
  6717  04EB  0822               	movf	i2c_setBuffer@buffer,w
  6718  04EC  0021               	movlb	1	; select bank1
  6719  04ED  00C2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
  6720                           
  6721                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  6722  04EE  0020               	movlb	0	; select bank0
  6723  04EF  0821               	movf	i2c_setBuffer@bufferSize+1,w
  6724  04F0  0021               	movlb	1	; select bank1
  6725  04F1  00C4               	movwf	((_i2c_status+1)^(0+128)+3)
  6726  04F2  0020               	movlb	0	; select bank0
  6727  04F3  0820               	movf	i2c_setBuffer@bufferSize,w
  6728  04F4  0021               	movlb	1	; select bank1
  6729  04F5  00C3               	movwf	(_i2c_status^(0+128)+3)
  6730                           
  6731                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  6732  04F6  1140               	bcf	_i2c_status^(0+128),2
  6733  04F7  0008               	return
  6734  04F8                     __end_of_i2c_setBuffer:	
  6735  04F8                     __ptext62:	
  6736 ;; *************** function _i2c_setDataCompleteCallback *****************
  6737 ;; Defined at:
  6738 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
  6741 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6742 ;;		 -> Absolute function(1), wr1RegCompleteHandler(1), 
  6743 ;;  p               1    6[BANK0 ] PTR void 
  6744 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6745 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 1F/0
  6754 ;;		On exit  : 1F/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6757 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;Total ram usage:        3 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    7
  6764 ;; This function calls:
  6765 ;;		_setCallBack
  6766 ;; This function is called by:
  6767 ;;		_wr1RegCompleteHandler
  6768 ;;		_i2c_write1ByteRegister
  6769 ;;		_rd1RegCompleteHandler
  6770 ;;		_i2c_read1ByteRegister
  6771 ;;		_rd2RegCompleteHandler
  6772 ;;		_wr2RegCompleteHandler
  6773 ;;		_rdBlkRegCompleteHandler
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           
  6778                           ;psect for function _i2c_setDataCompleteCallback
  6779  04F8                     _i2c_setDataCompleteCallback:	
  6780                           
  6781                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  6782                           
  6783                           ;incstack = 0
  6784                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6785  04F8  0825               	movf	i2c_setDataCompleteCallback@cb+1,w
  6786  04F9  00A1               	movwf	setCallBack@cb+1
  6787  04FA  0824               	movf	i2c_setDataCompleteCallback@cb,w
  6788  04FB  00A0               	movwf	setCallBack@cb
  6789  04FC  0826               	movf	i2c_setDataCompleteCallback@p,w
  6790  04FD  00A2               	movwf	setCallBack@p
  6791  04FE  3000               	movlw	0
  6792  04FF  2D4F               	ljmp	_setCallBack
  6793  0500                     __end_of_i2c_setDataCompleteCallback:	
  6794  0500                     __ptext25:	
  6795 ;; *************** function _i2c_masterWrite *****************
  6796 ;; Defined at:
  6797 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      enum E86
  6804 ;; Registers used:
  6805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 1F/0
  6808 ;;		On exit  : 1F/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:   13
  6818 ;; This function calls:
  6819 ;;		_i2c_masterOperation
  6820 ;; This function is called by:
  6821 ;;		_i2c_write1ByteRegister
  6822 ;;		_i2c_read1ByteRegister
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           
  6827                           ;psect for function _i2c_masterWrite
  6828  0500                     _i2c_masterWrite:	
  6829                           
  6830                           ;i2c_master.c: 224: return i2c_masterOperation(0);
  6831                           ;	Return value of _i2c_masterWrite is never used
  6832                           
  6833                           ;incstack = 0
  6834 ;; hardware stack exceeded
  6835                           ; Regs used in _i2c_masterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6836  0500  3000               	movlw	0
  6837  0501  2DC1               	ljmp	_i2c_masterOperation
  6838  0502                     __end_of_i2c_masterWrite:	
  6839  0502                     __ptext21:	
  6840 ;; *************** function _i2c_open *****************
  6841 ;; Defined at:
  6842 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  address         1    wreg     unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  address         1    2[BANK0 ] unsigned char 
  6847 ;;  ret             1    3[BANK0 ] enum E14433
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      enum E86
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0, pclath, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 1F/0
  6854 ;;		On exit  : 1F/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;Total ram usage:        2 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    7
  6864 ;; This function calls:
  6865 ;;		_i2c1_driver_open
  6866 ;;		_i2c1_driver_setBusCollisionISR
  6867 ;;		_i2c1_driver_setI2cISR
  6868 ;;		_mssp1_clearIRQ
  6869 ;; This function is called by:
  6870 ;;		_i2c_write1ByteRegister
  6871 ;;		_i2c_read1ByteRegister
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           
  6876                           ;psect for function _i2c_open
  6877  0502                     _i2c_open:	
  6878                           
  6879                           ;incstack = 0
  6880                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
  6881                           ;i2c_open@address stored from wreg
  6882  0502  00A2               	movwf	i2c_open@address
  6883                           
  6884                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
  6885  0503  01A3               	clrf	i2c_open@ret
  6886  0504  0AA3               	incf	i2c_open@ret,f
  6887                           
  6888                           ;i2c_master.c: 120: if(!i2c_status.inUse)
  6889  0505  0021               	movlb	1	; select bank1
  6890  0506  18C0               	btfsc	_i2c_status^(0+128),1
  6891  0507  2D44               	goto	l324
  6892                           
  6893                           ;i2c_master.c: 121: {
  6894                           ;i2c_master.c: 122: i2c_status.address = address;
  6895  0508  0020               	movlb	0	; select bank0
  6896  0509  0822               	movf	i2c_open@address,w
  6897  050A  0021               	movlb	1	; select bank1
  6898  050B  00C1               	movwf	(_i2c_status^(0+128)+1)
  6899  050C  300E               	movlw	14
  6900                           
  6901                           ;i2c_master.c: 123: i2c_status.busy = 0;
  6902  050D  1040               	bcf	_i2c_status^(0+128),0
  6903                           
  6904                           ;i2c_master.c: 124: i2c_status.inUse = 1;
  6905  050E  14C0               	bsf	_i2c_status^(0+128),1
  6906  050F  11C0               	bcf	_i2c_status^(0+128),3
  6907                           
  6908                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
  6909  0510  00C9               	movwf	(_i2c_status^(0+128)+9)
  6910                           
  6911                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
  6912  0511  30F4               	movlw	244
  6913  0512  00C7               	movwf	(_i2c_status^(0+128)+7)
  6914  0513  3001               	movlw	1
  6915  0514  00C8               	movwf	(_i2c_status^(0+128)+8)
  6916  0515  3042               	movlw	low _returnStop
  6917                           
  6918                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
  6919  0516  1540               	bsf	_i2c_status^(0+128),2
  6920                           
  6921                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
  6922  0517  00CB               	movwf	(low ((_i2c_status| 0+11)))^(0+128)
  6923  0518  300F               	movlw	high _returnStop
  6924  0519  00CC               	movwf	((low ((_i2c_status| 0+11)))^(0+128)+1)
  6925  051A  3042               	movlw	low _returnStop
  6926                           
  6927                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
  6928  051B  01D7               	clrf	(low ((_i2c_status| 0+23)))^(0+128)
  6929                           
  6930                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
  6931  051C  00CD               	movwf	(low ((_i2c_status| 0+13)))^(0+128)
  6932  051D  300F               	movlw	high _returnStop
  6933  051E  00CE               	movwf	((low ((_i2c_status| 0+13)))^(0+128)+1)
  6934  051F  3042               	movlw	low _returnStop
  6935                           
  6936                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
  6937  0520  01D8               	clrf	(low ((_i2c_status| 0+24)))^(0+128)
  6938                           
  6939                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
  6940  0521  00CF               	movwf	(low ((_i2c_status| 0+15)))^(0+128)
  6941  0522  300F               	movlw	high _returnStop
  6942  0523  00D0               	movwf	((low ((_i2c_status| 0+15)))^(0+128)+1)
  6943  0524  3042               	movlw	low _returnStop
  6944                           
  6945                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
  6946  0525  01D9               	clrf	(low ((_i2c_status| 0+25)))^(0+128)
  6947                           
  6948                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
  6949  0526  00D1               	movwf	(low ((_i2c_status| 0+17)))^(0+128)
  6950  0527  300F               	movlw	high _returnStop
  6951  0528  00D2               	movwf	((low ((_i2c_status| 0+17)))^(0+128)+1)
  6952  0529  3047               	movlw	low _returnReset
  6953                           
  6954                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
  6955  052A  01DA               	clrf	(low ((_i2c_status| 0+26)))^(0+128)
  6956                           
  6957                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
  6958  052B  00D3               	movwf	(low ((_i2c_status| 0+19)))^(0+128)
  6959  052C  300F               	movlw	high _returnReset
  6960  052D  00D4               	movwf	((low ((_i2c_status| 0+19)))^(0+128)+1)
  6961                           
  6962                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
  6963  052E  01DB               	clrf	(low ((_i2c_status| 0+27)))^(0+128)
  6964                           
  6965                           ;i2c_master.c: 142: i2c1_driver_open();
  6966  052F  2649               	fcall	_i2c1_driver_open
  6967  0530                     i1L__ptext71:	
  6968                           ;i2c_master.c: 143: mssp1_clearIRQ();
  6969                           
  6970                           
  6971                           ;psect for function _mssp1_clearIRQ
  6972  0530                     i1L_mssp1_clearIRQ:	
  6973  0530                     i1Ll2440:	
  6974                           
  6975                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  6976  0530  002E               	movlb	14	; select bank14
  6977  0531  100F               	bcf	15,0	;volatile
  6978  0532                     i1Ll43:	
  6979                           
  6980                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
  6981  0532  30FC               	movlw	low _i2c_busCollisionISR
  6982  0533  0020               	movlb	0	; select bank0
  6983  0534  00A0               	movwf	i2c1_driver_setBusCollisionISR@f
  6984  0535  3007               	movlw	high _i2c_busCollisionISR
  6985  0536  00A1               	movwf	i2c1_driver_setBusCollisionISR@f+1
  6986  0537                     i2L__ptext23:	
  6987                           
  6988                           ;psect for function _i2c1_driver_setBusCollisionISR
  6989  0537                     i2L_i2c1_driver_setBusCollisionISR:	
  6990  0537                     i2Ll2626:	
  6991                           
  6992                           ;i2c1_driver.c: 244: i2c1_driver_busCollisionISR = f;
  6993  0537  0821               	movf	i2c1_driver_setBusCollisionISR@f+1,w
  6994  0538  00DE               	movwf	_i2c1_driver_busCollisionISR+1
  6995  0539  0820               	movf	i2c1_driver_setBusCollisionISR@f,w
  6996  053A  00DD               	movwf	_i2c1_driver_busCollisionISR
  6997  053B                     i2Ll129:	
  6998                           
  6999                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
  7000  053B  30FB               	movlw	low _i2c_ISR
  7001  053C  00A0               	movwf	i2c1_driver_setI2cISR@f
  7002  053D  3005               	movlw	high _i2c_ISR
  7003  053E  00A1               	movwf	i2c1_driver_setI2cISR@f+1
  7004  053F                     i3L__ptext22:	
  7005                           
  7006                           ;psect for function _i2c1_driver_setI2cISR
  7007  053F                     i3L_i2c1_driver_setI2cISR:	
  7008  053F                     i3Ll2628:	
  7009                           
  7010                           ;i2c1_driver.c: 248: i2c1_driver_i2cISR = f;
  7011  053F  0821               	movf	i2c1_driver_setI2cISR@f+1,w
  7012  0540  00DC               	movwf	_i2c1_driver_i2cISR+1
  7013  0541  0820               	movf	i2c1_driver_setI2cISR@f,w
  7014  0542  00DB               	movwf	_i2c1_driver_i2cISR
  7015  0543                     i3Ll132:	
  7016                           
  7017                           ;i2c_master.c: 151: ret = I2C_NOERR;
  7018  0543  01A3               	clrf	i2c_open@ret
  7019  0544                     l324:	
  7020                           
  7021                           ;i2c_master.c: 152: }
  7022                           ;i2c_master.c: 153: return ret;
  7023  0544  0020               	movlb	0	; select bank0
  7024  0545  0823               	movf	i2c_open@ret,w
  7025  0546  0008               	return
  7026  0547                     __end_of_i2c_open:	
  7027  0547                     __ptext20:	
  7028 ;; *************** function _i2c_setAddressNACKCallback *****************
  7029 ;; Defined at:
  7030 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
  7033 ;;		 -> i2c_restartWrite(1), 
  7034 ;;  p               1    6[BANK0 ] PTR void 
  7035 ;;		 -> NULL(0), 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 1F/0
  7044 ;;		On exit  : 1F/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7047 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;Total ram usage:        3 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    7
  7054 ;; This function calls:
  7055 ;;		_setCallBack
  7056 ;; This function is called by:
  7057 ;;		_i2c_write1ByteRegister
  7058 ;;		_i2c_read1ByteRegister
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function _i2c_setAddressNACKCallback
  7064  0547                     _i2c_setAddressNACKCallback:	
  7065                           
  7066                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
  7067                           
  7068                           ;incstack = 0
  7069                           ; Regs used in _i2c_setAddressNACKCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7070  0547  0825               	movf	i2c_setAddressNACKCallback@cb+1,w
  7071  0548  00A1               	movwf	setCallBack@cb+1
  7072  0549  0824               	movf	i2c_setAddressNACKCallback@cb,w
  7073  054A  00A0               	movwf	setCallBack@cb
  7074  054B  0826               	movf	i2c_setAddressNACKCallback@p,w
  7075  054C  00A2               	movwf	setCallBack@p
  7076  054D  3002               	movlw	2
  7077  054E  2D4F               	ljmp	_setCallBack
  7078  054F                     __end_of_i2c_setAddressNACKCallback:	
  7079  054F                     __ptext63:	
  7080 ;; *************** function _setCallBack *****************
  7081 ;; Defined at:
  7082 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  idx             1    wreg     enum E14613
  7085 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  7086 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7087 ;;		 -> i2c_restartWrite(1), Absolute function(1), wr1RegCompleteHandler(1), 
  7088 ;;  p               1    2[BANK0 ] PTR void 
  7089 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7090 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  idx             1    3[BANK0 ] enum E14613
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7097 ;; Tracked objects:
  7098 ;;		On entry : 1F/0
  7099 ;;		On exit  : 1F/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:        4 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:    6
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_i2c_setDataCompleteCallback
  7113 ;;		_i2c_setAddressNACKCallback
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function _setCallBack
  7119  054F                     _setCallBack:	
  7120                           
  7121                           ;incstack = 0
  7122                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
  7123                           ;setCallBack@idx stored from wreg
  7124  054F  00A3               	movwf	setCallBack@idx
  7125                           
  7126                           ;i2c_master.c: 455: if(cb)
  7127  0550  0820               	movf	setCallBack@cb,w
  7128  0551  0421               	iorwf	setCallBack@cb+1,w
  7129  0552  1903               	btfsc	3,2
  7130  0553  2D62               	goto	l2322
  7131                           
  7132                           ;i2c_master.c: 456: {
  7133                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  7134  0554  3523               	lslf	setCallBack@idx,w
  7135  0555  3ECB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  7136  0556  0086               	movwf	6
  7137  0557  0187               	clrf	7
  7138  0558  0820               	movf	setCallBack@cb,w
  7139  0559  3FC0               	movwi [0]fsr1
  7140  055A  0821               	movf	setCallBack@cb+1,w
  7141  055B  3FC1               	movwi [1]fsr1
  7142                           
  7143                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  7144  055C  0823               	movf	setCallBack@idx,w
  7145  055D  3ED7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  7146  055E  0086               	movwf	6
  7147  055F  0822               	movf	setCallBack@p,w
  7148  0560  0081               	movwf	1
  7149                           
  7150                           ;i2c_master.c: 459: }
  7151  0561  0008               	return
  7152  0562                     l2322:	
  7153                           
  7154                           ;i2c_master.c: 460: else
  7155                           ;i2c_master.c: 461: {
  7156                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  7157  0562  3523               	lslf	setCallBack@idx,w
  7158  0563  3ECB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  7159  0564  0086               	movwf	6
  7160  0565  3042               	movlw	low _returnStop
  7161  0566  0187               	clrf	7
  7162  0567  3FC0               	movwi [0]fsr1
  7163  0568  300F               	movlw	high _returnStop
  7164  0569  3FC1               	movwi [1]fsr1
  7165                           
  7166                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  7167  056A  0823               	movf	setCallBack@idx,w
  7168  056B  3ED7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  7169  056C  0086               	movwf	6
  7170  056D  0181               	clrf	1
  7171  056E  0008               	return
  7172  056F                     __end_of_setCallBack:	
  7173  056F                     __ptext107:	
  7174 ;; *************** function i1_wr2RegCompleteHandler *****************
  7175 ;; Defined at:
  7176 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  p               1    7[COMMON] PTR void 
  7179 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7180 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      enum E91
  7185 ;; Registers used:
  7186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 1F/1
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;Total ram usage:        1 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    2
  7199 ;; This function calls:
  7200 ;;		i1_i2c_setBuffer
  7201 ;;		i1_i2c_setDataCompleteCallback
  7202 ;; This function is called by:
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           
  7207                           ;psect for function i1_wr2RegCompleteHandler
  7208  056F                     i1_wr2RegCompleteHandler:	
  7209  056F                     i1l2836:	
  7210                           ;incstack = 0
  7211 ;; hardware stack exceeded
  7212                           ; Regs used in i1_wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7213                           
  7214                           
  7215                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  7216  056F  3002               	movlw	2
  7217  0570  00F0               	movwf	i1i2c_setBuffer@bufferSize
  7218  0571  01F1               	clrf	i1i2c_setBuffer@bufferSize+1
  7219  0572  0877               	movf	i1wr2RegCompleteHandler@p,w
  7220  0573  258C  3180         	fcall	i1_i2c_setBuffer
  7221                           
  7222                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  7223  0575  01F4               	clrf	i1i2c_setDataCompleteCallback@cb
  7224  0576  01F5               	clrf	i1i2c_setDataCompleteCallback@cb+1
  7225  0577  01F6               	clrf	i1i2c_setDataCompleteCallback@p
  7226  0578  2598               	fcall	i1_i2c_setDataCompleteCallback
  7227                           
  7228                           ;i2c_simple_master.c: 114: return i2c_continue;
  7229  0579  3404               	retlw	4
  7230  057A                     __end_ofi1_wr2RegCompleteHandler:	
  7231  057A                     __ptext103:	
  7232 ;; *************** function i1_rdBlkRegCompleteHandler *****************
  7233 ;; Defined at:
  7234 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  p               1    7[COMMON] PTR void 
  7237 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7238 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      enum E91
  7243 ;; Registers used:
  7244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 1F/1
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;Total ram usage:        1 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    2
  7257 ;; This function calls:
  7258 ;;		i1_i2c_setBuffer
  7259 ;;		i1_i2c_setDataCompleteCallback
  7260 ;; This function is called by:
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           
  7265                           ;psect for function i1_rdBlkRegCompleteHandler
  7266  057A                     i1_rdBlkRegCompleteHandler:	
  7267  057A                     i1l2844:	
  7268                           ;incstack = 0
  7269 ;; hardware stack exceeded
  7270                           ; Regs used in i1_rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7271                           
  7272                           
  7273                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  7274  057A  0877               	movf	i1rdBlkRegCompleteHandler@p,w
  7275  057B  0086               	movwf	6
  7276  057C  0187               	clrf	7
  7277  057D  3F40               	moviw [0]fsr1
  7278  057E  00F0               	movwf	i1i2c_setBuffer@bufferSize
  7279  057F  3F41               	moviw [1]fsr1
  7280  0580  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
  7281  0581  0877               	movf	i1rdBlkRegCompleteHandler@p,w
  7282  0582  3E02               	addlw	2
  7283  0583  0086               	movwf	6
  7284  0584  0801               	movf	1,w
  7285  0585  258C  3180         	fcall	i1_i2c_setBuffer
  7286                           
  7287                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  7288  0587  01F4               	clrf	i1i2c_setDataCompleteCallback@cb
  7289  0588  01F5               	clrf	i1i2c_setDataCompleteCallback@cb+1
  7290  0589  01F6               	clrf	i1i2c_setDataCompleteCallback@p
  7291  058A  2598               	fcall	i1_i2c_setDataCompleteCallback
  7292                           
  7293                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  7294  058B  3402               	retlw	2
  7295  058C                     __end_ofi1_rdBlkRegCompleteHandler:	
  7296  058C                     __ptext110:	
  7297 ;; *************** function i1_i2c_setBuffer *****************
  7298 ;; Defined at:
  7299 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  buffer          1    wreg     PTR void 
  7302 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  7303 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  7304 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7305 ;;  bufferSize      2    0[COMMON] unsigned int 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;  buffer          1    2[COMMON] PTR void 
  7308 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  7309 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  7310 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 1F/1
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;Total ram usage:        3 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		i1_wr1RegCompleteHandler
  7330 ;;		i1_rd1RegCompleteHandler
  7331 ;;		i1_rd2RegCompleteHandler
  7332 ;;		i1_wr2RegCompleteHandler
  7333 ;;		i1_rdBlkRegCompleteHandler
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           
  7338                           ;psect for function i1_i2c_setBuffer
  7339  058C                     i1_i2c_setBuffer:	
  7340                           
  7341                           ;incstack = 0
  7342 ;; hardware stack exceeded
  7343                           ; Regs used in i1_i2c_setBuffer: [wreg]
  7344                           ;i1i2c_setBuffer@buffer stored from wreg
  7345  058C  00F2               	movwf	i1i2c_setBuffer@buffer
  7346                           
  7347                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  7348  058D  0021               	movlb	1	; select bank1
  7349  058E  1D40               	btfss	_i2c_status^(0+128),2
  7350  058F  0008               	return
  7351                           
  7352                           ;i2c_master.c: 187: {
  7353                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  7354  0590  0872               	movf	i1i2c_setBuffer@buffer,w
  7355  0591  00C2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
  7356                           
  7357                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  7358  0592  0871               	movf	i1i2c_setBuffer@bufferSize+1,w
  7359  0593  00C4               	movwf	((_i2c_status+1)^(0+128)+3)
  7360  0594  0870               	movf	i1i2c_setBuffer@bufferSize,w
  7361  0595  00C3               	movwf	(_i2c_status^(0+128)+3)
  7362                           
  7363                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  7364  0596  1140               	bcf	_i2c_status^(0+128),2
  7365  0597  0008               	return
  7366  0598                     __end_ofi1_i2c_setBuffer:	
  7367  0598                     __ptext108:	
  7368 ;; *************** function i1_i2c_setDataCompleteCallback *****************
  7369 ;; Defined at:
  7370 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
  7373 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7374 ;;		 -> Absolute function(1), wr1RegCompleteHandler(1), 
  7375 ;;  p               1    6[COMMON] PTR void 
  7376 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7377 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 1F/1
  7386 ;;		On exit  : 1F/1
  7387 ;;		Unchanged: 1F/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;Total ram usage:        3 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    1
  7396 ;; This function calls:
  7397 ;;		i1_setCallBack
  7398 ;; This function is called by:
  7399 ;;		i1_wr1RegCompleteHandler
  7400 ;;		i1_rd1RegCompleteHandler
  7401 ;;		i1_rd2RegCompleteHandler
  7402 ;;		i1_wr2RegCompleteHandler
  7403 ;;		i1_rdBlkRegCompleteHandler
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           
  7408                           ;psect for function i1_i2c_setDataCompleteCallback
  7409  0598                     i1_i2c_setDataCompleteCallback:	
  7410                           
  7411                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  7412                           
  7413                           ;incstack = 0
  7414 ;; hardware stack exceeded
  7415                           ; Regs used in i1_i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  7416  0598  0875               	movf	i1i2c_setDataCompleteCallback@cb+1,w
  7417  0599  00F1               	movwf	i1setCallBack@cb+1
  7418  059A  0874               	movf	i1i2c_setDataCompleteCallback@cb,w
  7419  059B  00F0               	movwf	i1setCallBack@cb
  7420  059C  0876               	movf	i1i2c_setDataCompleteCallback@p,w
  7421  059D  00F2               	movwf	i1setCallBack@p
  7422  059E  3000               	movlw	0
  7423  059F  25A1               	fcall	i1_setCallBack
  7424  05A0  0008               	return
  7425  05A1                     __end_ofi1_i2c_setDataCompleteCallback:	
  7426  05A1                     __ptext109:	
  7427 ;; *************** function i1_setCallBack *****************
  7428 ;; Defined at:
  7429 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  idx             1    wreg     enum E14613
  7432 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  7433 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7434 ;;		 -> i2c_restartWrite(1), Absolute function(1), wr1RegCompleteHandler(1), 
  7435 ;;  p               1    2[COMMON] PTR void 
  7436 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  7437 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  idx             1    3[COMMON] enum E14613
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1    wreg      void 
  7442 ;; Registers used:
  7443 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7444 ;; Tracked objects:
  7445 ;;		On entry : 1F/1
  7446 ;;		On exit  : 1F/1
  7447 ;;		Unchanged: 1F/0
  7448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7449 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;Total ram usage:        4 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		i1_i2c_setDataCompleteCallback
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function i1_setCallBack
  7464  05A1                     i1_setCallBack:	
  7465                           
  7466                           ;incstack = 0
  7467 ;; hardware stack exceeded
  7468                           ; Regs used in i1_setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
  7469                           ;i1setCallBack@idx stored from wreg
  7470  05A1  00F3               	movwf	i1setCallBack@idx
  7471                           
  7472                           ;i2c_master.c: 455: if(cb)
  7473  05A2  0870               	movf	i1setCallBack@cb,w
  7474  05A3  0471               	iorwf	i1setCallBack@cb+1,w
  7475  05A4  1903               	btfsc	3,2
  7476  05A5  2DB4               	goto	i1l2722
  7477                           
  7478                           ;i2c_master.c: 456: {
  7479                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  7480  05A6  3573               	lslf	i1setCallBack@idx,w
  7481  05A7  3ECB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  7482  05A8  0086               	movwf	6
  7483  05A9  0187               	clrf	7
  7484  05AA  0870               	movf	i1setCallBack@cb,w
  7485  05AB  3FC0               	movwi [0]fsr1
  7486  05AC  0871               	movf	i1setCallBack@cb+1,w
  7487  05AD  3FC1               	movwi [1]fsr1
  7488                           
  7489                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  7490  05AE  0873               	movf	i1setCallBack@idx,w
  7491  05AF  3ED7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  7492  05B0  0086               	movwf	6
  7493  05B1  0872               	movf	i1setCallBack@p,w
  7494  05B2  0081               	movwf	1
  7495                           
  7496                           ;i2c_master.c: 459: }
  7497  05B3  0008               	return
  7498  05B4                     i1l2722:	
  7499                           
  7500                           ;i2c_master.c: 460: else
  7501                           ;i2c_master.c: 461: {
  7502                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  7503  05B4  3573               	lslf	i1setCallBack@idx,w
  7504  05B5  3ECB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
  7505  05B6  0086               	movwf	6
  7506  05B7  3042               	movlw	low _returnStop
  7507  05B8  0187               	clrf	7
  7508  05B9  3FC0               	movwi [0]fsr1
  7509  05BA  300F               	movlw	high _returnStop
  7510  05BB  3FC1               	movwi [1]fsr1
  7511                           
  7512                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  7513  05BC  0873               	movf	i1setCallBack@idx,w
  7514  05BD  3ED7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
  7515  05BE  0086               	movwf	6
  7516  05BF  0181               	clrf	1
  7517  05C0  0008               	return
  7518  05C1                     __end_ofi1_setCallBack:	
  7519  05C1                     __ptext26:	
  7520 ;; *************** function _i2c_masterOperation *****************
  7521 ;; Defined at:
  7522 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  read            1    wreg     unsigned char 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  read            1   10[BANK0 ] unsigned char 
  7527 ;;  ret             1   11[BANK0 ] enum E14433
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      enum E14433
  7530 ;; Registers used:
  7531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 1F/0
  7534 ;;		On exit  : 1F/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7541 ;;Total ram usage:        2 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:   12
  7544 ;; This function calls:
  7545 ;;		_i2c1_driver_start
  7546 ;;		_i2c_poller
  7547 ;;		_mssp1_IRQisEnabled
  7548 ;; This function is called by:
  7549 ;;		_i2c_masterWrite
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function _i2c_masterOperation
  7555  05C1                     _i2c_masterOperation:	
  7556                           
  7557                           ;incstack = 0
  7558 ;; hardware stack exceeded
  7559                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7560                           ;i2c_masterOperation@read stored from wreg
  7561  05C1  00AA               	movwf	i2c_masterOperation@read
  7562                           
  7563                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
  7564  05C2  01AB               	clrf	i2c_masterOperation@ret
  7565  05C3  0AAB               	incf	i2c_masterOperation@ret,f
  7566                           
  7567                           ;i2c_master.c: 196: if(!i2c_status.busy)
  7568  05C4  0021               	movlb	1	; select bank1
  7569  05C5  1C40               	btfss	_i2c_status^(0+128),0
  7570  05C6  2DCA               	goto	l4674
  7571  05C7                     l4688:	
  7572                           
  7573                           ;i2c_master.c: 213: }
  7574                           ;i2c_master.c: 214: return ret;
  7575  05C7  0020               	movlb	0	; select bank0
  7576  05C8  082B               	movf	i2c_masterOperation@ret,w
  7577  05C9  0008               	return
  7578  05CA                     l4674:	
  7579                           
  7580                           ;i2c_master.c: 197: {
  7581                           ;i2c_master.c: 198: i2c_status.busy = 1;
  7582  05CA  1440               	bsf	_i2c_status^(0+128),0
  7583                           
  7584                           ;i2c_master.c: 199: ret = I2C_NOERR;
  7585  05CB  0020               	movlb	0	; select bank0
  7586  05CC  01AB               	clrf	i2c_masterOperation@ret
  7587                           
  7588                           ;i2c_master.c: 201: if(read)
  7589  05CD  082A               	movf	i2c_masterOperation@read,w
  7590  05CE  1903               	btfsc	3,2
  7591  05CF  2DD4               	goto	l4682
  7592                           
  7593                           ;i2c_master.c: 202: {
  7594                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
  7595  05D0  0021               	movlb	1	; select bank1
  7596  05D1  01C9               	clrf	(_i2c_status^(0+128)+9)
  7597  05D2  0AC9               	incf	(_i2c_status^(0+128)+9),f
  7598                           
  7599                           ;i2c_master.c: 204: }
  7600  05D3  2DD7               	goto	i4L__ptext68
  7601  05D4                     l4682:	
  7602                           
  7603                           ;i2c_master.c: 205: else
  7604                           ;i2c_master.c: 206: {
  7605                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
  7606  05D4  3002               	movlw	2
  7607  05D5  0021               	movlb	1	; select bank1
  7608  05D6  00C9               	movwf	(_i2c_status^(0+128)+9)
  7609  05D7                     i4L__ptext68:	
  7610                           ;i2c_master.c: 208: }
  7611                           ;i2c_master.c: 209: i2c1_driver_start();
  7612                           
  7613                           
  7614                           ;psect for function _i2c1_driver_start
  7615  05D7                     i4L_i2c1_driver_start:	
  7616  05D7                     i4Ll2602:	
  7617                           
  7618                           ;i2c1_driver.c: 143: SSP1CON2bits.SEN = 1;
  7619  05D7  0023               	movlb	3	; select bank3
  7620  05D8  1411               	bsf	17,0	;volatile
  7621  05D9                     i4Ll69:	
  7622  05D9                     i5L__ptext27:	
  7623                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
  7624                           
  7625                           
  7626                           ;psect for function _mssp1_IRQisEnabled
  7627  05D9                     i5L_mssp1_IRQisEnabled:	
  7628  05D9                     i5Ll2598:	
  7629                           
  7630                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
  7631  05D9  002E               	movlb	14	; select bank14
  7632  05DA  0819               	movf	25,w	;volatile
  7633  05DB  3901               	andlw	1
  7634  05DC  0020               	movlb	0	; select bank0
  7635  05DD  00A0               	movwf	??_mssp1_IRQisEnabled
  7636  05DE  0C20               	rrf	??_mssp1_IRQisEnabled,w
  7637  05DF                     i5Ll37:	
  7638  05DF  1803               	btfsc	3,0
  7639  05E0  2DC7               	goto	l4688
  7640                           
  7641                           ;psect for function _i2c_poller
  7642                           
  7643                           ;i2c_master.c: 212: i2c_poller();
  7644  05E1                     i6L_i2c_poller:	
  7645  05E1                     i6Ll4664:	
  7646  05E1  2DF5               	ljmp	i6Ll4670
  7647  05E2                     i6Ll4666:	
  7648                           
  7649                           ;i2c_master.c: 233: {
  7650                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
  7651  05E2  3000               	movlw	0
  7652  05E3                     i7L__ptext29:	
  7653                           
  7654                           ;psect for function _mssp1_waitForEvent
  7655  05E3                     i7L_mssp1_waitForEvent:	
  7656  05E3                     i7Ll2582:	
  7657                           
  7658                           ;i2c1_driver.c: 68: if(PIR3bits.SSP1IF == 0)
  7659  05E3  002E               	movlb	14	; select bank14
  7660  05E4  180F               	btfsc	15,0	;volatile
  7661  05E5  2DF3               	ljmp	i6Ll4668
  7662  05E6  2DE8               	ljmp	i7Ll50
  7663  05E7                     i7Lu961:	
  7664  05E7  2DF3               	ljmp	i6Ll4668
  7665  05E8                     i7Lu960:	
  7666  05E8                     i7Ll50:	
  7667                           
  7668                           ;i2c1_driver.c: 71: {
  7669                           ;i2c1_driver.c: 72: if(PIR3bits.SSP1IF) break;
  7670  05E8  002E               	movlb	14	; select bank14
  7671  05E9  1C0F               	btfss	15,0	;volatile
  7672  05EA  2DEE               	ljmp	i7Ll2586
  7673  05EB  2DF3               	ljmp	i6Ll4668
  7674  05EC                     i7Lu971:	
  7675  05EC  2DEE               	ljmp	i7Ll2586
  7676  05ED                     i7Lu970:	
  7677  05ED  2DF3               	ljmp	i6Ll4668
  7678  05EE                     i7Ll2586:	
  7679                           
  7680                           ;i2c1_driver.c: 73: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7681  05EE  3008               	movlw	8
  7682  05EF                     i7Lu3067:	
  7683  05EF  0B89               	decfsz	9,f
  7684  05F0  2DEF               	ljmp	i7Lu3067
  7685  05F1  0000               	nop
  7686  05F2  2DE8               	ljmp	i7Ll50
  7687  05F3                     i7Ll54:	
  7688  05F3                     i6Ll4668:	
  7689                           
  7690                           ;i2c_master.c: 235: i2c_ISR();
  7691  05F3  25FB  3180         	fcall	_i2c_ISR
  7692  05F5                     i6Ll4670:	
  7693  05F5  0021               	movlb	1	; select bank1
  7694  05F6  1840               	btfsc	_i2c_status^(0+128),0
  7695  05F7  2DE2               	ljmp	i6Ll4666
  7696  05F8  2DC7               	ljmp	l4688
  7697  05F9                     i6Lu2791:	
  7698  05F9  2DE2               	ljmp	i6Ll4666
  7699  05FA                     i6Lu2790:	
  7700  05FA                     i6Ll358:	
  7701  05FA  2DC7               	ljmp	l4688
  7702  05FB                     __end_of_i2c_masterOperation:	
  7703  05FB                     __ptext30:	
  7704 ;; *************** function _i2c_ISR *****************
  7705 ;; Defined at:
  7706 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 11/E
  7717 ;;		On exit  : 1F/1
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:   10
  7727 ;; This function calls:
  7728 ;;		_do_I2C_DO_ACK
  7729 ;;		_do_I2C_DO_ADDRESS_NACK
  7730 ;;		_do_I2C_DO_NACK_RESTART
  7731 ;;		_do_I2C_DO_NACK_STOP
  7732 ;;		_do_I2C_IDLE
  7733 ;;		_do_I2C_RCEN
  7734 ;;		_do_I2C_RESET
  7735 ;;		_do_I2C_RX
  7736 ;;		_do_I2C_SEND_ADR_READ
  7737 ;;		_do_I2C_SEND_ADR_WRITE
  7738 ;;		_do_I2C_SEND_RESTART
  7739 ;;		_do_I2C_SEND_RESTART_READ
  7740 ;;		_do_I2C_SEND_RESTART_WRITE
  7741 ;;		_do_I2C_SEND_STOP
  7742 ;;		_do_I2C_TX
  7743 ;;		_do_I2C_TX_EMPTY
  7744 ;;		_i2c1_driver_isNACK
  7745 ;;		_mssp1_clearIRQ
  7746 ;; This function is called by:
  7747 ;;		_i2c_open
  7748 ;;		_i2c_poller
  7749 ;;		_INTERRUPT_InterruptManager
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           
  7754                           ;psect for function _i2c_ISR
  7755  05FB                     _i2c_ISR:	
  7756                           
  7757                           ;Skip over the trampoline to the duplicate function for level 1
  7758  05FB  1C7E               	btfss	126,0
  7759  05FC  2DFE               	goto	l4654
  7760  05FD  2E27               	ljmp	i21L__ptext76
  7761  05FE                     _i2c_ISR$intlevel0:	
  7762  05FE                     l4654:	
  7763                           ;incstack = 0
  7764 ;; hardware stack exceeded
  7765                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7766                           
  7767                           
  7768                           ;i2c_master.c: 421: mssp1_clearIRQ();
  7769  05FE  2617  3180         	fcall	_mssp1_clearIRQ
  7770                           
  7771                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  7772  0600  0021               	movlb	1	; select bank1
  7773  0601  1DC0               	btfss	_i2c_status^(0+128),3
  7774  0602  2E0A               	goto	l4662
  7775  0603  261A  3180         	fcall	_i2c1_driver_isNACK
  7776  0605  1C03               	btfss	3,0
  7777  0606  2E0A               	goto	l4662
  7778                           
  7779                           ;i2c_master.c: 428: {
  7780                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  7781  0607  300F               	movlw	15
  7782  0608  0021               	movlb	1	; select bank1
  7783  0609  00C9               	movwf	(_i2c_status^(0+128)+9)
  7784  060A                     l4662:	
  7785                           
  7786                           ;i2c_master.c: 430: }
  7787                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  7788  060A  0021               	movlb	1	; select bank1
  7789  060B  3549               	lslf	(_i2c_status^(0+128)+9),w
  7790  060C  3EA0               	addlw	(low (_fsmStateTable| 0))& (0+255)
  7791  060D  0086               	movwf	6
  7792  060E  0187               	clrf	7
  7793  060F  3F41               	moviw [1]fsr1
  7794  0610  008A               	movwf	10
  7795  0611  3F40               	moviw [0]fsr1
  7796  0612  000A               	callw
  7797  0613  3180               	pagesel	$
  7798  0614  0021               	movlb	1	; select bank1
  7799  0615  00C9               	movwf	(_i2c_status^(0+128)+9)
  7800  0616  0008               	return
  7801  0617                     __end_of_i2c_ISR:	
  7802  0617                     __ptext71:	
  7803 ;; *************** function _mssp1_clearIRQ *****************
  7804 ;; Defined at:
  7805 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;		None
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      void 
  7812 ;; Registers used:
  7813 ;;		None
  7814 ;; Tracked objects:
  7815 ;;		On entry : 10/3
  7816 ;;		On exit  : 1F/E
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;Total ram usage:        0 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    6
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_i2c_open
  7830 ;;		_i2c_close
  7831 ;;		_i2c_ISR
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           
  7836                           ;psect for function _mssp1_clearIRQ
  7837  0617                     _mssp1_clearIRQ:	
  7838                           
  7839                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _mssp1_clearIRQ: []
  7843  0617  002E               	movlb	14	; select bank14
  7844  0618  100F               	bcf	15,0	;volatile
  7845  0619  0008               	return
  7846  061A                     __end_of_mssp1_clearIRQ:	
  7847  061A                     __ptext48:	
  7848 ;; *************** function _i2c1_driver_isNACK *****************
  7849 ;; Defined at:
  7850 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;		None               void
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 1F/1
  7861 ;;		On exit  : 1F/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;Total ram usage:        1 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    6
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_do_I2C_TX
  7875 ;;		_i2c_ISR
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           
  7880                           ;psect for function _i2c1_driver_isNACK
  7881  061A                     _i2c1_driver_isNACK:	
  7882                           
  7883                           ;i2c1_driver.c: 158: return SSP1CON2bits.ACKSTAT = 1;
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
  7887  061A  0023               	movlb	3	; select bank3
  7888  061B  0811               	movf	17,w	;volatile
  7889  061C  39BF               	andlw	-65
  7890  061D  3840               	iorlw	64
  7891  061E  0091               	movwf	17	;volatile
  7892  061F  0E11               	swapf	17,w	;volatile
  7893  0620  0C89               	rrf	9,f
  7894  0621  0C89               	rrf	9,f
  7895  0622  3901               	andlw	1
  7896  0623  0020               	movlb	0	; select bank0
  7897  0624  00A0               	movwf	??_i2c1_driver_isNACK
  7898  0625  0C20               	rrf	??_i2c1_driver_isNACK,w
  7899  0626  0008               	return
  7900  0627                     __end_of_i2c1_driver_isNACK:	
  7901  0627                     __ptext75:	
  7902 ;; *************** function i1_i2c_ISR *****************
  7903 ;; Defined at:
  7904 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 1F/1
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    4
  7925 ;; This function calls:
  7926 ;;		i1_do_I2C_DO_ACK
  7927 ;;		i1_do_I2C_DO_ADDRESS_NACK
  7928 ;;		i1_do_I2C_DO_NACK_RESTART
  7929 ;;		i1_do_I2C_DO_NACK_STOP
  7930 ;;		i1_do_I2C_IDLE
  7931 ;;		i1_do_I2C_RCEN
  7932 ;;		i1_do_I2C_RESET
  7933 ;;		i1_do_I2C_RX
  7934 ;;		i1_do_I2C_SEND_ADR_READ
  7935 ;;		i1_do_I2C_SEND_ADR_WRITE
  7936 ;;		i1_do_I2C_SEND_RESTART
  7937 ;;		i1_do_I2C_SEND_RESTART_READ
  7938 ;;		i1_do_I2C_SEND_RESTART_WRITE
  7939 ;;		i1_do_I2C_SEND_STOP
  7940 ;;		i1_do_I2C_TX
  7941 ;;		i1_do_I2C_TX_EMPTY
  7942 ;;		i1_i2c1_driver_isNACK
  7943 ;;		i1_mssp1_clearIRQ
  7944 ;; This function is called by:
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           
  7949                           ;psect for function i1_i2c_ISR
  7950  0627                     i1_i2c_ISR:	
  7951  0627                     i21L__ptext76:	
  7952                           ;i2c_master.c: 421: mssp1_clearIRQ();
  7953                           
  7954                           ;incstack = 0
  7955 ;; hardware stack exceeded
  7956                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7957                           
  7958                           
  7959                           ;psect for function i1_mssp1_clearIRQ
  7960  0627                     i21Li1_mssp1_clearIRQ:	
  7961  0627                     i21Li1l3068:	
  7962                           
  7963                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  7964  0627  002E               	movlb	14	; select bank14
  7965  0628  100F               	bcf	15,0	;volatile
  7966  0629                     i21Li1l43:	
  7967                           
  7968                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  7969  0629  0021               	movlb	1	; select bank1
  7970  062A  1DC0               	btfss	_i2c_status^(0+128),3
  7971  062B  2E3C               	goto	i1l4920
  7972                           
  7973                           ;psect for function i1_i2c1_driver_isNACK
  7974  062C                     i22Li1_i2c1_driver_isNACK:	
  7975  062C                     i22Li1l2798:	
  7976                           
  7977                           ;i2c1_driver.c: 158: return SSP1CON2bits.ACKSTAT = 1;
  7978  062C  0023               	movlb	3	; select bank3
  7979  062D  0811               	movf	17,w	;volatile
  7980  062E  39BF               	andlw	-65
  7981  062F  3840               	iorlw	64
  7982  0630  0091               	movwf	17	;volatile
  7983  0631  0E11               	swapf	17,w	;volatile
  7984  0632  0C89               	rrf	9,f
  7985  0633  0C89               	rrf	9,f
  7986  0634  3901               	andlw	1
  7987  0635  00F0               	movwf	??i1_i2c1_driver_isNACK
  7988  0636  0C70               	rrf	??i1_i2c1_driver_isNACK,w
  7989  0637                     i22Li1l78:	
  7990  0637  1C03               	btfss	3,0
  7991  0638  2E3C               	goto	i1l4920
  7992                           
  7993                           ;i2c_master.c: 428: {
  7994                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  7995  0639  300F               	movlw	15
  7996  063A  0021               	movlb	1	; select bank1
  7997  063B  00C9               	movwf	(_i2c_status^(0+128)+9)
  7998  063C                     i1l4920:	
  7999                           
  8000                           ;i2c_master.c: 430: }
  8001                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  8002  063C  0021               	movlb	1	; select bank1
  8003  063D  3549               	lslf	(_i2c_status^(0+128)+9),w
  8004  063E  3EA0               	addlw	(low (_fsmStateTable| 0))& (0+255)
  8005  063F  0086               	movwf	6
  8006  0640  0187               	clrf	7
  8007  0641  3F41               	moviw [1]fsr1
  8008  0642  008A               	movwf	10
  8009  0643  3F40               	moviw [0]fsr1
  8010  0644  000A               	callw
  8011  0645  3180               	pagesel	$
  8012  0646  0021               	movlb	1	; select bank1
  8013  0647  00C9               	movwf	(_i2c_status^(0+128)+9)
  8014  0648  0008               	return
  8015  0649                     __end_ofi1_i2c_ISR:	
  8016  0649                     __ptext24:	
  8017 ;; *************** function _i2c1_driver_open *****************
  8018 ;; Defined at:
  8019 ;;		line 78 in file "mcc_generated_files/i2c1_driver.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;		None
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;		None               void
  8026 ;; Registers used:
  8027 ;;		wreg, status,2
  8028 ;; Tracked objects:
  8029 ;;		On entry : 1F/1
  8030 ;;		On exit  : 1F/3
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;Total ram usage:        0 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    6
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_i2c_open
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           
  8048                           ;psect for function _i2c1_driver_open
  8049  0649                     _i2c1_driver_open:	
  8050                           
  8051                           ;i2c1_driver.c: 80: if(!SSP1CON1bits.SSPEN)
  8052                           
  8053                           ;incstack = 0
  8054                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  8055  0649  0023               	movlb	3	; select bank3
  8056  064A  1A90               	btfsc	16,5	;volatile
  8057  064B  0008               	return
  8058                           
  8059                           ;i2c1_driver.c: 81: {
  8060                           ;i2c1_driver.c: 82: SSP1STAT = 0x00;
  8061  064C  018F               	clrf	15	;volatile
  8062                           
  8063                           ;i2c1_driver.c: 83: SSP1CON1 = 0x28;
  8064  064D  3028               	movlw	40
  8065  064E  0090               	movwf	16	;volatile
  8066                           
  8067                           ;i2c1_driver.c: 84: SSP1CON2 = 0x00;
  8068  064F  0191               	clrf	17	;volatile
  8069                           
  8070                           ;i2c1_driver.c: 85: SSP1ADD = 0x3;
  8071  0650  3003               	movlw	3
  8072  0651  008D               	movwf	13	;volatile
  8073  0652  0008               	return
  8074  0653                     __end_of_i2c1_driver_open:	
  8075  0653                     PL253:	
  8076  0653  0820               	movf	___fttol@f1,w
  8077  0654  00A4               	movwf	??___fttol
  8078  0655  0821               	movf	___fttol@f1+1,w
  8079  0656  00A5               	movwf	??___fttol+1
  8080  0657  0822               	movf	___fttol@f1+2,w
  8081  0658  00A6               	movwf	??___fttol+2
  8082  0659  0008               	return
  8083  065A                     __end_ofPL253:	
  8084  065A                     PL255:	
  8085  065A  082B               	movf	___ftmul@f2,w
  8086  065B  07B2               	addwf	___ftmul@f3_as_product,f
  8087  065C  082C               	movf	___ftmul@f2+1,w
  8088  065D  3DB3               	addwfc	___ftmul@f3_as_product+1,f
  8089  065E  082D               	movf	___ftmul@f2+2,w
  8090  065F  3DB4               	addwfc	___ftmul@f3_as_product+2,f
  8091  0660  0008               	return
  8092  0661                     __end_ofPL255:	
  8093  0661                     PL257:	
  8094  0661  3055               	movlw	85
  8095  0662  003D               	movlb	29	; select bank29
  8096  0663  008F               	movwf	15	;volatile
  8097  0664  30AA               	movlw	170
  8098  0665  008F               	movwf	15	;volatile
  8099  0666  0008               	return
  8100  0667                     __end_ofPL257:	
  8101  0667                     PL259:	
  8102  0667  30FF               	movlw	255
  8103  0668  06AB               	xorwf	___ftadd@f2,f
  8104  0669  06AC               	xorwf	___ftadd@f2+1,f
  8105  066A  06AD               	xorwf	___ftadd@f2+2,f
  8106  066B  0AAB               	incf	___ftadd@f2,f
  8107  066C  0008               	return
  8108  066D                     __end_ofPL259:	
  8109  066D                     PL261:	
  8110  066D  01A8               	clrf	?___ftmul
  8111  066E  01A9               	clrf	?___ftmul+1
  8112  066F  01AA               	clrf	?___ftmul+2
  8113  0670  0008               	return
  8114  0671                     __end_ofPL261:	
  8115  0671                     PL265:	
  8116  0671  01B4               	clrf	?___ftdiv
  8117  0672  01B5               	clrf	?___ftdiv+1
  8118  0673  01B6               	clrf	?___ftdiv+2
  8119  0674  0008               	return
  8120  0675                     __end_ofPL265:	
  8121                           
  8122                           	psect	bssBANK0
  8123  005B                     __pbssBANK0:	
  8124  005B                     _i2c1_driver_i2cISR:	
  8125  005B                     	ds	2
  8126  005D                     _i2c1_driver_busCollisionISR:	
  8127  005D                     	ds	2
  8128                           
  8129                           	psect	bssBANK1
  8130  00C0                     __pbssBANK1:	
  8131  00C0                     _i2c_status:	
  8132  00C0                     	ds	29
  8133                           
  8134                           	psect	dataBANK1
  8135  00A0                     __pdataBANK1:	
  8136  00A0                     _fsmStateTable:	
  8137  00A0                     	ds	32
  8138                           
  8139                           	psect	inittext
  8140  0F52                     init_ram:	
  8141  0F52  00FE               	movwf	126
  8142  0F53                     initloop:	
  8143  0F53  0012               	moviw fsr0++
  8144  0F54  001E               	movwi fsr1++
  8145  0F55  0BFE               	decfsz	126,f
  8146  0F56  2F53               	goto	initloop
  8147  0F57  3400               	retlw	0
  8148                           
  8149                           	psect	clrtext
  8150  0F4C                     clear_ram0:	
  8151                           ;	Called with FSR0 containing the base address, and
  8152                           ;	WREG with the size to clear
  8153                           
  8154  0F4C  0064               	clrwdt	;clear the watchdog before getting into this loop
  8155  0F4D                     clrloop0:	
  8156  0F4D  0180               	clrf	0	;clear RAM location pointed to by FSR
  8157  0F4E  3101               	addfsr 0,1
  8158  0F4F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8159  0F50  2F4D               	goto	clrloop0	;have we reached the end yet?
  8160  0F51  3400               	retlw	0	;all done for this memory range, return
  8161                           
  8162                           	psect	cstackCOMMON
  8163  0070                     __pcstackCOMMON:	
  8164  0070                     ?_mssp1_IRQisEnabled:	
  8165  0070                     ?_i2c1_driver_open:	
  8166                           ; 1 bit 
  8167                           
  8168  0070                     ?_i2c1_driver_isNACK:	
  8169                           ; 1 bit 
  8170                           
  8171  0070                     ?i1_i2c1_driver_isNACK:	
  8172                           ; 1 bit 
  8173                           
  8174  0070                     ?_i2c_open:	
  8175                           ; 1 bit 
  8176                           
  8177  0070                     ?_i2c_masterWrite:	
  8178                           ; 1 bytes @ 0x0
  8179                           
  8180  0070                     ?_i2c_close:	
  8181                           ; 1 bytes @ 0x0
  8182                           
  8183  0070                     ?_i2c_busCollisionISR:	
  8184                           ; 1 bytes @ 0x0
  8185                           
  8186  0070                     ??_i2c_busCollisionISR:	
  8187                           ; 1 bytes @ 0x0
  8188                           
  8189  0070                     ?_i2c_ISR:	
  8190                           ; 1 bytes @ 0x0
  8191                           
  8192  0070                     ?_i2c_poller:	
  8193                           ; 1 bytes @ 0x0
  8194                           
  8195  0070                     ?_PIN_MANAGER_Initialize:	
  8196                           ; 1 bytes @ 0x0
  8197                           
  8198  0070                     ?_OSCILLATOR_Initialize:	
  8199                           ; 1 bytes @ 0x0
  8200                           
  8201  0070                     ?_fan_Initialize:	
  8202                           ; 1 bytes @ 0x0
  8203                           
  8204  0070                     ?_Thermo5_Initialize:	
  8205                           ; 1 bytes @ 0x0
  8206                           
  8207  0070                     ?_mssp1_disableIRQ:	
  8208                           ; 1 bytes @ 0x0
  8209                           
  8210  0070                     ?_mssp1_clearIRQ:	
  8211                           ; 1 bytes @ 0x0
  8212                           
  8213  0070                     ?_mssp1_setIRQ:	
  8214                           ; 1 bytes @ 0x0
  8215                           
  8216  0070                     ?_mssp1_waitForEvent:	
  8217                           ; 1 bytes @ 0x0
  8218                           
  8219  0070                     ?_i2c1_driver_resetBus:	
  8220                           ; 1 bytes @ 0x0
  8221                           
  8222  0070                     ?_i2c1_driver_start:	
  8223                           ; 1 bytes @ 0x0
  8224                           
  8225  0070                     ?_i2c1_driver_restart:	
  8226                           ; 1 bytes @ 0x0
  8227                           
  8228  0070                     ?_i2c1_driver_stop:	
  8229                           ; 1 bytes @ 0x0
  8230                           
  8231  0070                     ?_i2c1_driver_startRX:	
  8232                           ; 1 bytes @ 0x0
  8233                           
  8234  0070                     ?_i2c1_driver_getRXData:	
  8235                           ; 1 bytes @ 0x0
  8236                           
  8237  0070                     ?_i2c1_driver_TXData:	
  8238                           ; 1 bytes @ 0x0
  8239                           
  8240  0070                     ?_i2c1_driver_sendACK:	
  8241                           ; 1 bytes @ 0x0
  8242                           
  8243  0070                     ?_i2c1_driver_sendNACK:	
  8244                           ; 1 bytes @ 0x0
  8245                           
  8246  0070                     ?_i2c1_driver_clearBusCollision:	
  8247                           ; 1 bytes @ 0x0
  8248                           
  8249  0070                     ??_i2c1_driver_clearBusCollision:	
  8250                           ; 1 bytes @ 0x0
  8251                           
  8252  0070                     ?_INTERRUPT_InterruptManager:	
  8253                           ; 1 bytes @ 0x0
  8254                           
  8255  0070                     ?_i2c_masterOperation:	
  8256                           ; 1 bytes @ 0x0
  8257                           
  8258  0070                     ?_do_I2C_RESET:	
  8259                           ; 1 bytes @ 0x0
  8260                           
  8261  0070                     ?_do_I2C_IDLE:	
  8262                           ; 1 bytes @ 0x0
  8263                           
  8264  0070                     ?_do_I2C_SEND_RESTART_READ:	
  8265                           ; 1 bytes @ 0x0
  8266                           
  8267  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  8268                           ; 1 bytes @ 0x0
  8269                           
  8270  0070                     ?_do_I2C_SEND_RESTART:	
  8271                           ; 1 bytes @ 0x0
  8272                           
  8273  0070                     ?_do_I2C_SEND_STOP:	
  8274                           ; 1 bytes @ 0x0
  8275                           
  8276  0070                     ?_do_I2C_SEND_ADR_READ:	
  8277                           ; 1 bytes @ 0x0
  8278                           
  8279  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  8280                           ; 1 bytes @ 0x0
  8281                           
  8282  0070                     ?_do_I2C_RCEN:	
  8283                           ; 1 bytes @ 0x0
  8284                           
  8285  0070                     ?_do_I2C_DO_ACK:	
  8286                           ; 1 bytes @ 0x0
  8287                           
  8288  0070                     ?_do_I2C_DO_NACK_STOP:	
  8289                           ; 1 bytes @ 0x0
  8290                           
  8291  0070                     ?_do_I2C_DO_NACK_RESTART:	
  8292                           ; 1 bytes @ 0x0
  8293                           
  8294  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  8295                           ; 1 bytes @ 0x0
  8296                           
  8297  0070                     ?_do_I2C_TX:	
  8298                           ; 1 bytes @ 0x0
  8299                           
  8300  0070                     ?_do_I2C_RX:	
  8301                           ; 1 bytes @ 0x0
  8302                           
  8303  0070                     ?_do_I2C_TX_EMPTY:	
  8304                           ; 1 bytes @ 0x0
  8305                           
  8306  0070                     ?_SYSTEM_Initialize:	
  8307                           ; 1 bytes @ 0x0
  8308                           
  8309  0070                     ?_Read_Thermo_Register:	
  8310                           ; 1 bytes @ 0x0
  8311                           
  8312  0070                     ?_Thermo5_SetHysteresis:	
  8313                           ; 1 bytes @ 0x0
  8314                           
  8315  0070                     ?_main:	
  8316                           ; 1 bytes @ 0x0
  8317                           
  8318  0070                     ?i1_mssp1_clearIRQ:	
  8319                           ; 1 bytes @ 0x0
  8320                           
  8321  0070                     ??i1_mssp1_clearIRQ:	
  8322                           ; 1 bytes @ 0x0
  8323                           
  8324  0070                     ?i1_mssp1_setIRQ:	
  8325                           ; 1 bytes @ 0x0
  8326                           
  8327  0070                     ??i1_mssp1_setIRQ:	
  8328                           ; 1 bytes @ 0x0
  8329                           
  8330  0070                     ?i1_i2c1_driver_resetBus:	
  8331                           ; 1 bytes @ 0x0
  8332                           
  8333  0070                     ??i1_i2c1_driver_resetBus:	
  8334                           ; 1 bytes @ 0x0
  8335                           
  8336  0070                     ?i1_i2c1_driver_restart:	
  8337                           ; 1 bytes @ 0x0
  8338                           
  8339  0070                     ??i1_i2c1_driver_restart:	
  8340                           ; 1 bytes @ 0x0
  8341                           
  8342  0070                     ?i1_i2c1_driver_stop:	
  8343                           ; 1 bytes @ 0x0
  8344                           
  8345  0070                     ??i1_i2c1_driver_stop:	
  8346                           ; 1 bytes @ 0x0
  8347                           
  8348  0070                     ??i1_i2c1_driver_isNACK:	
  8349                           ; 1 bytes @ 0x0
  8350                           
  8351  0070                     ?i1_i2c1_driver_startRX:	
  8352                           ; 1 bytes @ 0x0
  8353                           
  8354  0070                     ??i1_i2c1_driver_startRX:	
  8355                           ; 1 bytes @ 0x0
  8356                           
  8357  0070                     ?i1_i2c1_driver_getRXData:	
  8358                           ; 1 bytes @ 0x0
  8359                           
  8360  0070                     ??i1_i2c1_driver_getRXData:	
  8361                           ; 1 bytes @ 0x0
  8362                           
  8363  0070                     ?i1_i2c1_driver_TXData:	
  8364                           ; 1 bytes @ 0x0
  8365                           
  8366  0070                     ??i1_i2c1_driver_TXData:	
  8367                           ; 1 bytes @ 0x0
  8368                           
  8369  0070                     ?i1_i2c1_driver_sendACK:	
  8370                           ; 1 bytes @ 0x0
  8371                           
  8372  0070                     ??i1_i2c1_driver_sendACK:	
  8373                           ; 1 bytes @ 0x0
  8374                           
  8375  0070                     ?i1_i2c1_driver_sendNACK:	
  8376                           ; 1 bytes @ 0x0
  8377                           
  8378  0070                     ??i1_i2c1_driver_sendNACK:	
  8379                           ; 1 bytes @ 0x0
  8380                           
  8381  0070                     ?i1_i2c_setBuffer:	
  8382                           ; 1 bytes @ 0x0
  8383                           
  8384  0070                     ?i1_do_I2C_RESET:	
  8385                           ; 1 bytes @ 0x0
  8386                           
  8387  0070                     ??i1_do_I2C_RESET:	
  8388                           ; 1 bytes @ 0x0
  8389                           
  8390  0070                     ?i1_do_I2C_IDLE:	
  8391                           ; 1 bytes @ 0x0
  8392                           
  8393  0070                     ??i1_do_I2C_IDLE:	
  8394                           ; 1 bytes @ 0x0
  8395                           
  8396  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  8397                           ; 1 bytes @ 0x0
  8398                           
  8399  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  8400                           ; 1 bytes @ 0x0
  8401                           
  8402  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  8403                           ; 1 bytes @ 0x0
  8404                           
  8405  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  8406                           ; 1 bytes @ 0x0
  8407                           
  8408  0070                     ?i1_do_I2C_SEND_RESTART:	
  8409                           ; 1 bytes @ 0x0
  8410                           
  8411  0070                     ??i1_do_I2C_SEND_RESTART:	
  8412                           ; 1 bytes @ 0x0
  8413                           
  8414  0070                     ?i1_do_I2C_SEND_STOP:	
  8415                           ; 1 bytes @ 0x0
  8416                           
  8417  0070                     ??i1_do_I2C_SEND_STOP:	
  8418                           ; 1 bytes @ 0x0
  8419                           
  8420  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  8421                           ; 1 bytes @ 0x0
  8422                           
  8423  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  8424                           ; 1 bytes @ 0x0
  8425                           
  8426  0070                     ?i1_do_I2C_RCEN:	
  8427                           ; 1 bytes @ 0x0
  8428                           
  8429  0070                     ??i1_do_I2C_RCEN:	
  8430                           ; 1 bytes @ 0x0
  8431                           
  8432  0070                     ?i1_do_I2C_DO_ACK:	
  8433                           ; 1 bytes @ 0x0
  8434                           
  8435  0070                     ??i1_do_I2C_DO_ACK:	
  8436                           ; 1 bytes @ 0x0
  8437                           
  8438  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  8439                           ; 1 bytes @ 0x0
  8440                           
  8441  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  8442                           ; 1 bytes @ 0x0
  8443                           
  8444  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  8445                           ; 1 bytes @ 0x0
  8446                           
  8447  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  8448                           ; 1 bytes @ 0x0
  8449                           
  8450  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  8451                           ; 1 bytes @ 0x0
  8452                           
  8453  0070                     ?i1_do_I2C_TX:	
  8454                           ; 1 bytes @ 0x0
  8455                           
  8456  0070                     ?i1_do_I2C_RX:	
  8457                           ; 1 bytes @ 0x0
  8458                           
  8459  0070                     ?i1_do_I2C_TX_EMPTY:	
  8460                           ; 1 bytes @ 0x0
  8461                           
  8462  0070                     ?i1_i2c_ISR:	
  8463                           ; 1 bytes @ 0x0
  8464                           
  8465  0070                     ?i1_setCallBack:	
  8466                           ; 1 bytes @ 0x0
  8467                           
  8468  0070                     i1i2c1_driver_TXData@d:	
  8469                           ; 1 bytes @ 0x0
  8470                           
  8471  0070                     i1i2c_setBuffer@bufferSize:	
  8472                           ; 1 bytes @ 0x0
  8473                           
  8474  0070                     i1setCallBack@cb:	
  8475                           ; 2 bytes @ 0x0
  8476                           
  8477                           
  8478                           ; 2 bytes @ 0x0
  8479  0070                     	ds	1
  8480  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  8481  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  8482                           ; 1 bytes @ 0x1
  8483                           
  8484                           
  8485                           ; 1 bytes @ 0x1
  8486  0071                     	ds	1
  8487  0072                     ??i1_i2c_setBuffer:	
  8488  0072                     i1i2c_setBuffer@buffer:	
  8489                           ; 1 bytes @ 0x2
  8490                           
  8491  0072                     i1setCallBack@p:	
  8492                           ; 1 bytes @ 0x2
  8493                           
  8494                           
  8495                           ; 1 bytes @ 0x2
  8496  0072                     	ds	1
  8497  0073                     ??i1_setCallBack:	
  8498  0073                     i1setCallBack@idx:	
  8499                           ; 1 bytes @ 0x3
  8500                           
  8501                           
  8502                           ; 1 bytes @ 0x3
  8503  0073                     	ds	1
  8504  0074                     ?i1_i2c_setDataCompleteCallback:	
  8505  0074                     i1i2c_setDataCompleteCallback@cb:	
  8506                           ; 1 bytes @ 0x4
  8507                           
  8508                           
  8509                           ; 2 bytes @ 0x4
  8510  0074                     	ds	2
  8511  0076                     i1i2c_setDataCompleteCallback@p:	
  8512                           
  8513                           ; 1 bytes @ 0x6
  8514  0076                     	ds	1
  8515  0077                     ?i1_wr1RegCompleteHandler:	
  8516  0077                     ?i1_rd1RegCompleteHandler:	
  8517                           ; 1 bytes @ 0x7
  8518                           
  8519  0077                     ?i1_rd2RegCompleteHandler:	
  8520                           ; 1 bytes @ 0x7
  8521                           
  8522  0077                     ?i1_wr2RegCompleteHandler:	
  8523                           ; 1 bytes @ 0x7
  8524                           
  8525  0077                     ?i1_rdBlkRegCompleteHandler:	
  8526                           ; 1 bytes @ 0x7
  8527                           
  8528  0077                     ??i1_i2c_setDataCompleteCallback:	
  8529                           ; 1 bytes @ 0x7
  8530                           
  8531  0077                     ?i1_returnStop:	
  8532                           ; 1 bytes @ 0x7
  8533                           
  8534  0077                     ?i1_returnReset:	
  8535                           ; 1 bytes @ 0x7
  8536                           
  8537  0077                     ?i1_i2c_restartWrite:	
  8538                           ; 1 bytes @ 0x7
  8539                           
  8540  0077                     i1wr1RegCompleteHandler@p:	
  8541                           ; 1 bytes @ 0x7
  8542                           
  8543  0077                     i1rd1RegCompleteHandler@p:	
  8544                           ; 1 bytes @ 0x7
  8545                           
  8546  0077                     i1rd2RegCompleteHandler@p:	
  8547                           ; 1 bytes @ 0x7
  8548                           
  8549  0077                     i1wr2RegCompleteHandler@p:	
  8550                           ; 1 bytes @ 0x7
  8551                           
  8552  0077                     i1rdBlkRegCompleteHandler@p:	
  8553                           ; 1 bytes @ 0x7
  8554                           
  8555  0077                     i1returnStop@p:	
  8556                           ; 1 bytes @ 0x7
  8557                           
  8558  0077                     i1returnReset@p:	
  8559                           ; 1 bytes @ 0x7
  8560                           
  8561  0077                     i1i2c_restartWrite@p:	
  8562                           ; 1 bytes @ 0x7
  8563                           
  8564                           
  8565                           ; 1 bytes @ 0x7
  8566  0077                     	ds	1
  8567  0078                     ??i1_wr1RegCompleteHandler:	
  8568  0078                     ??i1_rd1RegCompleteHandler:	
  8569                           ; 1 bytes @ 0x8
  8570                           
  8571  0078                     ??i1_rd2RegCompleteHandler:	
  8572                           ; 1 bytes @ 0x8
  8573                           
  8574  0078                     ??i1_wr2RegCompleteHandler:	
  8575                           ; 1 bytes @ 0x8
  8576                           
  8577  0078                     ??i1_rdBlkRegCompleteHandler:	
  8578                           ; 1 bytes @ 0x8
  8579                           
  8580  0078                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  8581                           ; 1 bytes @ 0x8
  8582                           
  8583  0078                     ??i1_do_I2C_TX:	
  8584                           ; 1 bytes @ 0x8
  8585                           
  8586  0078                     ??i1_do_I2C_RX:	
  8587                           ; 1 bytes @ 0x8
  8588                           
  8589  0078                     ??i1_do_I2C_TX_EMPTY:	
  8590                           ; 1 bytes @ 0x8
  8591                           
  8592  0078                     ??i1_returnStop:	
  8593                           ; 1 bytes @ 0x8
  8594                           
  8595  0078                     ??i1_returnReset:	
  8596                           ; 1 bytes @ 0x8
  8597                           
  8598  0078                     ??i1_i2c_restartWrite:	
  8599                           ; 1 bytes @ 0x8
  8600                           
  8601  0078                     i1_do_I2C_TX$870:	
  8602                           ; 1 bytes @ 0x8
  8603                           
  8604                           
  8605                           ; 2 bytes @ 0x8
  8606  0078                     	ds	2
  8607  007A                     ??_INTERRUPT_InterruptManager:	
  8608  007A                     ??i1_i2c_ISR:	
  8609                           ; 1 bytes @ 0xA
  8610                           
  8611                           
  8612                           	psect	cstackBANK0
  8613  0020                     __pcstackBANK0:	
  8614                           ; 1 bytes @ 0xA
  8615                           
  8616  0020                     ?___ftge:	
  8617  0020                     ?_i2c_setBuffer:	
  8618                           ; 1 bit 
  8619                           
  8620  0020                     ??_i2c_close:	
  8621                           ; 1 bytes @ 0x0
  8622                           
  8623  0020                     ?_setCallBack:	
  8624                           ; 1 bytes @ 0x0
  8625                           
  8626  0020                     ??_PIN_MANAGER_Initialize:	
  8627                           ; 1 bytes @ 0x0
  8628                           
  8629  0020                     ??_OSCILLATOR_Initialize:	
  8630                           ; 1 bytes @ 0x0
  8631                           
  8632  0020                     ??_mssp1_IRQisEnabled:	
  8633                           ; 1 bytes @ 0x0
  8634                           
  8635  0020                     ??_mssp1_disableIRQ:	
  8636                           ; 1 bytes @ 0x0
  8637                           
  8638  0020                     ??_mssp1_clearIRQ:	
  8639                           ; 1 bytes @ 0x0
  8640                           
  8641  0020                     ??_mssp1_setIRQ:	
  8642                           ; 1 bytes @ 0x0
  8643                           
  8644  0020                     ??_mssp1_waitForEvent:	
  8645                           ; 1 bytes @ 0x0
  8646                           
  8647  0020                     ??_i2c1_driver_open:	
  8648                           ; 1 bytes @ 0x0
  8649                           
  8650  0020                     ??_i2c1_driver_resetBus:	
  8651                           ; 1 bytes @ 0x0
  8652                           
  8653  0020                     ??_i2c1_driver_start:	
  8654                           ; 1 bytes @ 0x0
  8655                           
  8656  0020                     ??_i2c1_driver_restart:	
  8657                           ; 1 bytes @ 0x0
  8658                           
  8659  0020                     ??_i2c1_driver_stop:	
  8660                           ; 1 bytes @ 0x0
  8661                           
  8662  0020                     ??_i2c1_driver_isNACK:	
  8663                           ; 1 bytes @ 0x0
  8664                           
  8665  0020                     ??_i2c1_driver_startRX:	
  8666                           ; 1 bytes @ 0x0
  8667                           
  8668  0020                     ??_i2c1_driver_getRXData:	
  8669                           ; 1 bytes @ 0x0
  8670                           
  8671  0020                     ??_i2c1_driver_TXData:	
  8672                           ; 1 bytes @ 0x0
  8673                           
  8674  0020                     ??_i2c1_driver_sendACK:	
  8675                           ; 1 bytes @ 0x0
  8676                           
  8677  0020                     ??_i2c1_driver_sendNACK:	
  8678                           ; 1 bytes @ 0x0
  8679                           
  8680  0020                     ?_i2c1_driver_setBusCollisionISR:	
  8681                           ; 1 bytes @ 0x0
  8682                           
  8683  0020                     ?_i2c1_driver_setI2cISR:	
  8684                           ; 1 bytes @ 0x0
  8685                           
  8686  0020                     ??_do_I2C_RESET:	
  8687                           ; 1 bytes @ 0x0
  8688                           
  8689  0020                     ??_do_I2C_IDLE:	
  8690                           ; 1 bytes @ 0x0
  8691                           
  8692  0020                     ??_do_I2C_SEND_RESTART_READ:	
  8693                           ; 1 bytes @ 0x0
  8694                           
  8695  0020                     ??_do_I2C_SEND_RESTART_WRITE:	
  8696                           ; 1 bytes @ 0x0
  8697                           
  8698  0020                     ??_do_I2C_SEND_RESTART:	
  8699                           ; 1 bytes @ 0x0
  8700                           
  8701  0020                     ??_do_I2C_SEND_STOP:	
  8702                           ; 1 bytes @ 0x0
  8703                           
  8704  0020                     ??_do_I2C_RCEN:	
  8705                           ; 1 bytes @ 0x0
  8706                           
  8707  0020                     ??_do_I2C_DO_ACK:	
  8708                           ; 1 bytes @ 0x0
  8709                           
  8710  0020                     ??_do_I2C_DO_NACK_STOP:	
  8711                           ; 1 bytes @ 0x0
  8712                           
  8713  0020                     ??_do_I2C_DO_NACK_RESTART:	
  8714                           ; 1 bytes @ 0x0
  8715                           
  8716  0020                     ?___ftpack:	
  8717                           ; 1 bytes @ 0x0
  8718                           
  8719  0020                     ?___fttol:	
  8720                           ; 3 bytes @ 0x0
  8721                           
  8722  0020                     mssp1_waitForEvent@timeout:	
  8723                           ; 4 bytes @ 0x0
  8724                           
  8725  0020                     i2c1_driver_TXData@d:	
  8726                           ; 1 bytes @ 0x0
  8727                           
  8728  0020                     i2c_close@ret:	
  8729                           ; 1 bytes @ 0x0
  8730                           
  8731  0020                     PIN_MANAGER_Initialize@state:	
  8732                           ; 1 bytes @ 0x0
  8733                           
  8734  0020                     i2c1_driver_setBusCollisionISR@f:	
  8735                           ; 1 bytes @ 0x0
  8736                           
  8737  0020                     i2c1_driver_setI2cISR@f:	
  8738                           ; 2 bytes @ 0x0
  8739                           
  8740  0020                     i2c_setBuffer@bufferSize:	
  8741                           ; 2 bytes @ 0x0
  8742                           
  8743  0020                     setCallBack@cb:	
  8744                           ; 2 bytes @ 0x0
  8745                           
  8746  0020                     ___ftpack@arg:	
  8747                           ; 2 bytes @ 0x0
  8748                           
  8749  0020                     ___ftge@ff1:	
  8750                           ; 3 bytes @ 0x0
  8751                           
  8752  0020                     ___fttol@f1:	
  8753                           ; 3 bytes @ 0x0
  8754                           
  8755                           
  8756                           ; 3 bytes @ 0x0
  8757  0020                     	ds	1
  8758  0021                     ??_do_I2C_SEND_ADR_READ:	
  8759  0021                     ??_do_I2C_SEND_ADR_WRITE:	
  8760                           ; 1 bytes @ 0x1
  8761                           
  8762                           
  8763                           ; 1 bytes @ 0x1
  8764  0021                     	ds	1
  8765  0022                     ??_i2c_setBuffer:	
  8766  0022                     ??_i2c_open:	
  8767                           ; 1 bytes @ 0x2
  8768                           
  8769  0022                     ??_i2c1_driver_setBusCollisionISR:	
  8770                           ; 1 bytes @ 0x2
  8771                           
  8772  0022                     ??_i2c1_driver_setI2cISR:	
  8773                           ; 1 bytes @ 0x2
  8774                           
  8775  0022                     i2c_open@address:	
  8776                           ; 1 bytes @ 0x2
  8777                           
  8778  0022                     i2c_setBuffer@buffer:	
  8779                           ; 1 bytes @ 0x2
  8780                           
  8781  0022                     setCallBack@p:	
  8782                           ; 1 bytes @ 0x2
  8783                           
  8784                           
  8785                           ; 1 bytes @ 0x2
  8786  0022                     	ds	1
  8787  0023                     ??_setCallBack:	
  8788  0023                     i2c_open@ret:	
  8789                           ; 1 bytes @ 0x3
  8790                           
  8791  0023                     setCallBack@idx:	
  8792                           ; 1 bytes @ 0x3
  8793                           
  8794  0023                     ___ftpack@exp:	
  8795                           ; 1 bytes @ 0x3
  8796                           
  8797  0023                     ___ftge@ff2:	
  8798                           ; 1 bytes @ 0x3
  8799                           
  8800                           
  8801                           ; 3 bytes @ 0x3
  8802  0023                     	ds	1
  8803  0024                     ?_i2c_setDataCompleteCallback:	
  8804  0024                     ?_i2c_setAddressNACKCallback:	
  8805                           ; 1 bytes @ 0x4
  8806                           
  8807  0024                     ??___fttol:	
  8808                           ; 1 bytes @ 0x4
  8809                           
  8810  0024                     ___ftpack@sign:	
  8811                           ; 1 bytes @ 0x4
  8812                           
  8813  0024                     i2c_setDataCompleteCallback@cb:	
  8814                           ; 1 bytes @ 0x4
  8815                           
  8816  0024                     i2c_setAddressNACKCallback@cb:	
  8817                           ; 2 bytes @ 0x4
  8818                           
  8819                           
  8820                           ; 2 bytes @ 0x4
  8821  0024                     	ds	1
  8822  0025                     ??___ftpack:	
  8823                           
  8824                           ; 1 bytes @ 0x5
  8825  0025                     	ds	1
  8826  0026                     ??___ftge:	
  8827  0026                     i2c_setDataCompleteCallback@p:	
  8828                           ; 1 bytes @ 0x6
  8829                           
  8830  0026                     i2c_setAddressNACKCallback@p:	
  8831                           ; 1 bytes @ 0x6
  8832                           
  8833                           
  8834                           ; 1 bytes @ 0x6
  8835  0026                     	ds	1
  8836  0027                     ??_i2c_setDataCompleteCallback:	
  8837  0027                     ??_i2c_setAddressNACKCallback:	
  8838                           ; 1 bytes @ 0x7
  8839                           
  8840  0027                     ?_i2c_restartWrite:	
  8841                           ; 1 bytes @ 0x7
  8842                           
  8843  0027                     ?_returnStop:	
  8844                           ; 1 bytes @ 0x7
  8845                           
  8846  0027                     ?_returnReset:	
  8847                           ; 1 bytes @ 0x7
  8848                           
  8849  0027                     ?_wr1RegCompleteHandler:	
  8850                           ; 1 bytes @ 0x7
  8851                           
  8852  0027                     ?_rd1RegCompleteHandler:	
  8853                           ; 1 bytes @ 0x7
  8854                           
  8855  0027                     ?_rd2RegCompleteHandler:	
  8856                           ; 1 bytes @ 0x7
  8857                           
  8858  0027                     ?_wr2RegCompleteHandler:	
  8859                           ; 1 bytes @ 0x7
  8860                           
  8861  0027                     ?_rdBlkRegCompleteHandler:	
  8862                           ; 1 bytes @ 0x7
  8863                           
  8864  0027                     wr1RegCompleteHandler@p:	
  8865                           ; 1 bytes @ 0x7
  8866                           
  8867  0027                     rd1RegCompleteHandler@p:	
  8868                           ; 1 bytes @ 0x7
  8869                           
  8870  0027                     rd2RegCompleteHandler@p:	
  8871                           ; 1 bytes @ 0x7
  8872                           
  8873  0027                     wr2RegCompleteHandler@p:	
  8874                           ; 1 bytes @ 0x7
  8875                           
  8876  0027                     rdBlkRegCompleteHandler@p:	
  8877                           ; 1 bytes @ 0x7
  8878                           
  8879  0027                     returnStop@p:	
  8880                           ; 1 bytes @ 0x7
  8881                           
  8882  0027                     returnReset@p:	
  8883                           ; 1 bytes @ 0x7
  8884                           
  8885  0027                     i2c_restartWrite@p:	
  8886                           ; 1 bytes @ 0x7
  8887                           
  8888  0027                     ___fttol@sign1:	
  8889                           ; 1 bytes @ 0x7
  8890                           
  8891                           
  8892                           ; 1 bytes @ 0x7
  8893  0027                     	ds	1
  8894  0028                     ??_i2c_restartWrite:	
  8895  0028                     ??_returnStop:	
  8896                           ; 1 bytes @ 0x8
  8897                           
  8898  0028                     ??_returnReset:	
  8899                           ; 1 bytes @ 0x8
  8900                           
  8901  0028                     ??_wr1RegCompleteHandler:	
  8902                           ; 1 bytes @ 0x8
  8903                           
  8904  0028                     ??_rd1RegCompleteHandler:	
  8905                           ; 1 bytes @ 0x8
  8906                           
  8907  0028                     ??_rd2RegCompleteHandler:	
  8908                           ; 1 bytes @ 0x8
  8909                           
  8910  0028                     ??_wr2RegCompleteHandler:	
  8911                           ; 1 bytes @ 0x8
  8912                           
  8913  0028                     ??_rdBlkRegCompleteHandler:	
  8914                           ; 1 bytes @ 0x8
  8915                           
  8916  0028                     ??_do_I2C_DO_ADDRESS_NACK:	
  8917                           ; 1 bytes @ 0x8
  8918                           
  8919  0028                     ??_do_I2C_TX:	
  8920                           ; 1 bytes @ 0x8
  8921                           
  8922  0028                     ??_do_I2C_RX:	
  8923                           ; 1 bytes @ 0x8
  8924                           
  8925  0028                     ??_do_I2C_TX_EMPTY:	
  8926                           ; 1 bytes @ 0x8
  8927                           
  8928  0028                     ?___ftadd:	
  8929                           ; 1 bytes @ 0x8
  8930                           
  8931  0028                     ?___ftmul:	
  8932                           ; 3 bytes @ 0x8
  8933                           
  8934  0028                     ?___lwtoft:	
  8935                           ; 3 bytes @ 0x8
  8936                           
  8937  0028                     _do_I2C_TX$870:	
  8938                           ; 3 bytes @ 0x8
  8939                           
  8940  0028                     ___lwtoft@c:	
  8941                           ; 2 bytes @ 0x8
  8942                           
  8943  0028                     ___ftadd@f1:	
  8944                           ; 2 bytes @ 0x8
  8945                           
  8946  0028                     ___ftmul@f1:	
  8947                           ; 3 bytes @ 0x8
  8948                           
  8949  0028                     ___fttol@lval:	
  8950                           ; 3 bytes @ 0x8
  8951                           
  8952                           
  8953                           ; 4 bytes @ 0x8
  8954  0028                     	ds	2
  8955  002A                     ??_i2c_ISR:	
  8956  002A                     ??_i2c_poller:	
  8957                           ; 1 bytes @ 0xA
  8958                           
  8959  002A                     ??_i2c_masterOperation:	
  8960                           ; 1 bytes @ 0xA
  8961                           
  8962  002A                     i2c_masterOperation@read:	
  8963                           ; 1 bytes @ 0xA
  8964                           
  8965                           
  8966                           ; 1 bytes @ 0xA
  8967  002A                     	ds	1
  8968  002B                     ??___lwtoft:	
  8969  002B                     i2c_masterOperation@ret:	
  8970                           ; 1 bytes @ 0xB
  8971                           
  8972  002B                     ___ftadd@f2:	
  8973                           ; 1 bytes @ 0xB
  8974                           
  8975  002B                     ___ftmul@f2:	
  8976                           ; 3 bytes @ 0xB
  8977                           
  8978                           
  8979                           ; 3 bytes @ 0xB
  8980  002B                     	ds	1
  8981  002C                     ??_i2c_masterWrite:	
  8982  002C                     ?_i2c_write1ByteRegister:	
  8983                           ; 1 bytes @ 0xC
  8984                           
  8985  002C                     ?_i2c_read1ByteRegister:	
  8986                           ; 1 bytes @ 0xC
  8987                           
  8988  002C                     i2c_write1ByteRegister@reg:	
  8989                           ; 1 bytes @ 0xC
  8990                           
  8991  002C                     i2c_read1ByteRegister@reg:	
  8992                           ; 1 bytes @ 0xC
  8993                           
  8994  002C                     ___fttol@exp1:	
  8995                           ; 1 bytes @ 0xC
  8996                           
  8997                           
  8998                           ; 1 bytes @ 0xC
  8999  002C                     	ds	1
  9000  002D                     ??_i2c_read1ByteRegister:	
  9001  002D                     i2c_write1ByteRegister@data:	
  9002                           ; 1 bytes @ 0xD
  9003                           
  9004  002D                     i2c_read1ByteRegister@address:	
  9005                           ; 1 bytes @ 0xD
  9006                           
  9007                           
  9008                           ; 1 bytes @ 0xD
  9009  002D                     	ds	1
  9010  002E                     ??_i2c_write1ByteRegister:	
  9011  002E                     ??___ftadd:	
  9012                           ; 1 bytes @ 0xE
  9013                           
  9014  002E                     ??___ftmul:	
  9015                           ; 1 bytes @ 0xE
  9016                           
  9017  002E                     i2c_write1ByteRegister@address:	
  9018                           ; 1 bytes @ 0xE
  9019                           
  9020  002E                     i2c_read1ByteRegister@e:	
  9021                           ; 1 bytes @ 0xE
  9022                           
  9023                           
  9024                           ; 1 bytes @ 0xE
  9025  002E                     	ds	1
  9026  002F                     ?_fan_write:	
  9027  002F                     ?_Write_Thermo_Register:	
  9028                           ; 1 bytes @ 0xF
  9029                           
  9030  002F                     fan_write@data:	
  9031                           ; 1 bytes @ 0xF
  9032                           
  9033  002F                     Write_Thermo_Register@val:	
  9034                           ; 1 bytes @ 0xF
  9035                           
  9036  002F                     i2c_read1ByteRegister@x:	
  9037                           ; 1 bytes @ 0xF
  9038                           
  9039                           
  9040                           ; 2 bytes @ 0xF
  9041  002F                     	ds	1
  9042  0030                     ??_fan_write:	
  9043  0030                     ??_Write_Thermo_Register:	
  9044                           ; 1 bytes @ 0x10
  9045                           
  9046  0030                     fan_write@reg:	
  9047                           ; 1 bytes @ 0x10
  9048                           
  9049  0030                     Write_Thermo_Register@addr:	
  9050                           ; 1 bytes @ 0x10
  9051                           
  9052                           
  9053                           ; 1 bytes @ 0x10
  9054  0030                     	ds	1
  9055  0031                     ??_fan_Initialize:	
  9056  0031                     ?_fan_setSpeed:	
  9057                           ; 1 bytes @ 0x11
  9058                           
  9059  0031                     ??_Thermo5_SetHysteresis:	
  9060                           ; 1 bytes @ 0x11
  9061                           
  9062  0031                     i2c_read1ByteRegister@d2:	
  9063                           ; 1 bytes @ 0x11
  9064                           
  9065  0031                     Thermo5_SetHysteresis@hysteresis:	
  9066                           ; 1 bytes @ 0x11
  9067                           
  9068  0031                     ___ftadd@sign:	
  9069                           ; 1 bytes @ 0x11
  9070                           
  9071  0031                     ___ftmul@exp:	
  9072                           ; 1 bytes @ 0x11
  9073                           
  9074  0031                     fan_setSpeed@speed:	
  9075                           ; 1 bytes @ 0x11
  9076                           
  9077                           
  9078                           ; 2 bytes @ 0x11
  9079  0031                     	ds	1
  9080  0032                     ??_Thermo5_Initialize:	
  9081  0032                     ??_SYSTEM_Initialize:	
  9082                           ; 1 bytes @ 0x12
  9083                           
  9084  0032                     ??_Read_Thermo_Register:	
  9085                           ; 1 bytes @ 0x12
  9086                           
  9087  0032                     Read_Thermo_Register@addr:	
  9088                           ; 1 bytes @ 0x12
  9089                           
  9090  0032                     ___ftadd@exp2:	
  9091                           ; 1 bytes @ 0x12
  9092                           
  9093  0032                     ___ftmul@f3_as_product:	
  9094                           ; 1 bytes @ 0x12
  9095                           
  9096                           
  9097                           ; 3 bytes @ 0x12
  9098  0032                     	ds	1
  9099  0033                     ??_fan_setSpeed:	
  9100  0033                     Read_Thermo_Register@data:	
  9101                           ; 1 bytes @ 0x13
  9102                           
  9103  0033                     ___ftadd@exp1:	
  9104                           ; 1 bytes @ 0x13
  9105                           
  9106                           
  9107                           ; 1 bytes @ 0x13
  9108  0033                     	ds	1
  9109  0034                     ?___ftdiv:	
  9110  0034                     ___ftdiv@f2:	
  9111                           ; 3 bytes @ 0x14
  9112                           
  9113                           
  9114                           ; 3 bytes @ 0x14
  9115  0034                     	ds	1
  9116  0035                     ___ftmul@cntr:	
  9117                           
  9118                           ; 1 bytes @ 0x15
  9119  0035                     	ds	1
  9120  0036                     ___ftmul@sign:	
  9121                           
  9122                           ; 1 bytes @ 0x16
  9123  0036                     	ds	1
  9124  0037                     ?___ftsub:	
  9125  0037                     ___ftdiv@f1:	
  9126                           ; 3 bytes @ 0x17
  9127                           
  9128  0037                     ___ftsub@f2:	
  9129                           ; 3 bytes @ 0x17
  9130                           
  9131                           
  9132                           ; 3 bytes @ 0x17
  9133  0037                     	ds	3
  9134  003A                     ??___ftdiv:	
  9135  003A                     ___ftsub@f1:	
  9136                           ; 1 bytes @ 0x1A
  9137                           
  9138                           
  9139                           ; 3 bytes @ 0x1A
  9140  003A                     	ds	3
  9141  003D                     ??___ftsub:	
  9142  003D                     ___ftdiv@cntr:	
  9143                           ; 1 bytes @ 0x1D
  9144                           
  9145                           
  9146                           ; 1 bytes @ 0x1D
  9147  003D                     	ds	1
  9148  003E                     ___ftdiv@f3:	
  9149                           
  9150                           ; 3 bytes @ 0x1E
  9151  003E                     	ds	3
  9152  0041                     ___ftdiv@exp:	
  9153                           
  9154                           ; 1 bytes @ 0x21
  9155  0041                     	ds	1
  9156  0042                     ___ftdiv@sign:	
  9157                           
  9158                           ; 1 bytes @ 0x22
  9159  0042                     	ds	1
  9160  0043                     ?_Thermo5_ReadTemperature:	
  9161                           
  9162                           ; 3 bytes @ 0x23
  9163  0043                     	ds	3
  9164  0046                     ??_Thermo5_ReadTemperature:	
  9165                           
  9166                           ; 1 bytes @ 0x26
  9167  0046                     	ds	4
  9168  004A                     Thermo5_ReadTemperature@sensor:	
  9169                           
  9170                           ; 1 bytes @ 0x2A
  9171  004A                     	ds	1
  9172  004B                     Thermo5_ReadTemperature@dataH:	
  9173                           
  9174                           ; 2 bytes @ 0x2B
  9175  004B                     	ds	2
  9176  004D                     Thermo5_ReadTemperature@dataL:	
  9177                           
  9178                           ; 2 bytes @ 0x2D
  9179  004D                     	ds	2
  9180  004F                     Thermo5_ReadTemperature@temp:	
  9181                           
  9182                           ; 3 bytes @ 0x2F
  9183  004F                     	ds	3
  9184  0052                     ??_main:	
  9185  0052                     main@factor:	
  9186                           ; 1 bytes @ 0x32
  9187                           
  9188                           
  9189                           ; 3 bytes @ 0x32
  9190  0052                     	ds	3
  9191  0055                     main@setSpeed:	
  9192                           
  9193                           ; 3 bytes @ 0x35
  9194  0055                     	ds	3
  9195  0058                     main@temperature:	
  9196                           
  9197                           ; 3 bytes @ 0x38
  9198  0058                     	ds	3
  9199                           
  9200                           	psect	text22
  9201  0000                     __ptext22:	
  9202 ;; *************** function _i2c1_driver_setI2cISR *****************
  9203 ;; Defined at:
  9204 ;;		line 247 in file "mcc_generated_files/i2c1_driver.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;  f               2    0[BANK0 ] PTR void 
  9207 ;;		 -> i2c_ISR(1), 
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;		None
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      void 
  9212 ;; Registers used:
  9213 ;;		wreg
  9214 ;; Tracked objects:
  9215 ;;		On entry : 1F/0
  9216 ;;		On exit  : 1F/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9219 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;Total ram usage:        2 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:    6
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_i2c_open
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233  0000                     _i2c1_driver_setI2cISR:	
  9234                           ;psect for function _i2c1_driver_setI2cISR
  9235                           
  9236  0000                     __end_of_i2c1_driver_setI2cISR:	
  9237                           ;i2c1_driver.c: 248: i2c1_driver_i2cISR = f;
  9238                           
  9239                           ;incstack = 0
  9240                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
  9241                           
  9242                           
  9243                           	psect	text23
  9244  0000                     __ptext23:	
  9245 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
  9246 ;; Defined at:
  9247 ;;		line 243 in file "mcc_generated_files/i2c1_driver.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;  f               2    0[BANK0 ] PTR void 
  9250 ;;		 -> i2c_busCollisionISR(1), 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg
  9257 ;; Tracked objects:
  9258 ;;		On entry : 1F/0
  9259 ;;		On exit  : 1F/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;Total ram usage:        2 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    6
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_i2c_open
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276  0000                     _i2c1_driver_setBusCollisionISR:	
  9277                           ;psect for function _i2c1_driver_setBusCollisionISR
  9278                           
  9279  0000                     __end_of_i2c1_driver_setBusCollisionISR:	
  9280                           ;i2c1_driver.c: 244: i2c1_driver_busCollisionISR = f;
  9281                           
  9282                           ;incstack = 0
  9283                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
  9284                           
  9285                           
  9286                           	psect	text27
  9287  0000                     __ptext27:	
  9288 ;; *************** function _mssp1_IRQisEnabled *****************
  9289 ;; Defined at:
  9290 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;		None
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;		None
  9295 ;; Return value:  Size  Location     Type
  9296 ;;		None               void
  9297 ;; Registers used:
  9298 ;;		wreg, status,2, status,0
  9299 ;; Tracked objects:
  9300 ;;		On entry : 1F/3
  9301 ;;		On exit  : 1F/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;Total ram usage:        1 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    6
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_i2c_masterOperation
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318  0000                     _mssp1_IRQisEnabled:	
  9319                           ;psect for function _mssp1_IRQisEnabled
  9320                           
  9321  0000                     __end_of_mssp1_IRQisEnabled:	
  9322                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
  9323                           
  9324                           ;incstack = 0
  9325                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
  9326                           
  9327                           
  9328                           	psect	text28
  9329  0000                     __ptext28:	
  9330 ;; *************** function _i2c_poller *****************
  9331 ;; Defined at:
  9332 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;		None
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;		None
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 1F/0
  9343 ;;		On exit  : 1F/1
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:        0 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:   11
  9353 ;; This function calls:
  9354 ;;		_i2c_ISR
  9355 ;;		_mssp1_waitForEvent
  9356 ;; This function is called by:
  9357 ;;		_i2c_masterOperation
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361  0000                     _i2c_poller:	
  9362                           ;psect for function _i2c_poller
  9363                           
  9364  0000                     __end_of_i2c_poller:	
  9365                           ;i2c_master.c: 235: i2c_ISR();
  9366                           
  9367                           ;i2c1_driver.c: 73: _delay((unsigned long)((100)*(1000000/4000000.0)));
  9368                           
  9369                           ;i2c1_driver.c: 71: {
  9370                           ;i2c1_driver.c: 72: if(PIR3bits.SSP1IF) break;
  9371                           
  9372                           ;i2c1_driver.c: 68: if(PIR3bits.SSP1IF == 0)
  9373                           
  9374                           ;psect for function _mssp1_waitForEvent
  9375                           
  9376                           ;i2c_master.c: 233: {
  9377                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
  9378                           
  9379                           ;i2c_master.c: 232: while(i2c_status.busy)
  9380                           
  9381                           ;incstack = 0
  9382 ;; hardware stack exceeded
  9383                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9384                           
  9385                           
  9386                           	psect	text29
  9387  0000                     __ptext29:	
  9388 ;; *************** function _mssp1_waitForEvent *****************
  9389 ;; Defined at:
  9390 ;;		line 63 in file "mcc_generated_files/i2c1_driver.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  timeout         1    wreg     PTR unsigned int 
  9393 ;;		 -> NULL(0), 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;  timeout         1    0[BANK0 ] PTR unsigned int 
  9396 ;;		 -> NULL(0), 
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg
  9401 ;; Tracked objects:
  9402 ;;		On entry : 1E/1
  9403 ;;		On exit  : 1F/E
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;Total ram usage:        1 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    6
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_i2c_poller
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420  0000                     _mssp1_waitForEvent:	
  9421                           ;psect for function _mssp1_waitForEvent
  9422                           
  9423  0000                     __end_of_mssp1_waitForEvent:	
  9424                           ;i2c1_driver.c: 73: _delay((unsigned long)((100)*(1000000/4000000.0)));
  9425                           
  9426                           ;i2c1_driver.c: 71: {
  9427                           ;i2c1_driver.c: 72: if(PIR3bits.SSP1IF) break;
  9428                           
  9429                           ;i2c1_driver.c: 69: {
  9430                           ;i2c1_driver.c: 70: while(1)
  9431                           
  9432                           ;i2c1_driver.c: 68: if(PIR3bits.SSP1IF == 0)
  9433                           
  9434                           ;incstack = 0
  9435                           ; Regs used in _mssp1_waitForEvent: [wreg]
  9436                           
  9437                           
  9438                           	psect	text33
  9439  0675                     __ptext33:	
  9440 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  9441 ;; Defined at:
  9442 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;		None
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;		None
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      enum E14595
  9449 ;; Registers used:
  9450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9451 ;; Tracked objects:
  9452 ;;		On entry : 1F/1
  9453 ;;		On exit  : 1F/3
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;Total ram usage:        0 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    9
  9463 ;; This function calls:
  9464 ;;		Absolute function
  9465 ;;		_do_I2C_SEND_RESTART
  9466 ;;		_do_I2C_SEND_STOP
  9467 ;;		_i2c_restartWrite
  9468 ;;		_rd1RegCompleteHandler
  9469 ;;		_rd2RegCompleteHandler
  9470 ;;		_rdBlkRegCompleteHandler
  9471 ;;		_returnReset
  9472 ;;		_returnStop
  9473 ;;		_wr1RegCompleteHandler
  9474 ;;		_wr2RegCompleteHandler
  9475 ;; This function is called by:
  9476 ;;		_i2c_ISR
  9477 ;;		i1_i2c_ISR
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           
  9482                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  9483  0675                     _do_I2C_DO_ADDRESS_NACK:	
  9484                           
  9485                           ;Skip over the trampoline to the duplicate function for level 1
  9486  0675  1C7E               	btfss	126,0
  9487  0676  2E78               	goto	l4562
  9488  0677  2E91               	ljmp	i1l4792
  9489  0678                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
  9490  0678                     l4562:	
  9491                           ;incstack = 0
  9492 ;; hardware stack exceeded
  9493                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9494                           
  9495  0678  3002               	movlw	2
  9496                           
  9497                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  9498  0679  11C0               	bcf	_i2c_status^(0+128),3
  9499                           
  9500                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  9501  067A  00CA               	movwf	(_i2c_status^(0+128)+10)
  9502                           
  9503                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  9504  067B  0859               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
  9505  067C  0020               	movlb	0	; select bank0
  9506  067D  00A7               	movwf	returnStop@p
  9507  067E  300F               	movlw	15
  9508  067F  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
  9509  0680  0086               	movwf	6
  9510  0681  0187               	clrf	7
  9511  0682  3F41               	moviw [1]fsr1
  9512  0683  008A               	movwf	10
  9513  0684  3F40               	moviw [0]fsr1
  9514  0685  000A               	callw
  9515  0686  3186               	pagesel	$
  9516                           
  9517                           ; Switch size 1, requested type "space"
  9518                           ; Number of cases is 2, Range of values is 2 to 3
  9519                           ; switch strategies available:
  9520                           ; Name         Instructions Cycles
  9521                           ; simple_byte            7     4 (average)
  9522                           ; direct_byte           13     9 (fixed)
  9523                           ; jumptable            263     9 (fixed)
  9524                           ;	Chosen strategy is simple_byte
  9525  0687  3A02               	xorlw	2	; case 2
  9526  0688  1903               	skipnz
  9527  0689  2E8F               	goto	l4566
  9528  068A  3A01               	xorlw	1	; case 3
  9529  068B  1903               	skipnz
  9530  068C  2E8F               	goto	l4566
  9531  068D  2E90               	goto	l4570
  9532  068E  0008               	return
  9533  068F                     l4566:	
  9534                           
  9535                           ;i2c_master.c: 326: case i2c_restart_write:
  9536                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  9537  068F  2FAC               	ljmp	_do_I2C_SEND_RESTART
  9538  0690                     l4570:	
  9539                           
  9540                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  9541  0690  2FA1               	ljmp	_do_I2C_SEND_STOP
  9542  0691                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  9543  0691                     __ptext79:	
  9544 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
  9545 ;; Defined at:
  9546 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;		None
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;		None
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  1    wreg      enum E14595
  9553 ;; Registers used:
  9554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 1F/3
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;Total ram usage:        0 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    3
  9567 ;; This function calls:
  9568 ;;		Absolute function
  9569 ;;		i1_do_I2C_SEND_RESTART
  9570 ;;		i1_do_I2C_SEND_STOP
  9571 ;;		i1_i2c_restartWrite
  9572 ;;		i1_rd1RegCompleteHandler
  9573 ;;		i1_rd2RegCompleteHandler
  9574 ;;		i1_rdBlkRegCompleteHandler
  9575 ;;		i1_returnReset
  9576 ;;		i1_returnStop
  9577 ;;		i1_wr1RegCompleteHandler
  9578 ;;		i1_wr2RegCompleteHandler
  9579 ;; This function is called by:
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           
  9584                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
  9585  0691                     i1_do_I2C_DO_ADDRESS_NACK:	
  9586  0691                     i1l4792:	
  9587                           ;incstack = 0
  9588 ;; hardware stack exceeded
  9589                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9590                           
  9591                           
  9592                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  9593  0691  0021               	movlb	1	; select bank1
  9594  0692  3002               	movlw	2
  9595  0693  11C0               	bcf	_i2c_status^(0+128),3
  9596                           
  9597                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  9598  0694  00CA               	movwf	(_i2c_status^(0+128)+10)
  9599                           
  9600                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  9601  0695  2E9A               	goto	i1l4806
  9602  0696                     i1l4796:	
  9603                           
  9604                           ;i2c_master.c: 326: case i2c_restart_write:
  9605                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  9606  0696  27A9               	fcall	i1_do_I2C_SEND_RESTART
  9607  0697  0008               	return
  9608  0698                     i1l4800:	
  9609                           
  9610                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  9611  0698  2796               	fcall	i1_do_I2C_SEND_STOP
  9612  0699  0008               	return
  9613  069A                     i1l4806:	
  9614  069A  0859               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
  9615  069B  00F7               	movwf	i1returnStop@p
  9616  069C  300F               	movlw	15
  9617  069D  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
  9618  069E  0086               	movwf	6
  9619  069F  0187               	clrf	7
  9620  06A0  3F41               	moviw [1]fsr1
  9621  06A1  008A               	movwf	10
  9622  06A2  3F40               	moviw [0]fsr1
  9623  06A3  000A               	callw
  9624  06A4  3186               	pagesel	$
  9625                           
  9626                           ; Switch size 1, requested type "space"
  9627                           ; Number of cases is 2, Range of values is 2 to 3
  9628                           ; switch strategies available:
  9629                           ; Name         Instructions Cycles
  9630                           ; simple_byte            7     4 (average)
  9631                           ; direct_byte           13     9 (fixed)
  9632                           ; jumptable            263     9 (fixed)
  9633                           ;	Chosen strategy is simple_byte
  9634  06A5  3A02               	xorlw	2	; case 2
  9635  06A6  1903               	skipnz
  9636  06A7  2E96               	goto	i1l4796
  9637  06A8  3A01               	xorlw	1	; case 3
  9638  06A9  1903               	skipnz
  9639  06AA  2E96               	goto	i1l4796
  9640  06AB  2E98               	goto	i1l4800
  9641  06AC  0008               	return
  9642  06AD                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
  9643  06AD                     __ptext46:	
  9644 ;; *************** function _do_I2C_TX_EMPTY *****************
  9645 ;; Defined at:
  9646 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;		None
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      enum E14595
  9653 ;; Registers used:
  9654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : 1F/1
  9657 ;;		On exit  : 12/2
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;Total ram usage:        0 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    9
  9667 ;; This function calls:
  9668 ;;		Absolute function
  9669 ;;		_do_I2C_SEND_RESTART
  9670 ;;		_do_I2C_SEND_STOP
  9671 ;;		_i2c_restartWrite
  9672 ;;		_mssp1_setIRQ
  9673 ;;		_rd1RegCompleteHandler
  9674 ;;		_rd2RegCompleteHandler
  9675 ;;		_rdBlkRegCompleteHandler
  9676 ;;		_returnReset
  9677 ;;		_returnStop
  9678 ;;		_wr1RegCompleteHandler
  9679 ;;		_wr2RegCompleteHandler
  9680 ;; This function is called by:
  9681 ;;		_i2c_ISR
  9682 ;;		i1_i2c_ISR
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _do_I2C_TX_EMPTY
  9688  06AD                     _do_I2C_TX_EMPTY:	
  9689                           
  9690                           ;Skip over the trampoline to the duplicate function for level 1
  9691  06AD  1C7E               	btfss	126,0
  9692  06AE  2EB0               	goto	l4634
  9693  06AF  2ED0               	ljmp	i1l4864
  9694  06B0                     _do_I2C_TX_EMPTY$intlevel0:	
  9695  06B0                     l4634:	
  9696                           ;incstack = 0
  9697 ;; hardware stack exceeded
  9698                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9699                           
  9700                           
  9701                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  9702  06B0  1540               	bsf	_i2c_status^(0+128),2
  9703                           
  9704                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  9705  06B1  0857               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
  9706  06B2  0020               	movlb	0	; select bank0
  9707  06B3  00A7               	movwf	returnStop@p
  9708  06B4  300B               	movlw	11
  9709  06B5  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
  9710  06B6  0086               	movwf	6
  9711  06B7  0187               	clrf	7
  9712  06B8  3F41               	moviw [1]fsr1
  9713  06B9  008A               	movwf	10
  9714  06BA  3F40               	moviw [0]fsr1
  9715  06BB  000A               	callw
  9716  06BC  3186               	pagesel	$
  9717                           
  9718                           ; Switch size 1, requested type "space"
  9719                           ; Number of cases is 4, Range of values is 1 to 4
  9720                           ; switch strategies available:
  9721                           ; Name         Instructions Cycles
  9722                           ; simple_byte           13     7 (average)
  9723                           ; direct_byte           17     9 (fixed)
  9724                           ; jumptable            263     9 (fixed)
  9725                           ;	Chosen strategy is simple_byte
  9726  06BD  3A01               	xorlw	1	; case 1
  9727  06BE  1903               	skipnz
  9728  06BF  2ECF               	goto	l4646
  9729  06C0  3A03               	xorlw	3	; case 2
  9730  06C1  1903               	skipnz
  9731  06C2  2ECB               	goto	l4636
  9732  06C3  3A01               	xorlw	1	; case 3
  9733  06C4  1903               	skipnz
  9734  06C5  2ECB               	goto	l4636
  9735  06C6  3A07               	xorlw	7	; case 4
  9736  06C7  1903               	skipnz
  9737  06C8  2ECC               	goto	l4640
  9738  06C9  2ECF               	goto	l4646
  9739  06CA  0008               	return
  9740  06CB                     l4636:	
  9741                           
  9742                           ;i2c_master.c: 388: case i2c_restart_write:
  9743                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  9744  06CB  2FAC               	ljmp	_do_I2C_SEND_RESTART
  9745  06CC                     l4640:	
  9746  06CC                     i18L__ptext47:	
  9747                           ;i2c_master.c: 391: mssp1_setIRQ();
  9748                           
  9749                           
  9750                           ;psect for function _mssp1_setIRQ
  9751  06CC                     i18L_mssp1_setIRQ:	
  9752  06CC                     i18Ll2338:	
  9753                           
  9754                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  9755  06CC  002E               	movlb	14	; select bank14
  9756  06CD  140F               	bsf	15,0	;volatile
  9757  06CE                     i18Ll46:	
  9758                           
  9759                           ;i2c_master.c: 392: return I2C_TX;
  9760  06CE  3403               	retlw	3
  9761  06CF                     l4646:	
  9762                           
  9763                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  9764  06CF  2FA1               	ljmp	_do_I2C_SEND_STOP
  9765  06D0                     __end_of_do_I2C_TX_EMPTY:	
  9766  06D0                     __ptext92:	
  9767 ;; *************** function i1_do_I2C_TX_EMPTY *****************
  9768 ;; Defined at:
  9769 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;		None
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;		None
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  1    wreg      enum E14595
  9776 ;; Registers used:
  9777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 12/2
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;Total ram usage:        0 bytes
  9788 ;; Hardware stack levels used:    1
  9789 ;; Hardware stack levels required when called:    3
  9790 ;; This function calls:
  9791 ;;		Absolute function
  9792 ;;		i1_do_I2C_SEND_RESTART
  9793 ;;		i1_do_I2C_SEND_STOP
  9794 ;;		i1_i2c_restartWrite
  9795 ;;		i1_mssp1_setIRQ
  9796 ;;		i1_rd1RegCompleteHandler
  9797 ;;		i1_rd2RegCompleteHandler
  9798 ;;		i1_rdBlkRegCompleteHandler
  9799 ;;		i1_returnReset
  9800 ;;		i1_returnStop
  9801 ;;		i1_wr1RegCompleteHandler
  9802 ;;		i1_wr2RegCompleteHandler
  9803 ;; This function is called by:
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           
  9808                           ;psect for function i1_do_I2C_TX_EMPTY
  9809  06D0                     i1_do_I2C_TX_EMPTY:	
  9810  06D0                     i1l4864:	
  9811                           ;incstack = 0
  9812 ;; hardware stack exceeded
  9813                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9814                           
  9815                           
  9816                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  9817  06D0  0021               	movlb	1	; select bank1
  9818  06D1  1540               	bsf	_i2c_status^(0+128),2
  9819                           
  9820                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  9821  06D2  2EDA               	goto	i1l4882
  9822  06D3                     i1l4866:	
  9823                           
  9824                           ;i2c_master.c: 388: case i2c_restart_write:
  9825                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  9826  06D3  27A9               	fcall	i1_do_I2C_SEND_RESTART
  9827  06D4  0008               	return
  9828  06D5                     i1l4870:	
  9829  06D5                     i38L__ptext93:	
  9830                           ;i2c_master.c: 391: mssp1_setIRQ();
  9831                           
  9832                           
  9833                           ;psect for function i1_mssp1_setIRQ
  9834  06D5                     i38Li1_mssp1_setIRQ:	
  9835  06D5                     i38Li1l2796:	
  9836                           
  9837                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  9838  06D5  002E               	movlb	14	; select bank14
  9839  06D6  140F               	bsf	15,0	;volatile
  9840  06D7                     i38Li1l46:	
  9841                           
  9842                           ;i2c_master.c: 392: return I2C_TX;
  9843  06D7  3403               	retlw	3
  9844  06D8                     i1l4876:	
  9845                           
  9846                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  9847  06D8  2796               	fcall	i1_do_I2C_SEND_STOP
  9848  06D9  0008               	return
  9849  06DA                     i1l4882:	
  9850  06DA  0857               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
  9851  06DB  00F7               	movwf	i1returnStop@p
  9852  06DC  300B               	movlw	11
  9853  06DD  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
  9854  06DE  0086               	movwf	6
  9855  06DF  0187               	clrf	7
  9856  06E0  3F41               	moviw [1]fsr1
  9857  06E1  008A               	movwf	10
  9858  06E2  3F40               	moviw [0]fsr1
  9859  06E3  000A               	callw
  9860  06E4  3186               	pagesel	$
  9861                           
  9862                           ; Switch size 1, requested type "space"
  9863                           ; Number of cases is 4, Range of values is 1 to 4
  9864                           ; switch strategies available:
  9865                           ; Name         Instructions Cycles
  9866                           ; simple_byte           13     7 (average)
  9867                           ; direct_byte           17     9 (fixed)
  9868                           ; jumptable            263     9 (fixed)
  9869                           ;	Chosen strategy is simple_byte
  9870  06E5  3A01               	xorlw	1	; case 1
  9871  06E6  1903               	skipnz
  9872  06E7  2ED8               	goto	i1l4876
  9873  06E8  3A03               	xorlw	3	; case 2
  9874  06E9  1903               	skipnz
  9875  06EA  2ED3               	goto	i1l4866
  9876  06EB  3A01               	xorlw	1	; case 3
  9877  06EC  1903               	skipnz
  9878  06ED  2ED3               	goto	i1l4866
  9879  06EE  3A07               	xorlw	7	; case 4
  9880  06EF  1903               	skipnz
  9881  06F0  2ED5               	goto	i1l4870
  9882  06F1  2ED8               	goto	i1l4876
  9883  06F2  0008               	return
  9884  06F3                     __end_ofi1_do_I2C_TX_EMPTY:	
  9885  06F3                     __ptext42:	
  9886 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  9887 ;; Defined at:
  9888 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;		None
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;		None
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1    wreg      enum E14595
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, status,0, pclath, cstack
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/1
  9899 ;;		On exit  : 1F/3
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;Total ram usage:        0 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; Hardware stack levels required when called:    7
  9909 ;; This function calls:
  9910 ;;		_i2c1_driver_restart
  9911 ;; This function is called by:
  9912 ;;		_do_I2C_TX
  9913 ;;		_i2c_ISR
  9914 ;;		i1_i2c_ISR
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           
  9919                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  9920  06F3                     _do_I2C_SEND_RESTART_WRITE:	
  9921                           
  9922                           ;Skip over the trampoline to the duplicate function for level 1
  9923  06F3  1C7E               	btfss	126,0
  9924  06F4  2EF6               	goto	l2398
  9925  06F5  2F93               	ljmp	i35L__ptext112
  9926  06F6                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
  9927  06F6                     l2398:	
  9928                           ;incstack = 0
  9929                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9930                           
  9931                           
  9932                           ;i2c_master.c: 262: i2c1_driver_restart();
  9933  06F6  279E               	fcall	_i2c1_driver_restart
  9934                           
  9935                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  9936  06F7  3402               	retlw	2
  9937  06F8                     __end_of_do_I2C_SEND_RESTART_WRITE:	
  9938  06F8                     __ptext32:	
  9939 ;; *************** function _do_I2C_TX *****************
  9940 ;; Defined at:
  9941 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;		None
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;		None
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1    wreg      enum E14595
  9948 ;; Registers used:
  9949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9950 ;; Tracked objects:
  9951 ;;		On entry : 1F/1
  9952 ;;		On exit  : 1C/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;Total ram usage:        2 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    9
  9962 ;; This function calls:
  9963 ;;		Absolute function
  9964 ;;		_do_I2C_SEND_RESTART_READ
  9965 ;;		_do_I2C_SEND_RESTART_WRITE
  9966 ;;		_do_I2C_SEND_STOP
  9967 ;;		_i2c1_driver_TXData
  9968 ;;		_i2c1_driver_isNACK
  9969 ;;		_i2c_restartWrite
  9970 ;;		_rd1RegCompleteHandler
  9971 ;;		_rd2RegCompleteHandler
  9972 ;;		_rdBlkRegCompleteHandler
  9973 ;;		_returnReset
  9974 ;;		_returnStop
  9975 ;;		_wr1RegCompleteHandler
  9976 ;;		_wr2RegCompleteHandler
  9977 ;; This function is called by:
  9978 ;;		_i2c_ISR
  9979 ;;		i1_i2c_ISR
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           
  9984                           ;psect for function _do_I2C_TX
  9985  06F8                     _do_I2C_TX:	
  9986                           
  9987                           ;Skip over the trampoline to the duplicate function for level 1
  9988  06F8  1C7E               	btfss	126,0
  9989  06F9  2EFB               	goto	i11L__ptext48
  9990  06FA  2F46               	ljmp	i25L__ptext94
  9991  06FB                     _do_I2C_TX$intlevel0:	
  9992  06FB                     i11L__ptext48:	
  9993                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  9994                           
  9995                           ;incstack = 0
  9996 ;; hardware stack exceeded
  9997                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9998                           
  9999                           
 10000                           ;psect for function _i2c1_driver_isNACK
 10001  06FB                     i11L_i2c1_driver_isNACK:	
 10002  06FB                     i11Ll2340:	
 10003                           
 10004                           ;i2c1_driver.c: 158: return SSP1CON2bits.ACKSTAT = 1;
 10005  06FB  0023               	movlb	3	; select bank3
 10006  06FC  0811               	movf	17,w	;volatile
 10007  06FD  39BF               	andlw	-65
 10008  06FE  3840               	iorlw	64
 10009  06FF  0091               	movwf	17	;volatile
 10010  0700  0E11               	swapf	17,w	;volatile
 10011  0701  0C89               	rrf	9,f
 10012  0702  0C89               	rrf	9,f
 10013  0703  3901               	andlw	1
 10014  0704  0020               	movlb	0	; select bank0
 10015  0705  00A0               	movwf	??_i2c1_driver_isNACK
 10016  0706  0C20               	rrf	??_i2c1_driver_isNACK,w
 10017  0707                     i11Ll78:	
 10018  0707  1803               	btfsc	3,0
 10019  0708  2F0D               	goto	l4596
 10020  0709  2F27               	goto	l405
 10021  070A                     l4582:	
 10022                           
 10023                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 10024  070A  2F99               	ljmp	_do_I2C_SEND_RESTART_READ
 10025  070B                     l4586:	
 10026                           
 10027                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 10028  070B  2EF3               	ljmp	_do_I2C_SEND_RESTART_WRITE
 10029  070C                     l4590:	
 10030                           
 10031                           ;i2c_master.c: 345: case i2c_stop:
 10032                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 10033  070C  2FA1               	ljmp	_do_I2C_SEND_STOP
 10034  070D                     l4596:	
 10035  070D  0021               	movlb	1	; select bank1
 10036  070E  085A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 10037  070F  0020               	movlb	0	; select bank0
 10038  0710  00A7               	movwf	returnStop@p
 10039  0711  3011               	movlw	17
 10040  0712  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
 10041  0713  0086               	movwf	6
 10042  0714  0187               	clrf	7
 10043  0715  3F41               	moviw [1]fsr1
 10044  0716  008A               	movwf	10
 10045  0717  3F40               	moviw [0]fsr1
 10046  0718  000A               	callw
 10047  0719  3186               	pagesel	$
 10048                           
 10049                           ; Switch size 1, requested type "space"
 10050                           ; Number of cases is 4, Range of values is 1 to 4
 10051                           ; switch strategies available:
 10052                           ; Name         Instructions Cycles
 10053                           ; simple_byte           13     7 (average)
 10054                           ; direct_byte           17     9 (fixed)
 10055                           ; jumptable            263     9 (fixed)
 10056                           ;	Chosen strategy is simple_byte
 10057  071A  3A01               	xorlw	1	; case 1
 10058  071B  1903               	skipnz
 10059  071C  2F0C               	goto	l4590
 10060  071D  3A03               	xorlw	3	; case 2
 10061  071E  1903               	skipnz
 10062  071F  2F0A               	goto	l4582
 10063  0720  3A01               	xorlw	1	; case 3
 10064  0721  1903               	skipnz
 10065  0722  2F0B               	goto	l4586
 10066  0723  3A07               	xorlw	7	; case 4
 10067  0724  1903               	skipnz
 10068  0725  2F0C               	goto	l4590
 10069  0726  2F0C               	goto	l4590
 10070  0727                     l405:	
 10071                           
 10072                           ;i2c_master.c: 349: else
 10073                           ;i2c_master.c: 350: {
 10074                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 10075  0727  0021               	movlb	1	; select bank1
 10076  0728  30C2               	movlw	((low (_i2c_status| 0))& (0+255)+2)
 10077  0729  11C0               	bcf	_i2c_status^(0+128),3
 10078                           
 10079                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 10080  072A  0086               	movwf	6
 10081  072B  0187               	clrf	7
 10082  072C  3F40               	moviw [0]fsr1
 10083  072D  0084               	movwf	4
 10084  072E  0185               	clrf	5
 10085  072F  0A81               	incf	1,f
 10086  0730  0800               	movf	0,w
 10087  0731                     i12L__ptext49:	
 10088                           
 10089                           ;psect for function _i2c1_driver_TXData
 10090  0731                     i12L_i2c1_driver_TXData:	
 10091                           
 10092                           ;incstack = 0
 10093                           ; Regs used in _i2c1_driver_TXData: [wreg]
 10094                           ;i2c1_driver_TXData@d stored from wreg
 10095  0731  0020               	movlb	0	; select bank0
 10096  0732  00A0               	movwf	i2c1_driver_TXData@d
 10097  0733                     i12Ll2350:	
 10098                           
 10099                           ;i2c1_driver.c: 183: SSP1BUF = d;
 10100  0733  0820               	movf	i2c1_driver_TXData@d,w
 10101  0734  0023               	movlb	3	; select bank3
 10102  0735  008C               	movwf	12	;volatile
 10103  0736                     i12Ll93:	
 10104                           
 10105                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 10106  0736  3001               	movlw	1
 10107  0737  0021               	movlb	1	; select bank1
 10108  0738  02C3               	subwf	(_i2c_status^(0+128)+3),f
 10109  0739  3000               	movlw	0
 10110  073A  3BC4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 10111  073B  0843               	movf	(_i2c_status^(0+128)+3),w
 10112  073C  0444               	iorwf	((_i2c_status+1)^(0+128)+3),w
 10113  073D  1D03               	btfss	3,2
 10114  073E  2F41               	goto	l4604
 10115  073F  3006               	movlw	6
 10116  0740  2F42               	goto	L9
 10117  0741                     l4604:	
 10118  0741  3003               	movlw	3
 10119  0742                     L9:	
 10120  0742  0020               	movlb	0	; select bank0
 10121  0743  00A8               	movwf	_do_I2C_TX$870
 10122  0744  01A9               	clrf	_do_I2C_TX$870+1
 10123  0745  0008               	return
 10124  0746                     __end_of_do_I2C_TX:	
 10125  0746                     __ptext78:	
 10126 ;; *************** function i1_do_I2C_TX *****************
 10127 ;; Defined at:
 10128 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;		None
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;		None
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  1    wreg      enum E14595
 10135 ;; Registers used:
 10136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 1D/1
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;Total ram usage:        2 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    3
 10149 ;; This function calls:
 10150 ;;		Absolute function
 10151 ;;		i1_do_I2C_SEND_RESTART_READ
 10152 ;;		i1_do_I2C_SEND_RESTART_WRITE
 10153 ;;		i1_do_I2C_SEND_STOP
 10154 ;;		i1_i2c1_driver_TXData
 10155 ;;		i1_i2c1_driver_isNACK
 10156 ;;		i1_i2c_restartWrite
 10157 ;;		i1_rd1RegCompleteHandler
 10158 ;;		i1_rd2RegCompleteHandler
 10159 ;;		i1_rdBlkRegCompleteHandler
 10160 ;;		i1_returnReset
 10161 ;;		i1_returnStop
 10162 ;;		i1_wr1RegCompleteHandler
 10163 ;;		i1_wr2RegCompleteHandler
 10164 ;; This function is called by:
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           
 10169                           ;psect for function i1_do_I2C_TX
 10170  0746                     i1_do_I2C_TX:	
 10171  0746                     i25L__ptext94:	
 10172                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 10173                           
 10174                           ;incstack = 0
 10175 ;; hardware stack exceeded
 10176                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10177                           
 10178                           
 10179                           ;psect for function i1_i2c1_driver_isNACK
 10180  0746                     i25Li1_i2c1_driver_isNACK:	
 10181  0746                     i25Li1l2798:	
 10182                           
 10183                           ;i2c1_driver.c: 158: return SSP1CON2bits.ACKSTAT = 1;
 10184  0746  0023               	movlb	3	; select bank3
 10185  0747  0811               	movf	17,w	;volatile
 10186  0748  39BF               	andlw	-65
 10187  0749  3840               	iorlw	64
 10188  074A  0091               	movwf	17	;volatile
 10189  074B  0E11               	swapf	17,w	;volatile
 10190  074C  0C89               	rrf	9,f
 10191  074D  0C89               	rrf	9,f
 10192  074E  3901               	andlw	1
 10193  074F  00F0               	movwf	??i1_i2c1_driver_isNACK
 10194  0750  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 10195  0751                     i25Li1l78:	
 10196  0751  1803               	btfsc	3,0
 10197  0752  2F5A               	goto	i1l4826
 10198  0753  2F73               	goto	i1l405
 10199  0754                     i1l4812:	
 10200                           
 10201                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 10202  0754  2790               	fcall	i1_do_I2C_SEND_RESTART_READ
 10203  0755  0008               	return
 10204  0756                     i1l4816:	
 10205                           
 10206                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 10207  0756  2793               	fcall	i1_do_I2C_SEND_RESTART_WRITE
 10208  0757  0008               	return
 10209  0758                     i1l4820:	
 10210                           
 10211                           ;i2c_master.c: 345: case i2c_stop:
 10212                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 10213  0758  2796               	fcall	i1_do_I2C_SEND_STOP
 10214  0759  0008               	return
 10215  075A                     i1l4826:	
 10216  075A  0021               	movlb	1	; select bank1
 10217  075B  085A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 10218  075C  00F7               	movwf	i1returnStop@p
 10219  075D  3011               	movlw	17
 10220  075E  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
 10221  075F  0086               	movwf	6
 10222  0760  0187               	clrf	7
 10223  0761  3F41               	moviw [1]fsr1
 10224  0762  008A               	movwf	10
 10225  0763  3F40               	moviw [0]fsr1
 10226  0764  000A               	callw
 10227  0765  3186               	pagesel	$
 10228                           
 10229                           ; Switch size 1, requested type "space"
 10230                           ; Number of cases is 4, Range of values is 1 to 4
 10231                           ; switch strategies available:
 10232                           ; Name         Instructions Cycles
 10233                           ; simple_byte           13     7 (average)
 10234                           ; direct_byte           17     9 (fixed)
 10235                           ; jumptable            263     9 (fixed)
 10236                           ;	Chosen strategy is simple_byte
 10237  0766  3A01               	xorlw	1	; case 1
 10238  0767  1903               	skipnz
 10239  0768  2F58               	goto	i1l4820
 10240  0769  3A03               	xorlw	3	; case 2
 10241  076A  1903               	skipnz
 10242  076B  2F54               	goto	i1l4812
 10243  076C  3A01               	xorlw	1	; case 3
 10244  076D  1903               	skipnz
 10245  076E  2F56               	goto	i1l4816
 10246  076F  3A07               	xorlw	7	; case 4
 10247  0770  1903               	skipnz
 10248  0771  2F58               	goto	i1l4820
 10249  0772  2F58               	goto	i1l4820
 10250  0773                     i1l405:	
 10251                           
 10252                           ;i2c_master.c: 349: else
 10253                           ;i2c_master.c: 350: {
 10254                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 10255  0773  0021               	movlb	1	; select bank1
 10256  0774  30C2               	movlw	((low (_i2c_status| 0))& (0+255)+2)
 10257  0775  11C0               	bcf	_i2c_status^(0+128),3
 10258                           
 10259                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 10260  0776  0086               	movwf	6
 10261  0777  0187               	clrf	7
 10262  0778  3F40               	moviw [0]fsr1
 10263  0779  0084               	movwf	4
 10264  077A  0185               	clrf	5
 10265  077B  0A81               	incf	1,f
 10266  077C  0800               	movf	0,w
 10267  077D                     i26L__ptext95:	
 10268                           
 10269                           ;psect for function i1_i2c1_driver_TXData
 10270  077D                     i26Li1_i2c1_driver_TXData:	
 10271                           
 10272                           ;incstack = 0
 10273 ;; hardware stack exceeded
 10274                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 10275                           ;i1i2c1_driver_TXData@d stored from wreg
 10276  077D  00F0               	movwf	i1i2c1_driver_TXData@d
 10277  077E                     i26Li1l2808:	
 10278                           
 10279                           ;i2c1_driver.c: 183: SSP1BUF = d;
 10280  077E  0870               	movf	i1i2c1_driver_TXData@d,w
 10281  077F  0023               	movlb	3	; select bank3
 10282  0780  008C               	movwf	12	;volatile
 10283  0781                     i26Li1l93:	
 10284                           
 10285                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 10286  0781  3001               	movlw	1
 10287  0782  0021               	movlb	1	; select bank1
 10288  0783  02C3               	subwf	(_i2c_status^(0+128)+3),f
 10289  0784  3000               	movlw	0
 10290  0785  3BC4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 10291  0786  0843               	movf	(_i2c_status^(0+128)+3),w
 10292  0787  0444               	iorwf	((_i2c_status+1)^(0+128)+3),w
 10293  0788  1D03               	btfss	3,2
 10294  0789  2F8C               	goto	i1l4834
 10295  078A  3006               	movlw	6
 10296  078B  2F8D               	goto	L10
 10297  078C                     i1l4834:	
 10298  078C  3003               	movlw	3
 10299  078D                     L10:	
 10300  078D  00F8               	movwf	i1_do_I2C_TX$870
 10301  078E  01F9               	clrf	i1_do_I2C_TX$870+1
 10302  078F  0008               	return
 10303  0790                     __end_ofi1_do_I2C_TX:	
 10304  0790                     __ptext89:	
 10305 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 10306 ;; Defined at:
 10307 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      enum E14595
 10314 ;; Registers used:
 10315 ;;		wreg, status,2, status,0, pclath, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/3
 10318 ;;		On exit  : 1F/3
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;Total ram usage:        0 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    1
 10328 ;; This function calls:
 10329 ;;		i1_i2c1_driver_restart
 10330 ;; This function is called by:
 10331 ;;		i1_do_I2C_TX
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           
 10336                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 10337  0790                     i1_do_I2C_SEND_RESTART_READ:	
 10338  0790                     i36L__ptext112:	
 10339                           ;i2c_master.c: 256: i2c1_driver_restart();
 10340                           
 10341                           ;incstack = 0
 10342 ;; hardware stack exceeded
 10343                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 10344                           
 10345                           
 10346                           ;psect for function i1_i2c1_driver_restart
 10347  0790                     i36Li1_i2c1_driver_restart:	
 10348  0790                     i36Li1l2726:	
 10349                           
 10350                           ;i2c1_driver.c: 148: SSP1CON2bits.RSEN = 1;
 10351  0790  0023               	movlb	3	; select bank3
 10352  0791  1491               	bsf	17,1	;volatile
 10353  0792                     i36Li1l72:	
 10354                           
 10355                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 10356  0792  3401               	retlw	1
 10357  0793                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 10358  0793                     __ptext88:	
 10359 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 10360 ;; Defined at:
 10361 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;		None
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      enum E14595
 10368 ;; Registers used:
 10369 ;;		wreg, status,2, status,0, pclath, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/3
 10372 ;;		On exit  : 1F/3
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;Total ram usage:        0 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:    1
 10382 ;; This function calls:
 10383 ;;		i1_i2c1_driver_restart
 10384 ;; This function is called by:
 10385 ;;		i1_do_I2C_TX
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           
 10390                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 10391  0793                     i1_do_I2C_SEND_RESTART_WRITE:	
 10392  0793                     i35L__ptext112:	
 10393                           ;i2c_master.c: 262: i2c1_driver_restart();
 10394                           
 10395                           ;incstack = 0
 10396 ;; hardware stack exceeded
 10397                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 10398                           
 10399                           
 10400                           ;psect for function i1_i2c1_driver_restart
 10401  0793                     i35Li1_i2c1_driver_restart:	
 10402  0793                     i35Li1l2726:	
 10403                           
 10404                           ;i2c1_driver.c: 148: SSP1CON2bits.RSEN = 1;
 10405  0793  0023               	movlb	3	; select bank3
 10406  0794  1491               	bsf	17,1	;volatile
 10407  0795                     i35Li1l72:	
 10408                           
 10409                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 10410  0795  3402               	retlw	2
 10411  0796                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 10412  0796                     __ptext86:	
 10413 ;; *************** function i1_do_I2C_SEND_STOP *****************
 10414 ;; Defined at:
 10415 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      enum E14595
 10422 ;; Registers used:
 10423 ;;		wreg, status,2, status,0, pclath, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/1
 10426 ;;		On exit  : 1F/3
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;Total ram usage:        0 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    1
 10436 ;; This function calls:
 10437 ;;		i1_i2c1_driver_stop
 10438 ;; This function is called by:
 10439 ;;		i1_do_I2C_DO_ADDRESS_NACK
 10440 ;;		i1_do_I2C_TX
 10441 ;;		i1_do_I2C_TX_EMPTY
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           
 10446                           ;psect for function i1_do_I2C_SEND_STOP
 10447  0796                     i1_do_I2C_SEND_STOP:	
 10448  0796                     i33L__ptext111:	
 10449                           ;i2c_master.c: 274: i2c1_driver_stop();
 10450                           
 10451                           ;incstack = 0
 10452 ;; hardware stack exceeded
 10453                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 10454                           
 10455                           
 10456                           ;psect for function i1_i2c1_driver_stop
 10457  0796                     i33Li1_i2c1_driver_stop:	
 10458  0796                     i33Li1l2728:	
 10459                           
 10460                           ;i2c1_driver.c: 153: SSP1CON2bits.PEN = 1;
 10461  0796  0023               	movlb	3	; select bank3
 10462  0797  1511               	bsf	17,2	;volatile
 10463  0798                     i33Li1l75:	
 10464                           
 10465                           ;i2c_master.c: 275: return I2C_IDLE;
 10466  0798  3400               	retlw	0
 10467  0799                     __end_ofi1_do_I2C_SEND_STOP:	
 10468  0799                     __ptext43:	
 10469 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 10470 ;; Defined at:
 10471 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;		None
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      enum E14595
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0, pclath, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/1
 10482 ;;		On exit  : 1F/3
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;Total ram usage:        0 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    7
 10492 ;; This function calls:
 10493 ;;		_i2c1_driver_restart
 10494 ;; This function is called by:
 10495 ;;		_do_I2C_TX
 10496 ;;		_i2c_ISR
 10497 ;;		i1_i2c_ISR
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           
 10502                           ;psect for function _do_I2C_SEND_RESTART_READ
 10503  0799                     _do_I2C_SEND_RESTART_READ:	
 10504                           
 10505                           ;Skip over the trampoline to the duplicate function for level 1
 10506  0799  1C7E               	btfss	126,0
 10507  079A  2F9C               	goto	l2392
 10508  079B  2F90               	ljmp	i36L__ptext112
 10509  079C                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 10510  079C                     l2392:	
 10511                           ;incstack = 0
 10512                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 10513                           
 10514                           
 10515                           ;i2c_master.c: 256: i2c1_driver_restart();
 10516  079C  279E               	fcall	_i2c1_driver_restart
 10517                           
 10518                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 10519  079D  3401               	retlw	1
 10520  079E                     __end_of_do_I2C_SEND_RESTART_READ:	
 10521  079E                     __ptext66:	
 10522 ;; *************** function _i2c1_driver_restart *****************
 10523 ;; Defined at:
 10524 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;		None
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;		None
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		None
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/1
 10535 ;;		On exit  : 1F/3
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;Total ram usage:        0 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:    6
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_do_I2C_SEND_RESTART_READ
 10549 ;;		_do_I2C_SEND_RESTART_WRITE
 10550 ;;		_do_I2C_SEND_RESTART
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554                           
 10555                           ;psect for function _i2c1_driver_restart
 10556  079E                     _i2c1_driver_restart:	
 10557                           
 10558                           ;i2c1_driver.c: 148: SSP1CON2bits.RSEN = 1;
 10559                           
 10560                           ;incstack = 0
 10561                           ; Regs used in _i2c1_driver_restart: []
 10562  079E  0023               	movlb	3	; select bank3
 10563  079F  1491               	bsf	17,1	;volatile
 10564  07A0  0008               	return
 10565  07A1                     __end_of_i2c1_driver_restart:	
 10566  07A1                     __ptext40:	
 10567 ;; *************** function _do_I2C_SEND_STOP *****************
 10568 ;; Defined at:
 10569 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;		None
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      enum E14595
 10576 ;; Registers used:
 10577 ;;		wreg, status,2, status,0, pclath, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/1
 10580 ;;		On exit  : 1F/3
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;Total ram usage:        0 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    7
 10590 ;; This function calls:
 10591 ;;		_i2c1_driver_stop
 10592 ;; This function is called by:
 10593 ;;		_do_I2C_DO_ADDRESS_NACK
 10594 ;;		_do_I2C_TX
 10595 ;;		_do_I2C_TX_EMPTY
 10596 ;;		_i2c_ISR
 10597 ;;		i1_i2c_ISR
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           
 10601                           
 10602                           ;psect for function _do_I2C_SEND_STOP
 10603  07A1                     _do_I2C_SEND_STOP:	
 10604                           
 10605                           ;Skip over the trampoline to the duplicate function for level 1
 10606  07A1  1C7E               	btfss	126,0
 10607  07A2  2FA4               	goto	l2410
 10608  07A3  2F96               	ljmp	i33L__ptext111
 10609  07A4                     _do_I2C_SEND_STOP$intlevel0:	
 10610  07A4                     l2410:	
 10611                           ;incstack = 0
 10612                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 10613                           
 10614                           
 10615                           ;i2c_master.c: 274: i2c1_driver_stop();
 10616  07A4  27A6               	fcall	_i2c1_driver_stop
 10617                           
 10618                           ;i2c_master.c: 275: return I2C_IDLE;
 10619  07A5  3400               	retlw	0
 10620  07A6                     __end_of_do_I2C_SEND_STOP:	
 10621  07A6                     __ptext65:	
 10622 ;; *************** function _i2c1_driver_stop *****************
 10623 ;; Defined at:
 10624 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;		None
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;		None
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      void 
 10631 ;; Registers used:
 10632 ;;		None
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/1
 10635 ;;		On exit  : 1F/3
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;Total ram usage:        0 bytes
 10643 ;; Hardware stack levels used:    1
 10644 ;; Hardware stack levels required when called:    6
 10645 ;; This function calls:
 10646 ;;		Nothing
 10647 ;; This function is called by:
 10648 ;;		_do_I2C_SEND_STOP
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           
 10653                           ;psect for function _i2c1_driver_stop
 10654  07A6                     _i2c1_driver_stop:	
 10655                           
 10656                           ;i2c1_driver.c: 153: SSP1CON2bits.PEN = 1;
 10657                           
 10658                           ;incstack = 0
 10659                           ; Regs used in _i2c1_driver_stop: []
 10660  07A6  0023               	movlb	3	; select bank3
 10661  07A7  1511               	bsf	17,2	;volatile
 10662  07A8  0008               	return
 10663  07A9                     __end_of_i2c1_driver_stop:	
 10664  07A9                     __ptext87:	
 10665 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 10666 ;; Defined at:
 10667 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;		None
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;		None
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  1    wreg      enum E14595
 10674 ;; Registers used:
 10675 ;;		wreg, status,2, status,0, pclath, cstack
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/1
 10678 ;;		On exit  : 1F/3
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;Total ram usage:        0 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; Hardware stack levels required when called:    1
 10688 ;; This function calls:
 10689 ;;		i1_i2c1_driver_restart
 10690 ;; This function is called by:
 10691 ;;		i1_do_I2C_DO_ADDRESS_NACK
 10692 ;;		i1_do_I2C_TX_EMPTY
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function i1_do_I2C_SEND_RESTART
 10698  07A9                     i1_do_I2C_SEND_RESTART:	
 10699  07A9                     i34L__ptext112:	
 10700                           ;i2c_master.c: 268: i2c1_driver_restart();
 10701                           
 10702                           ;incstack = 0
 10703 ;; hardware stack exceeded
 10704                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 10705                           
 10706                           
 10707                           ;psect for function i1_i2c1_driver_restart
 10708  07A9                     i34Li1_i2c1_driver_restart:	
 10709  07A9                     i34Li1l2726:	
 10710                           
 10711                           ;i2c1_driver.c: 148: SSP1CON2bits.RSEN = 1;
 10712  07A9  0023               	movlb	3	; select bank3
 10713  07AA  1491               	bsf	17,1	;volatile
 10714  07AB                     i34Li1l72:	
 10715                           
 10716                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 10717  07AB  3401               	retlw	1
 10718  07AC                     __end_ofi1_do_I2C_SEND_RESTART:	
 10719  07AC                     __ptext41:	
 10720 ;; *************** function _do_I2C_SEND_RESTART *****************
 10721 ;; Defined at:
 10722 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;		None
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      enum E14595
 10729 ;; Registers used:
 10730 ;;		wreg, status,2, status,0, pclath, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/1
 10733 ;;		On exit  : 1F/3
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;Total ram usage:        0 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; Hardware stack levels required when called:    7
 10743 ;; This function calls:
 10744 ;;		_i2c1_driver_restart
 10745 ;; This function is called by:
 10746 ;;		_do_I2C_DO_ADDRESS_NACK
 10747 ;;		_do_I2C_TX_EMPTY
 10748 ;;		_i2c_ISR
 10749 ;;		i1_i2c_ISR
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           
 10754                           ;psect for function _do_I2C_SEND_RESTART
 10755  07AC                     _do_I2C_SEND_RESTART:	
 10756                           
 10757                           ;Skip over the trampoline to the duplicate function for level 1
 10758  07AC  1C7E               	btfss	126,0
 10759  07AD  2FAF               	goto	l2404
 10760  07AE  2FA9               	ljmp	i34L__ptext112
 10761  07AF                     _do_I2C_SEND_RESTART$intlevel0:	
 10762  07AF                     l2404:	
 10763                           ;incstack = 0
 10764                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 10765                           
 10766                           
 10767                           ;i2c_master.c: 268: i2c1_driver_restart();
 10768  07AF  279E               	fcall	_i2c1_driver_restart
 10769                           
 10770                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 10771  07B0  3401               	retlw	1
 10772  07B1                     __end_of_do_I2C_SEND_RESTART:	
 10773                           
 10774                           	psect	text34
 10775  0F82                     __ptext34:	
 10776 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 10777 ;; Defined at:
 10778 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;		None
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;		None
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  1    wreg      enum E14595
 10785 ;; Registers used:
 10786 ;;		wreg, status,2, status,0, pclath, cstack
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/1
 10789 ;;		On exit  : 1F/3
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;Total ram usage:        0 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; Hardware stack levels required when called:    7
 10799 ;; This function calls:
 10800 ;;		_i2c1_driver_sendNACK
 10801 ;; This function is called by:
 10802 ;;		_do_I2C_RX
 10803 ;;		_i2c_ISR
 10804 ;;		i1_i2c_ISR
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           
 10809                           ;psect for function _do_I2C_DO_NACK_RESTART
 10810  0F82                     _do_I2C_DO_NACK_RESTART:	
 10811                           
 10812                           ;Skip over the trampoline to the duplicate function for level 1
 10813  0F82  1C7E               	btfss	126,0
 10814  0F83  2F85               	goto	l2422
 10815  0F84  2FF3               	ljmp	i27L__ptext97
 10816  0F85                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 10817  0F85                     l2422:	
 10818                           ;incstack = 0
 10819                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 10820                           
 10821                           
 10822                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 10823  0F85  27FC               	fcall	_i2c1_driver_sendNACK
 10824                           
 10825                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 10826  0F86  3409               	retlw	9
 10827  0F87                     __end_of_do_I2C_DO_NACK_RESTART:	
 10828  0F87                     __ptext31:	
 10829 ;; *************** function _do_I2C_RX *****************
 10830 ;; Defined at:
 10831 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;		None
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      enum E14595
 10838 ;; Registers used:
 10839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10840 ;; Tracked objects:
 10841 ;;		On entry : 1F/1
 10842 ;;		On exit  : 1F/3
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;Total ram usage:        0 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:    9
 10852 ;; This function calls:
 10853 ;;		Absolute function
 10854 ;;		_do_I2C_DO_NACK_RESTART
 10855 ;;		_do_I2C_DO_NACK_STOP
 10856 ;;		_i2c1_driver_getRXData
 10857 ;;		_i2c1_driver_sendACK
 10858 ;;		_i2c_restartWrite
 10859 ;;		_rd1RegCompleteHandler
 10860 ;;		_rd2RegCompleteHandler
 10861 ;;		_rdBlkRegCompleteHandler
 10862 ;;		_returnReset
 10863 ;;		_returnStop
 10864 ;;		_wr1RegCompleteHandler
 10865 ;;		_wr2RegCompleteHandler
 10866 ;; This function is called by:
 10867 ;;		_i2c_ISR
 10868 ;;		i1_i2c_ISR
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           
 10873                           ;psect for function _do_I2C_RX
 10874  0F87                     _do_I2C_RX:	
 10875                           
 10876                           ;Skip over the trampoline to the duplicate function for level 1
 10877  0F87  1C7E               	btfss	126,0
 10878  0F88  2F8A               	goto	l4608
 10879  0F89  2FBB               	ljmp	i1l4838
 10880  0F8A                     _do_I2C_RX$intlevel0:	
 10881  0F8A                     l4608:	
 10882                           ;incstack = 0
 10883 ;; hardware stack exceeded
 10884                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10885                           
 10886                           
 10887                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 10888  0F8A  0842               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 10889  0F8B  0086               	movwf	6
 10890  0F8C  0187               	clrf	7
 10891  0F8D                     i9L__ptext50:	
 10892                           
 10893                           ;psect for function _i2c1_driver_getRXData
 10894  0F8D                     i9L_i2c1_driver_getRXData:	
 10895  0F8D                     i9Ll2346:	
 10896                           
 10897                           ;i2c1_driver.c: 168: return SSP1BUF;
 10898  0F8D  0023               	movlb	3	; select bank3
 10899  0F8E  080C               	movf	12,w	;volatile
 10900  0F8F                     i9Ll84:	
 10901  0F8F  0081               	movwf	1
 10902  0F90  0021               	movlb	1	; select bank1
 10903  0F91  3001               	movlw	1
 10904  0F92  0AC2               	incf	(low ((_i2c_status| 0+2)))^(0+128),f
 10905                           
 10906                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 10907  0F93  02C3               	subwf	(_i2c_status^(0+128)+3),f
 10908  0F94  3000               	movlw	0
 10909  0F95  3BC4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 10910  0F96  0843               	movf	(_i2c_status^(0+128)+3),w
 10911  0F97  0444               	iorwf	((_i2c_status+1)^(0+128)+3),w
 10912  0F98  1903               	btfsc	3,2
 10913  0F99  2F9E               	goto	l421
 10914                           
 10915                           ;psect for function _i2c1_driver_sendACK
 10916                           
 10917                           ;i2c_master.c: 361: {
 10918                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 10919  0F9A                     i10L_i2c1_driver_sendACK:	
 10920  0F9A                     i10Ll2352:	
 10921                           
 10922                           ;i2c1_driver.c: 193: SSP1CON2bits.ACKDT = 0;
 10923  0F9A  0023               	movlb	3	; select bank3
 10924  0F9B  1291               	bcf	17,5	;volatile
 10925                           
 10926                           ;i2c1_driver.c: 194: SSP1CON2bits.ACKEN = 1;
 10927  0F9C  1611               	bsf	17,4	;volatile
 10928  0F9D                     i10Ll99:	
 10929                           
 10930                           ;i2c_master.c: 363: return I2C_RCEN;
 10931  0F9D  3405               	retlw	5
 10932  0F9E                     l421:	
 10933                           
 10934                           ;i2c_master.c: 365: else
 10935                           ;i2c_master.c: 366: {
 10936                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 10937  0F9E  1540               	bsf	_i2c_status^(0+128),2
 10938                           
 10939                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 10940  0F9F  0857               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 10941  0FA0  0020               	movlb	0	; select bank0
 10942  0FA1  00A7               	movwf	returnStop@p
 10943  0FA2  300B               	movlw	11
 10944  0FA3  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
 10945  0FA4  0086               	movwf	6
 10946  0FA5  0187               	clrf	7
 10947  0FA6  3F41               	moviw [1]fsr1
 10948  0FA7  008A               	movwf	10
 10949  0FA8  3F40               	moviw [0]fsr1
 10950  0FA9  000A               	callw
 10951  0FAA  318F               	pagesel	$
 10952                           
 10953                           ; Switch size 1, requested type "space"
 10954                           ; Number of cases is 4, Range of values is 1 to 4
 10955                           ; switch strategies available:
 10956                           ; Name         Instructions Cycles
 10957                           ; simple_byte           13     7 (average)
 10958                           ; direct_byte           17     9 (fixed)
 10959                           ; jumptable            263     9 (fixed)
 10960                           ;	Chosen strategy is simple_byte
 10961  0FAB  3A01               	xorlw	1	; case 1
 10962  0FAC  1903               	skipnz
 10963  0FAD  2FBA               	goto	l4626
 10964  0FAE  3A03               	xorlw	3	; case 2
 10965  0FAF  1903               	skipnz
 10966  0FB0  2FB9               	goto	l4622
 10967  0FB1  3A01               	xorlw	1	; case 3
 10968  0FB2  1903               	skipnz
 10969  0FB3  2FB9               	goto	l4622
 10970  0FB4  3A07               	xorlw	7	; case 4
 10971  0FB5  1903               	skipnz
 10972  0FB6  2FBA               	goto	l4626
 10973  0FB7  2FBA               	goto	l4626
 10974  0FB8  0008               	return
 10975  0FB9                     l4622:	
 10976                           
 10977                           ;i2c_master.c: 371: case i2c_restart_read:
 10978                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 10979  0FB9  2F82               	ljmp	_do_I2C_DO_NACK_RESTART
 10980  0FBA                     l4626:	
 10981                           
 10982                           ;i2c_master.c: 375: case i2c_stop:
 10983                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 10984  0FBA  2FF7               	ljmp	_do_I2C_DO_NACK_STOP
 10985  0FBB                     __end_of_do_I2C_RX:	
 10986  0FBB                     __ptext77:	
 10987 ;; *************** function i1_do_I2C_RX *****************
 10988 ;; Defined at:
 10989 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      enum E14595
 10996 ;; Registers used:
 10997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 1F/3
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;Total ram usage:        0 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; Hardware stack levels required when called:    3
 11010 ;; This function calls:
 11011 ;;		Absolute function
 11012 ;;		i1_do_I2C_DO_NACK_RESTART
 11013 ;;		i1_do_I2C_DO_NACK_STOP
 11014 ;;		i1_i2c1_driver_getRXData
 11015 ;;		i1_i2c1_driver_sendACK
 11016 ;;		i1_i2c_restartWrite
 11017 ;;		i1_rd1RegCompleteHandler
 11018 ;;		i1_rd2RegCompleteHandler
 11019 ;;		i1_rdBlkRegCompleteHandler
 11020 ;;		i1_returnReset
 11021 ;;		i1_returnStop
 11022 ;;		i1_wr1RegCompleteHandler
 11023 ;;		i1_wr2RegCompleteHandler
 11024 ;; This function is called by:
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           
 11029                           ;psect for function i1_do_I2C_RX
 11030  0FBB                     i1_do_I2C_RX:	
 11031  0FBB                     i1l4838:	
 11032                           ;incstack = 0
 11033 ;; hardware stack exceeded
 11034                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11035                           
 11036                           
 11037                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 11038  0FBB  0021               	movlb	1	; select bank1
 11039  0FBC  0842               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 11040  0FBD  0086               	movwf	6
 11041  0FBE  0187               	clrf	7
 11042  0FBF                     i23L__ptext96:	
 11043                           
 11044                           ;psect for function i1_i2c1_driver_getRXData
 11045  0FBF                     i23Li1_i2c1_driver_getRXData:	
 11046  0FBF                     i23Li1l2804:	
 11047                           
 11048                           ;i2c1_driver.c: 168: return SSP1BUF;
 11049  0FBF  0023               	movlb	3	; select bank3
 11050  0FC0  080C               	movf	12,w	;volatile
 11051  0FC1                     i23Li1l84:	
 11052  0FC1  0081               	movwf	1
 11053  0FC2  0021               	movlb	1	; select bank1
 11054  0FC3  3001               	movlw	1
 11055  0FC4  0AC2               	incf	(low ((_i2c_status| 0+2)))^(0+128),f
 11056                           
 11057                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 11058  0FC5  02C3               	subwf	(_i2c_status^(0+128)+3),f
 11059  0FC6  3000               	movlw	0
 11060  0FC7  3BC4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 11061  0FC8  0843               	movf	(_i2c_status^(0+128)+3),w
 11062  0FC9  0444               	iorwf	((_i2c_status+1)^(0+128)+3),w
 11063  0FCA  1903               	btfsc	3,2
 11064  0FCB  2FD0               	goto	i1l421
 11065                           
 11066                           ;psect for function i1_i2c1_driver_sendACK
 11067                           
 11068                           ;i2c_master.c: 361: {
 11069                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 11070  0FCC                     i24Li1_i2c1_driver_sendACK:	
 11071  0FCC                     i24Li1l2810:	
 11072                           
 11073                           ;i2c1_driver.c: 193: SSP1CON2bits.ACKDT = 0;
 11074  0FCC  0023               	movlb	3	; select bank3
 11075  0FCD  1291               	bcf	17,5	;volatile
 11076                           
 11077                           ;i2c1_driver.c: 194: SSP1CON2bits.ACKEN = 1;
 11078  0FCE  1611               	bsf	17,4	;volatile
 11079  0FCF                     i24Li1l99:	
 11080                           
 11081                           ;i2c_master.c: 363: return I2C_RCEN;
 11082  0FCF  3405               	retlw	5
 11083  0FD0                     i1l421:	
 11084                           
 11085                           ;i2c_master.c: 365: else
 11086                           ;i2c_master.c: 366: {
 11087                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 11088  0FD0  1540               	bsf	_i2c_status^(0+128),2
 11089                           
 11090                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 11091  0FD1  2FD6               	goto	i1l4862
 11092  0FD2                     i1l4852:	
 11093                           
 11094                           ;i2c_master.c: 371: case i2c_restart_read:
 11095                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 11096  0FD2  27F3               	fcall	i1_do_I2C_DO_NACK_RESTART
 11097  0FD3  0008               	return
 11098  0FD4                     i1l4856:	
 11099                           
 11100                           ;i2c_master.c: 375: case i2c_stop:
 11101                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 11102  0FD4  27EF               	fcall	i1_do_I2C_DO_NACK_STOP
 11103  0FD5  0008               	return
 11104  0FD6                     i1l4862:	
 11105  0FD6  0857               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 11106  0FD7  00F7               	movwf	i1returnStop@p
 11107  0FD8  300B               	movlw	11
 11108  0FD9  3EC0               	addlw	(low (_i2c_status| 0))& (0+255)
 11109  0FDA  0086               	movwf	6
 11110  0FDB  0187               	clrf	7
 11111  0FDC  3F41               	moviw [1]fsr1
 11112  0FDD  008A               	movwf	10
 11113  0FDE  3F40               	moviw [0]fsr1
 11114  0FDF  000A               	callw
 11115  0FE0  318F               	pagesel	$
 11116                           
 11117                           ; Switch size 1, requested type "space"
 11118                           ; Number of cases is 4, Range of values is 1 to 4
 11119                           ; switch strategies available:
 11120                           ; Name         Instructions Cycles
 11121                           ; simple_byte           13     7 (average)
 11122                           ; direct_byte           17     9 (fixed)
 11123                           ; jumptable            263     9 (fixed)
 11124                           ;	Chosen strategy is simple_byte
 11125  0FE1  3A01               	xorlw	1	; case 1
 11126  0FE2  1903               	skipnz
 11127  0FE3  2FD4               	goto	i1l4856
 11128  0FE4  3A03               	xorlw	3	; case 2
 11129  0FE5  1903               	skipnz
 11130  0FE6  2FD2               	goto	i1l4852
 11131  0FE7  3A01               	xorlw	1	; case 3
 11132  0FE8  1903               	skipnz
 11133  0FE9  2FD2               	goto	i1l4852
 11134  0FEA  3A07               	xorlw	7	; case 4
 11135  0FEB  1903               	skipnz
 11136  0FEC  2FD4               	goto	i1l4856
 11137  0FED  2FD4               	goto	i1l4856
 11138  0FEE  0008               	return
 11139  0FEF                     __end_ofi1_do_I2C_RX:	
 11140  0FEF                     __ptext81:	
 11141 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 11142 ;; Defined at:
 11143 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      enum E14595
 11150 ;; Registers used:
 11151 ;;		wreg, status,2, status,0, pclath, cstack
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/1
 11154 ;;		On exit  : 1F/3
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;Total ram usage:        0 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:    1
 11164 ;; This function calls:
 11165 ;;		i1_i2c1_driver_sendNACK
 11166 ;; This function is called by:
 11167 ;;		i1_do_I2C_RX
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           
 11172                           ;psect for function i1_do_I2C_DO_NACK_STOP
 11173  0FEF                     i1_do_I2C_DO_NACK_STOP:	
 11174  0FEF                     i28L__ptext97:	
 11175                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 11176                           
 11177                           ;incstack = 0
 11178 ;; hardware stack exceeded
 11179                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11180                           
 11181                           
 11182                           ;psect for function i1_i2c1_driver_sendNACK
 11183  0FEF                     i28Li1_i2c1_driver_sendNACK:	
 11184  0FEF                     i28Li1l2730:	
 11185                           
 11186                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKDT = 1;
 11187  0FEF  0023               	movlb	3	; select bank3
 11188  0FF0  1691               	bsf	17,5	;volatile
 11189                           
 11190                           ;i2c1_driver.c: 200: SSP1CON2bits.ACKEN = 1;
 11191  0FF1  1611               	bsf	17,4	;volatile
 11192  0FF2                     i28Li1l102:	
 11193                           
 11194                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 11195  0FF2  340A               	retlw	10
 11196  0FF3                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 11197  0FF3                     __ptext80:	
 11198 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 11199 ;; Defined at:
 11200 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 11201 ;; Parameters:    Size  Location     Type
 11202 ;;		None
 11203 ;; Auto vars:     Size  Location     Type
 11204 ;;		None
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  1    wreg      enum E14595
 11207 ;; Registers used:
 11208 ;;		wreg, status,2, status,0, pclath, cstack
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/1
 11211 ;;		On exit  : 1F/3
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;Total ram usage:        0 bytes
 11219 ;; Hardware stack levels used:    1
 11220 ;; Hardware stack levels required when called:    1
 11221 ;; This function calls:
 11222 ;;		i1_i2c1_driver_sendNACK
 11223 ;; This function is called by:
 11224 ;;		i1_do_I2C_RX
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           
 11229                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 11230  0FF3                     i1_do_I2C_DO_NACK_RESTART:	
 11231  0FF3                     i27L__ptext97:	
 11232                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 11233                           
 11234                           ;incstack = 0
 11235 ;; hardware stack exceeded
 11236                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11237                           
 11238                           
 11239                           ;psect for function i1_i2c1_driver_sendNACK
 11240  0FF3                     i27Li1_i2c1_driver_sendNACK:	
 11241  0FF3                     i27Li1l2730:	
 11242                           
 11243                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKDT = 1;
 11244  0FF3  0023               	movlb	3	; select bank3
 11245  0FF4  1691               	bsf	17,5	;volatile
 11246                           
 11247                           ;i2c1_driver.c: 200: SSP1CON2bits.ACKEN = 1;
 11248  0FF5  1611               	bsf	17,4	;volatile
 11249  0FF6                     i27Li1l102:	
 11250                           
 11251                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 11252  0FF6  3409               	retlw	9
 11253  0FF7                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 11254  0FF7                     __ptext35:	
 11255 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 11256 ;; Defined at:
 11257 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;		None
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1    wreg      enum E14595
 11264 ;; Registers used:
 11265 ;;		wreg, status,2, status,0, pclath, cstack
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/1
 11268 ;;		On exit  : 1F/3
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11275 ;;Total ram usage:        0 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; Hardware stack levels required when called:    7
 11278 ;; This function calls:
 11279 ;;		_i2c1_driver_sendNACK
 11280 ;; This function is called by:
 11281 ;;		_do_I2C_RX
 11282 ;;		_i2c_ISR
 11283 ;;		i1_i2c_ISR
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           
 11288                           ;psect for function _do_I2C_DO_NACK_STOP
 11289  0FF7                     _do_I2C_DO_NACK_STOP:	
 11290                           
 11291                           ;Skip over the trampoline to the duplicate function for level 1
 11292  0FF7  1C7E               	btfss	126,0
 11293  0FF8  2FFA               	goto	l2416
 11294  0FF9  2FEF               	ljmp	i28L__ptext97
 11295  0FFA                     _do_I2C_DO_NACK_STOP$intlevel0:	
 11296  0FFA                     l2416:	
 11297                           ;incstack = 0
 11298                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11299                           
 11300                           
 11301                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 11302  0FFA  27FC               	fcall	_i2c1_driver_sendNACK
 11303                           
 11304                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 11305  0FFB  340A               	retlw	10
 11306  0FFC                     __end_of_do_I2C_DO_NACK_STOP:	
 11307  0FFC                     __ptext51:	
 11308 ;; *************** function _i2c1_driver_sendNACK *****************
 11309 ;; Defined at:
 11310 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;		None
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;		None
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		None
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/1
 11321 ;;		On exit  : 1F/3
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;Total ram usage:        0 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:    6
 11331 ;; This function calls:
 11332 ;;		Nothing
 11333 ;; This function is called by:
 11334 ;;		_do_I2C_DO_NACK_STOP
 11335 ;;		_do_I2C_DO_NACK_RESTART
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           
 11340                           ;psect for function _i2c1_driver_sendNACK
 11341  0FFC                     _i2c1_driver_sendNACK:	
 11342                           
 11343                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKDT = 1;
 11344                           
 11345                           ;incstack = 0
 11346                           ; Regs used in _i2c1_driver_sendNACK: []
 11347  0FFC  0023               	movlb	3	; select bank3
 11348  0FFD  1691               	bsf	17,5	;volatile
 11349                           
 11350                           ;i2c1_driver.c: 200: SSP1CON2bits.ACKEN = 1;
 11351  0FFE  1611               	bsf	17,4	;volatile
 11352  0FFF  0008               	return
 11353  1000                     __end_of_i2c1_driver_sendNACK:	
 11354                           
 11355                           	psect	text36
 11356  0F58                     __ptext36:	
 11357 ;; *************** function _do_I2C_DO_ACK *****************
 11358 ;; Defined at:
 11359 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;		None
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;		None
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  1    wreg      enum E14595
 11366 ;; Registers used:
 11367 ;;		wreg, status,2, status,0, pclath, cstack
 11368 ;; Tracked objects:
 11369 ;;		On entry : 1F/1
 11370 ;;		On exit  : 1F/3
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;Total ram usage:        0 bytes
 11378 ;; Hardware stack levels used:    1
 11379 ;; Hardware stack levels required when called:    7
 11380 ;; This function calls:
 11381 ;;		_i2c1_driver_sendACK
 11382 ;; This function is called by:
 11383 ;;		_i2c_ISR
 11384 ;;		i1_i2c_ISR
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           
 11389                           ;psect for function _do_I2C_DO_ACK
 11390  0F58                     _do_I2C_DO_ACK:	
 11391                           
 11392                           ;Skip over the trampoline to the duplicate function for level 1
 11393  0F58  1C7E               	btfss	126,0
 11394  0F59  2F5B               	goto	i13L__ptext67
 11395  0F5A  2F5F               	ljmp	i29L__ptext113
 11396  0F5B                     _do_I2C_DO_ACK$intlevel0:	
 11397  0F5B                     i13L__ptext67:	
 11398                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 11399                           
 11400                           ;incstack = 0
 11401                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 11402                           
 11403                           
 11404                           ;psect for function _i2c1_driver_sendACK
 11405  0F5B                     i13L_i2c1_driver_sendACK:	
 11406  0F5B                     i13Ll2352:	
 11407                           
 11408                           ;i2c1_driver.c: 193: SSP1CON2bits.ACKDT = 0;
 11409  0F5B  0023               	movlb	3	; select bank3
 11410  0F5C  1291               	bcf	17,5	;volatile
 11411                           
 11412                           ;i2c1_driver.c: 194: SSP1CON2bits.ACKEN = 1;
 11413  0F5D  1611               	bsf	17,4	;volatile
 11414  0F5E                     i13Ll99:	
 11415                           
 11416                           ;i2c_master.c: 302: return I2C_RCEN;
 11417  0F5E  3405               	retlw	5
 11418  0F5F                     __end_of_do_I2C_DO_ACK:	
 11419  0F5F                     __ptext82:	
 11420 ;; *************** function i1_do_I2C_DO_ACK *****************
 11421 ;; Defined at:
 11422 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;		None
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;		None
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  1    wreg      enum E14595
 11429 ;; Registers used:
 11430 ;;		wreg, status,2, status,0, pclath, cstack
 11431 ;; Tracked objects:
 11432 ;;		On entry : 0/0
 11433 ;;		On exit  : 1F/3
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;Total ram usage:        0 bytes
 11441 ;; Hardware stack levels used:    1
 11442 ;; Hardware stack levels required when called:    1
 11443 ;; This function calls:
 11444 ;;		i1_i2c1_driver_sendACK
 11445 ;; This function is called by:
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           
 11450                           ;psect for function i1_do_I2C_DO_ACK
 11451  0F5F                     i1_do_I2C_DO_ACK:	
 11452  0F5F                     i29L__ptext113:	
 11453                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 11454                           
 11455                           ;incstack = 0
 11456 ;; hardware stack exceeded
 11457                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 11458                           
 11459                           
 11460                           ;psect for function i1_i2c1_driver_sendACK
 11461  0F5F                     i29Li1_i2c1_driver_sendACK:	
 11462  0F5F                     i29Li1l2810:	
 11463                           
 11464                           ;i2c1_driver.c: 193: SSP1CON2bits.ACKDT = 0;
 11465  0F5F  0023               	movlb	3	; select bank3
 11466  0F60  1291               	bcf	17,5	;volatile
 11467                           
 11468                           ;i2c1_driver.c: 194: SSP1CON2bits.ACKEN = 1;
 11469  0F61  1611               	bsf	17,4	;volatile
 11470  0F62                     i29Li1l99:	
 11471                           
 11472                           ;i2c_master.c: 302: return I2C_RCEN;
 11473  0F62  3405               	retlw	5
 11474  0F63                     __end_ofi1_do_I2C_DO_ACK:	
 11475                           
 11476                           	psect	text37
 11477  0F63                     __ptext37:	
 11478 ;; *************** function _do_I2C_RCEN *****************
 11479 ;; Defined at:
 11480 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;		None
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;		None
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  1    wreg      enum E14595
 11487 ;; Registers used:
 11488 ;;		wreg, status,2, status,0, pclath, cstack
 11489 ;; Tracked objects:
 11490 ;;		On entry : 1F/1
 11491 ;;		On exit  : 1F/3
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;Total ram usage:        0 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; Hardware stack levels required when called:    7
 11501 ;; This function calls:
 11502 ;;		_i2c1_driver_startRX
 11503 ;; This function is called by:
 11504 ;;		_i2c_ISR
 11505 ;;		i1_i2c_ISR
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           
 11510                           ;psect for function _do_I2C_RCEN
 11511  0F63                     _do_I2C_RCEN:	
 11512                           
 11513                           ;Skip over the trampoline to the duplicate function for level 1
 11514  0F63  1C7E               	btfss	126,0
 11515  0F64  2F66               	goto	l2476
 11516  0F65  2F6A               	ljmp	i1l3104
 11517  0F66                     _do_I2C_RCEN$intlevel0:	
 11518  0F66                     l2476:	
 11519                           ;incstack = 0
 11520                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11521                           
 11522                           
 11523                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 11524  0F66  11C0               	bcf	_i2c_status^(0+128),3
 11525  0F67                     i14L__ptext53:	
 11526                           ;i2c_master.c: 295: i2c1_driver_startRX();
 11527                           
 11528                           
 11529                           ;psect for function _i2c1_driver_startRX
 11530  0F67                     i14L_i2c1_driver_startRX:	
 11531  0F67                     i14Ll2344:	
 11532                           
 11533                           ;i2c1_driver.c: 163: SSP1CON2bits.RCEN = 1;
 11534  0F67  0023               	movlb	3	; select bank3
 11535  0F68  1591               	bsf	17,3	;volatile
 11536  0F69                     i14Ll81:	
 11537                           
 11538                           ;i2c_master.c: 296: return I2C_RX;
 11539  0F69  3404               	retlw	4
 11540  0F6A                     __end_of_do_I2C_RCEN:	
 11541  0F6A                     __ptext83:	
 11542 ;; *************** function i1_do_I2C_RCEN *****************
 11543 ;; Defined at:
 11544 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      enum E14595
 11551 ;; Registers used:
 11552 ;;		wreg, status,2, status,0, pclath, cstack
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 1F/3
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used:    1
 11564 ;; Hardware stack levels required when called:    1
 11565 ;; This function calls:
 11566 ;;		i1_i2c1_driver_startRX
 11567 ;; This function is called by:
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           
 11572                           ;psect for function i1_do_I2C_RCEN
 11573  0F6A                     i1_do_I2C_RCEN:	
 11574  0F6A                     i1l3104:	
 11575                           ;incstack = 0
 11576 ;; hardware stack exceeded
 11577                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11578                           
 11579                           
 11580                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 11581  0F6A  0021               	movlb	1	; select bank1
 11582  0F6B  11C0               	bcf	_i2c_status^(0+128),3
 11583  0F6C                     i30L__ptext99:	
 11584                           ;i2c_master.c: 295: i2c1_driver_startRX();
 11585                           
 11586                           
 11587                           ;psect for function i1_i2c1_driver_startRX
 11588  0F6C                     i30Li1_i2c1_driver_startRX:	
 11589  0F6C                     i30Li1l2802:	
 11590                           
 11591                           ;i2c1_driver.c: 163: SSP1CON2bits.RCEN = 1;
 11592  0F6C  0023               	movlb	3	; select bank3
 11593  0F6D  1591               	bsf	17,3	;volatile
 11594  0F6E                     i30Li1l81:	
 11595                           
 11596                           ;i2c_master.c: 296: return I2C_RX;
 11597  0F6E  3404               	retlw	4
 11598  0F6F                     __end_ofi1_do_I2C_RCEN:	
 11599                           
 11600                           	psect	text38
 11601  0F6F                     __ptext38:	
 11602 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 11603 ;; Defined at:
 11604 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;		None
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;		None
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  1    wreg      enum E14595
 11611 ;; Registers used:
 11612 ;;		wreg, status,2, status,0, pclath, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 1F/1
 11615 ;;		On exit  : 1F/3
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;Total ram usage:        0 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    7
 11625 ;; This function calls:
 11626 ;;		_i2c1_driver_TXData
 11627 ;; This function is called by:
 11628 ;;		_i2c_ISR
 11629 ;;		i1_i2c_ISR
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           
 11634                           ;psect for function _do_I2C_SEND_ADR_WRITE
 11635  0F6F                     _do_I2C_SEND_ADR_WRITE:	
 11636                           
 11637                           ;Skip over the trampoline to the duplicate function for level 1
 11638  0F6F  1C7E               	btfss	126,0
 11639  0F70  2F72               	goto	l2468
 11640  0F71  2F7A               	ljmp	i1l3096
 11641  0F72                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 11642  0F72                     l2468:	
 11643                           ;incstack = 0
 11644                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11645                           
 11646                           
 11647                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 11648  0F72  15C0               	bsf	_i2c_status^(0+128),3
 11649                           
 11650                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 11651  0F73  3541               	lslf	(_i2c_status^(0+128)+1),w
 11652  0F74                     i15L__ptext49:	
 11653                           
 11654                           ;psect for function _i2c1_driver_TXData
 11655  0F74                     i15L_i2c1_driver_TXData:	
 11656                           
 11657                           ;incstack = 0
 11658                           ; Regs used in _i2c1_driver_TXData: [wreg]
 11659                           ;i2c1_driver_TXData@d stored from wreg
 11660  0F74  0020               	movlb	0	; select bank0
 11661  0F75  00A0               	movwf	i2c1_driver_TXData@d
 11662  0F76                     i15Ll2350:	
 11663                           
 11664                           ;i2c1_driver.c: 183: SSP1BUF = d;
 11665  0F76  0820               	movf	i2c1_driver_TXData@d,w
 11666  0F77  0023               	movlb	3	; select bank3
 11667  0F78  008C               	movwf	12	;volatile
 11668  0F79                     i15Ll93:	
 11669                           
 11670                           ;i2c_master.c: 289: return I2C_TX;
 11671  0F79  3403               	retlw	3
 11672  0F7A                     __end_of_do_I2C_SEND_ADR_WRITE:	
 11673  0F7A                     __ptext84:	
 11674 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 11675 ;; Defined at:
 11676 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;		None
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;		None
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      enum E14595
 11683 ;; Registers used:
 11684 ;;		wreg, status,2, status,0, pclath, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 1F/3
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;Total ram usage:        0 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; Hardware stack levels required when called:    1
 11697 ;; This function calls:
 11698 ;;		i1_i2c1_driver_TXData
 11699 ;; This function is called by:
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           
 11704                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 11705  0F7A                     i1_do_I2C_SEND_ADR_WRITE:	
 11706  0F7A                     i1l3096:	
 11707                           ;incstack = 0
 11708 ;; hardware stack exceeded
 11709                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11710                           
 11711                           
 11712                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 11713  0F7A  0021               	movlb	1	; select bank1
 11714  0F7B  15C0               	bsf	_i2c_status^(0+128),3
 11715                           
 11716                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 11717  0F7C  3541               	lslf	(_i2c_status^(0+128)+1),w
 11718  0F7D                     i31L__ptext95:	
 11719                           
 11720                           ;psect for function i1_i2c1_driver_TXData
 11721  0F7D                     i31Li1_i2c1_driver_TXData:	
 11722                           
 11723                           ;incstack = 0
 11724 ;; hardware stack exceeded
 11725                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 11726                           ;i1i2c1_driver_TXData@d stored from wreg
 11727  0F7D  00F0               	movwf	i1i2c1_driver_TXData@d
 11728  0F7E                     i31Li1l2808:	
 11729                           
 11730                           ;i2c1_driver.c: 183: SSP1BUF = d;
 11731  0F7E  0870               	movf	i1i2c1_driver_TXData@d,w
 11732  0F7F  0023               	movlb	3	; select bank3
 11733  0F80  008C               	movwf	12	;volatile
 11734  0F81                     i31Li1l93:	
 11735                           
 11736                           ;i2c_master.c: 289: return I2C_TX;
 11737  0F81  3403               	retlw	3
 11738  0F82                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 11739                           
 11740                           	psect	text39
 11741  07E7                     __ptext39:	
 11742 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 11743 ;; Defined at:
 11744 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      enum E14595
 11751 ;; Registers used:
 11752 ;;		wreg, status,2, status,0, pclath, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 1F/1
 11755 ;;		On exit  : 1F/3
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11762 ;;Total ram usage:        0 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    7
 11765 ;; This function calls:
 11766 ;;		_i2c1_driver_TXData
 11767 ;; This function is called by:
 11768 ;;		_i2c_ISR
 11769 ;;		i1_i2c_ISR
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           
 11774                           ;psect for function _do_I2C_SEND_ADR_READ
 11775  07E7                     _do_I2C_SEND_ADR_READ:	
 11776                           
 11777                           ;Skip over the trampoline to the duplicate function for level 1
 11778  07E7  1C7E               	btfss	126,0
 11779  07E8  2FEA               	goto	l2460
 11780  07E9  2FF3               	ljmp	i1l3088
 11781  07EA                     _do_I2C_SEND_ADR_READ$intlevel0:	
 11782  07EA                     l2460:	
 11783                           ;incstack = 0
 11784                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 11785                           
 11786                           
 11787                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 11788  07EA  15C0               	bsf	_i2c_status^(0+128),3
 11789                           
 11790                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 11791  07EB  1403               	setc
 11792  07EC  0D41               	rlf	(_i2c_status^(0+128)+1),w
 11793  07ED                     i16L__ptext49:	
 11794                           
 11795                           ;psect for function _i2c1_driver_TXData
 11796  07ED                     i16L_i2c1_driver_TXData:	
 11797                           
 11798                           ;incstack = 0
 11799                           ; Regs used in _i2c1_driver_TXData: [wreg]
 11800                           ;i2c1_driver_TXData@d stored from wreg
 11801  07ED  0020               	movlb	0	; select bank0
 11802  07EE  00A0               	movwf	i2c1_driver_TXData@d
 11803  07EF                     i16Ll2350:	
 11804                           
 11805                           ;i2c1_driver.c: 183: SSP1BUF = d;
 11806  07EF  0820               	movf	i2c1_driver_TXData@d,w
 11807  07F0  0023               	movlb	3	; select bank3
 11808  07F1  008C               	movwf	12	;volatile
 11809  07F2                     i16Ll93:	
 11810                           
 11811                           ;i2c_master.c: 282: return I2C_RCEN;
 11812  07F2  3405               	retlw	5
 11813  07F3                     __end_of_do_I2C_SEND_ADR_READ:	
 11814  07F3                     __ptext85:	
 11815 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 11816 ;; Defined at:
 11817 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 11818 ;; Parameters:    Size  Location     Type
 11819 ;;		None
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;		None
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  1    wreg      enum E14595
 11824 ;; Registers used:
 11825 ;;		wreg, status,2, status,0, pclath, cstack
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 1F/3
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;Total ram usage:        0 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; Hardware stack levels required when called:    1
 11838 ;; This function calls:
 11839 ;;		i1_i2c1_driver_TXData
 11840 ;; This function is called by:
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           
 11844                           
 11845                           ;psect for function i1_do_I2C_SEND_ADR_READ
 11846  07F3                     i1_do_I2C_SEND_ADR_READ:	
 11847  07F3                     i1l3088:	
 11848                           ;incstack = 0
 11849 ;; hardware stack exceeded
 11850                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 11851                           
 11852                           
 11853                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 11854  07F3  0021               	movlb	1	; select bank1
 11855  07F4  15C0               	bsf	_i2c_status^(0+128),3
 11856                           
 11857                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 11858  07F5  1403               	setc
 11859  07F6  0D41               	rlf	(_i2c_status^(0+128)+1),w
 11860  07F7                     i32L__ptext95:	
 11861                           
 11862                           ;psect for function i1_i2c1_driver_TXData
 11863  07F7                     i32Li1_i2c1_driver_TXData:	
 11864                           
 11865                           ;incstack = 0
 11866 ;; hardware stack exceeded
 11867                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 11868                           ;i1i2c1_driver_TXData@d stored from wreg
 11869  07F7  00F0               	movwf	i1i2c1_driver_TXData@d
 11870  07F8                     i32Li1l2808:	
 11871                           
 11872                           ;i2c1_driver.c: 183: SSP1BUF = d;
 11873  07F8  0870               	movf	i1i2c1_driver_TXData@d,w
 11874  07F9  0023               	movlb	3	; select bank3
 11875  07FA  008C               	movwf	12	;volatile
 11876  07FB                     i32Li1l93:	
 11877                           
 11878                           ;i2c_master.c: 282: return I2C_RCEN;
 11879  07FB  3405               	retlw	5
 11880  07FC                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 11881                           
 11882                           	psect	text44
 11883  07D1                     __ptext44:	
 11884 ;; *************** function _do_I2C_IDLE *****************
 11885 ;; Defined at:
 11886 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;		None
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;		None
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  1    wreg      enum E14595
 11893 ;; Registers used:
 11894 ;;		wreg, status,2
 11895 ;; Tracked objects:
 11896 ;;		On entry : 1F/1
 11897 ;;		On exit  : 1F/1
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;Total ram usage:        0 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:    6
 11907 ;; This function calls:
 11908 ;;		Nothing
 11909 ;; This function is called by:
 11910 ;;		_i2c_ISR
 11911 ;;		i1_i2c_ISR
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           
 11916                           ;psect for function _do_I2C_IDLE
 11917  07D1                     _do_I2C_IDLE:	
 11918                           
 11919                           ;Skip over the trampoline to the duplicate function for level 1
 11920  07D1  1C7E               	btfss	126,0
 11921  07D2  2FD4               	goto	l2452
 11922  07D3  2FD5               	ljmp	i1l3080
 11923  07D4                     _do_I2C_IDLE$intlevel0:	
 11924  07D4                     l2452:	
 11925                           ;incstack = 0
 11926                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 11927                           
 11928                           
 11929                           ;i2c_master.c: 249: i2c_status.busy = 0;
 11930                           
 11931                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 11932                           
 11933                           ;i2c_master.c: 251: return I2C_RESET;
 11934  07D4  2FE3               	ljmp	PL263	;call to abstracted procedure
 11935  07D5                     __end_of_do_I2C_IDLE:	
 11936  07D5                     __ptext90:	
 11937 ;; *************** function i1_do_I2C_IDLE *****************
 11938 ;; Defined at:
 11939 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;		None
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;		None
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  1    wreg      enum E14595
 11946 ;; Registers used:
 11947 ;;		wreg, status,2
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 1F/1
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11957 ;;Total ram usage:        0 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           
 11966                           ;psect for function i1_do_I2C_IDLE
 11967  07D5                     i1_do_I2C_IDLE:	
 11968  07D5                     i1l3080:	
 11969                           ;incstack = 0
 11970                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 11971                           
 11972                           
 11973                           ;i2c_master.c: 249: i2c_status.busy = 0;
 11974  07D5  0021               	movlb	1	; select bank1
 11975  07D6  300E               	movlw	14
 11976  07D7  1040               	bcf	_i2c_status^(0+128),0
 11977                           
 11978                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 11979  07D8  01CA               	clrf	(_i2c_status^(0+128)+10)
 11980                           
 11981                           ;i2c_master.c: 251: return I2C_RESET;
 11982  07D9  0008               	return
 11983  07DA                     __end_ofi1_do_I2C_IDLE:	
 11984  07DA                     __ptext45:	
 11985 ;; *************** function _do_I2C_RESET *****************
 11986 ;; Defined at:
 11987 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;		None
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;		None
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  1    wreg      enum E14595
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0, pclath, cstack
 11996 ;; Tracked objects:
 11997 ;;		On entry : 1F/1
 11998 ;;		On exit  : 1F/1
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;Total ram usage:        0 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    7
 12008 ;; This function calls:
 12009 ;;		_i2c1_driver_resetBus
 12010 ;; This function is called by:
 12011 ;;		_i2c_ISR
 12012 ;;		i1_i2c_ISR
 12013 ;; This function uses a non-reentrant model
 12014 ;;
 12015                           
 12016                           
 12017                           ;psect for function _do_I2C_RESET
 12018  07DA                     _do_I2C_RESET:	
 12019                           
 12020                           ;Skip over the trampoline to the duplicate function for level 1
 12021  07DA  1C7E               	btfss	126,0
 12022  07DB  2FDD               	goto	i17L__ptext52
 12023  07DC  2FDE               	ljmp	i37L__ptext98
 12024  07DD                     _do_I2C_RESET$intlevel0:	
 12025  07DD                     i17L__ptext52:	
 12026                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 12027                           
 12028                           ;incstack = 0
 12029                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 12030                           
 12031                           
 12032                           ;psect for function _i2c1_driver_resetBus
 12033  07DD                     i17L_i2c1_driver_resetBus:	
 12034  07DD                     i17Ll66:	
 12035                           
 12036                           ;i2c_master.c: 242: i2c_status.busy = 0;
 12037                           
 12038                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 12039                           
 12040                           ;i2c_master.c: 244: return I2C_RESET;
 12041  07DD  2FE3               	ljmp	PL263	;call to abstracted procedure
 12042  07DE                     __end_of_do_I2C_RESET:	
 12043  07DE                     __ptext91:	
 12044 ;; *************** function i1_do_I2C_RESET *****************
 12045 ;; Defined at:
 12046 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;		None
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;                  1    wreg      enum E14595
 12053 ;; Registers used:
 12054 ;;		wreg, status,2, status,0, pclath, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 1F/1
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;Total ram usage:        0 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:    1
 12067 ;; This function calls:
 12068 ;;		i1_i2c1_driver_resetBus
 12069 ;; This function is called by:
 12070 ;; This function uses a non-reentrant model
 12071 ;;
 12072                           
 12073                           
 12074                           ;psect for function i1_do_I2C_RESET
 12075  07DE                     i1_do_I2C_RESET:	
 12076  07DE                     i37L__ptext98:	
 12077                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 12078                           
 12079                           ;incstack = 0
 12080 ;; hardware stack exceeded
 12081                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 12082                           
 12083                           
 12084                           ;psect for function i1_i2c1_driver_resetBus
 12085  07DE                     i37Li1_i2c1_driver_resetBus:	
 12086  07DE                     i37Li1l66:	
 12087                           
 12088                           ;i2c_master.c: 242: i2c_status.busy = 0;
 12089  07DE  0021               	movlb	1	; select bank1
 12090  07DF  300E               	movlw	14
 12091  07E0  1040               	bcf	_i2c_status^(0+128),0
 12092                           
 12093                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 12094  07E1  01CA               	clrf	(_i2c_status^(0+128)+10)
 12095                           
 12096                           ;i2c_master.c: 244: return I2C_RESET;
 12097  07E2  0008               	return
 12098  07E3                     __end_ofi1_do_I2C_RESET:	
 12099  07E3                     PL263:	
 12100  07E3  300E               	movlw	14
 12101  07E4  1040               	bcf	_i2c_status^(0+128),0
 12102  07E5  01CA               	clrf	(_i2c_status^(0+128)+10)
 12103  07E6  0008               	return
 12104  07E7                     __end_ofPL263:	
 12105                           
 12106                           	psect	text47
 12107  0000                     __ptext47:	
 12108 ;; *************** function _mssp1_setIRQ *****************
 12109 ;; Defined at:
 12110 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;		None
 12113 ;; Auto vars:     Size  Location     Type
 12114 ;;		None
 12115 ;; Return value:  Size  Location     Type
 12116 ;;                  1    wreg      void 
 12117 ;; Registers used:
 12118 ;;		None
 12119 ;; Tracked objects:
 12120 ;;		On entry : 0/1
 12121 ;;		On exit  : 1F/E
 12122 ;;		Unchanged: 0/0
 12123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12128 ;;Total ram usage:        0 bytes
 12129 ;; Hardware stack levels used:    1
 12130 ;; Hardware stack levels required when called:    6
 12131 ;; This function calls:
 12132 ;;		Nothing
 12133 ;; This function is called by:
 12134 ;;		_do_I2C_TX_EMPTY
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138  0000                     _mssp1_setIRQ:	
 12139                           ;psect for function _mssp1_setIRQ
 12140                           
 12141  0000                     __end_of_mssp1_setIRQ:	
 12142                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 12143                           
 12144                           ;incstack = 0
 12145                           ; Regs used in _mssp1_setIRQ: []
 12146                           
 12147                           
 12148                           	psect	text49
 12149  0000                     __ptext49:	
 12150 ;; *************** function _i2c1_driver_TXData *****************
 12151 ;; Defined at:
 12152 ;;		line 181 in file "mcc_generated_files/i2c1_driver.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;  d               1    wreg     unsigned char 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;  d               1    0[BANK0 ] unsigned char 
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  1    wreg      void 
 12159 ;; Registers used:
 12160 ;;		wreg
 12161 ;; Tracked objects:
 12162 ;;		On entry : 1F/1
 12163 ;;		On exit  : 1F/3
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;Total ram usage:        1 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; Hardware stack levels required when called:    6
 12173 ;; This function calls:
 12174 ;;		Nothing
 12175 ;; This function is called by:
 12176 ;;		_do_I2C_SEND_ADR_READ
 12177 ;;		_do_I2C_SEND_ADR_WRITE
 12178 ;;		_do_I2C_TX
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182  0000                     _i2c1_driver_TXData:	
 12183                           ;psect for function _i2c1_driver_TXData
 12184                           
 12185  0000                     __end_of_i2c1_driver_TXData:	
 12186                           ;i2c1_driver.c: 183: SSP1BUF = d;
 12187                           
 12188                           ;incstack = 0
 12189                           ; Regs used in _i2c1_driver_TXData: [wreg]
 12190                           ;i2c1_driver_TXData@d stored from wreg
 12191                           
 12192                           
 12193                           	psect	text50
 12194  0000                     __ptext50:	
 12195 ;; *************** function _i2c1_driver_getRXData *****************
 12196 ;; Defined at:
 12197 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;		None
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;		None
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  1    wreg      unsigned char 
 12204 ;; Registers used:
 12205 ;;		wreg
 12206 ;; Tracked objects:
 12207 ;;		On entry : 1F/1
 12208 ;;		On exit  : 1F/3
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;Total ram usage:        0 bytes
 12216 ;; Hardware stack levels used:    1
 12217 ;; Hardware stack levels required when called:    6
 12218 ;; This function calls:
 12219 ;;		Nothing
 12220 ;; This function is called by:
 12221 ;;		_do_I2C_RX
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225  0000                     _i2c1_driver_getRXData:	
 12226                           ;psect for function _i2c1_driver_getRXData
 12227                           
 12228  0000                     __end_of_i2c1_driver_getRXData:	
 12229                           ;i2c1_driver.c: 168: return SSP1BUF;
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 12233                           
 12234                           
 12235                           	psect	text52
 12236  0000                     __ptext52:	
 12237 ;; *************** function _i2c1_driver_resetBus *****************
 12238 ;; Defined at:
 12239 ;;		line 136 in file "mcc_generated_files/i2c1_driver.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;		None
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;		None
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		None
 12248 ;; Tracked objects:
 12249 ;;		On entry : 1F/1
 12250 ;;		On exit  : 1F/1
 12251 ;;		Unchanged: 1F/0
 12252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;Total ram usage:        0 bytes
 12258 ;; Hardware stack levels used:    1
 12259 ;; Hardware stack levels required when called:    6
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_do_I2C_RESET
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267  0000                     _i2c1_driver_resetBus:	
 12268                           ;psect for function _i2c1_driver_resetBus
 12269                           
 12270  0000                     __end_of_i2c1_driver_resetBus:	
 12271                           ;incstack = 0
 12272                           ; Regs used in _i2c1_driver_resetBus: []
 12273                           
 12274                           
 12275                           	psect	text53
 12276  0000                     __ptext53:	
 12277 ;; *************** function _i2c1_driver_startRX *****************
 12278 ;; Defined at:
 12279 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;		None
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;		None
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      void 
 12286 ;; Registers used:
 12287 ;;		None
 12288 ;; Tracked objects:
 12289 ;;		On entry : 1F/1
 12290 ;;		On exit  : 1F/3
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;Total ram usage:        0 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:    6
 12300 ;; This function calls:
 12301 ;;		Nothing
 12302 ;; This function is called by:
 12303 ;;		_do_I2C_RCEN
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307  0000                     _i2c1_driver_startRX:	
 12308                           ;psect for function _i2c1_driver_startRX
 12309                           
 12310  0000                     __end_of_i2c1_driver_startRX:	
 12311                           ;i2c1_driver.c: 163: SSP1CON2bits.RCEN = 1;
 12312                           
 12313                           ;incstack = 0
 12314                           ; Regs used in _i2c1_driver_startRX: []
 12315                           
 12316                           
 12317                           	psect	text54
 12318  0F47                     __ptext54:	
 12319 ;; *************** function _returnReset *****************
 12320 ;; Defined at:
 12321 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  p               1    7[BANK0 ] PTR void 
 12324 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12325 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      enum E14438
 12330 ;; Registers used:
 12331 ;;		wreg
 12332 ;; Tracked objects:
 12333 ;;		On entry : 1E/0
 12334 ;;		On exit  : 1E/0
 12335 ;;		Unchanged: 1E/0
 12336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12337 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;Total ram usage:        1 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; Hardware stack levels required when called:    6
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_i2c_open
 12348 ;;		_do_I2C_DO_ADDRESS_NACK
 12349 ;;		_do_I2C_TX
 12350 ;;		_do_I2C_RX
 12351 ;;		_do_I2C_TX_EMPTY
 12352 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12353 ;;		i1_do_I2C_TX
 12354 ;;		i1_do_I2C_RX
 12355 ;;		i1_do_I2C_TX_EMPTY
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359                           
 12360                           ;psect for function _returnReset
 12361  0F47                     _returnReset:	
 12362                           
 12363                           ;Skip over the trampoline to the duplicate function for level 1
 12364  0F47  1C7E               	btfss	126,0
 12365  0F48  3405               	retlw	5
 12366  0F49  2F4B               	ljmp	i1l2890
 12367  0F4A                     _returnReset$intlevel0:	
 12368                           
 12369                           ;i2c_master.c: 450: return i2c_reset_link;
 12370                           
 12371                           ;incstack = 0
 12372                           ; Regs used in _returnReset: [wreg]
 12373  0F4A  3405               	retlw	5
 12374  0F4B                     __end_of_returnReset:	
 12375  0F4B                     __ptext101:	
 12376 ;; *************** function i1_returnReset *****************
 12377 ;; Defined at:
 12378 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  p               1    7[COMMON] PTR void 
 12381 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12382 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;		None
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      enum E14438
 12387 ;; Registers used:
 12388 ;;		wreg
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12394 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12398 ;;Total ram usage:        1 bytes
 12399 ;; Hardware stack levels used:    1
 12400 ;; This function calls:
 12401 ;;		Nothing
 12402 ;; This function is called by:
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           
 12407                           ;psect for function i1_returnReset
 12408  0F4B                     i1_returnReset:	
 12409  0F4B                     i1l2890:	
 12410                           ;incstack = 0
 12411 ;; hardware stack exceeded
 12412                           ; Regs used in i1_returnReset: [wreg]
 12413                           
 12414                           
 12415                           ;i2c_master.c: 450: return i2c_reset_link;
 12416  0F4B  3405               	retlw	5
 12417  0F4C                     __end_ofi1_returnReset:	
 12418                           
 12419                           	psect	text55
 12420  0F42                     __ptext55:	
 12421 ;; *************** function _returnStop *****************
 12422 ;; Defined at:
 12423 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  p               1    7[BANK0 ] PTR void 
 12426 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12427 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12428 ;; Auto vars:     Size  Location     Type
 12429 ;;		None
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  1    wreg      enum E14438
 12432 ;; Registers used:
 12433 ;;		wreg
 12434 ;; Tracked objects:
 12435 ;;		On entry : 1E/0
 12436 ;;		On exit  : 1E/0
 12437 ;;		Unchanged: 1E/0
 12438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12439 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;Total ram usage:        1 bytes
 12444 ;; Hardware stack levels used:    1
 12445 ;; Hardware stack levels required when called:    6
 12446 ;; This function calls:
 12447 ;;		Nothing
 12448 ;; This function is called by:
 12449 ;;		_i2c_open
 12450 ;;		_setCallBack
 12451 ;;		_do_I2C_DO_ADDRESS_NACK
 12452 ;;		_do_I2C_TX
 12453 ;;		_do_I2C_RX
 12454 ;;		_do_I2C_TX_EMPTY
 12455 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12456 ;;		i1_do_I2C_TX
 12457 ;;		i1_do_I2C_RX
 12458 ;;		i1_do_I2C_TX_EMPTY
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           
 12463                           ;psect for function _returnStop
 12464  0F42                     _returnStop:	
 12465                           
 12466                           ;Skip over the trampoline to the duplicate function for level 1
 12467  0F42  1C7E               	btfss	126,0
 12468  0F43  3401               	retlw	1
 12469  0F44  2F46               	ljmp	i1l2886
 12470  0F45                     _returnStop$intlevel0:	
 12471                           
 12472                           ;i2c_master.c: 445: return i2c_stop;
 12473                           
 12474                           ;incstack = 0
 12475                           ; Regs used in _returnStop: [wreg]
 12476  0F45  3401               	retlw	1
 12477  0F46                     __end_of_returnStop:	
 12478  0F46                     __ptext102:	
 12479 ;; *************** function i1_returnStop *****************
 12480 ;; Defined at:
 12481 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;  p               1    7[COMMON] PTR void 
 12484 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12485 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1    wreg      enum E14438
 12490 ;; Registers used:
 12491 ;;		wreg
 12492 ;; Tracked objects:
 12493 ;;		On entry : 1E/0
 12494 ;;		On exit  : 1E/0
 12495 ;;		Unchanged: 1E/0
 12496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12497 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;Total ram usage:        1 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; This function calls:
 12504 ;;		Nothing
 12505 ;; This function is called by:
 12506 ;;		i1_setCallBack
 12507 ;;		_do_I2C_DO_ADDRESS_NACK
 12508 ;;		_do_I2C_TX
 12509 ;;		_do_I2C_RX
 12510 ;;		_do_I2C_TX_EMPTY
 12511 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12512 ;;		i1_do_I2C_TX
 12513 ;;		i1_do_I2C_RX
 12514 ;;		i1_do_I2C_TX_EMPTY
 12515 ;; This function uses a non-reentrant model
 12516 ;;
 12517                           
 12518                           
 12519                           ;psect for function i1_returnStop
 12520  0F46                     i1_returnStop:	
 12521  0F46                     i1l2886:	
 12522                           ;incstack = 0
 12523 ;; hardware stack exceeded
 12524                           ; Regs used in i1_returnStop: [wreg]
 12525                           
 12526                           
 12527                           ;i2c_master.c: 445: return i2c_stop;
 12528  0F46  3401               	retlw	1
 12529  0F47                     __end_ofi1_returnStop:	
 12530                           
 12531                           	psect	text60
 12532  0F3D                     __ptext60:	
 12533 ;; *************** function _i2c_restartWrite *****************
 12534 ;; Defined at:
 12535 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  p               1    7[BANK0 ] PTR void 
 12538 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12539 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;		None
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  1    wreg      enum E91
 12544 ;; Registers used:
 12545 ;;		wreg
 12546 ;; Tracked objects:
 12547 ;;		On entry : 1E/0
 12548 ;;		On exit  : 1E/0
 12549 ;;		Unchanged: 1E/0
 12550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12551 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12554 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12555 ;;Total ram usage:        1 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:    6
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_i2c_write1ByteRegister
 12562 ;;		_i2c_read1ByteRegister
 12563 ;;		_do_I2C_DO_ADDRESS_NACK
 12564 ;;		_do_I2C_TX
 12565 ;;		_do_I2C_RX
 12566 ;;		_do_I2C_TX_EMPTY
 12567 ;;		i1_do_I2C_DO_ADDRESS_NACK
 12568 ;;		i1_do_I2C_TX
 12569 ;;		i1_do_I2C_RX
 12570 ;;		i1_do_I2C_TX_EMPTY
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           
 12575                           ;psect for function _i2c_restartWrite
 12576  0F3D                     _i2c_restartWrite:	
 12577                           
 12578                           ;Skip over the trampoline to the duplicate function for level 1
 12579  0F3D  1C7E               	btfss	126,0
 12580  0F3E  3403               	retlw	3
 12581  0F3F  2F41               	ljmp	i1l2894
 12582  0F40                     _i2c_restartWrite$intlevel0:	
 12583                           
 12584                           ;i2c_types.c: 37: return i2c_restart_write;
 12585                           
 12586                           ;incstack = 0
 12587                           ; Regs used in _i2c_restartWrite: [wreg]
 12588  0F40  3403               	retlw	3
 12589  0F41                     __end_of_i2c_restartWrite:	
 12590  0F41                     __ptext100:	
 12591 ;; *************** function i1_i2c_restartWrite *****************
 12592 ;; Defined at:
 12593 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;  p               1    7[COMMON] PTR void 
 12596 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 12597 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 12598 ;; Auto vars:     Size  Location     Type
 12599 ;;		None
 12600 ;; Return value:  Size  Location     Type
 12601 ;;                  1    wreg      enum E91
 12602 ;; Registers used:
 12603 ;;		wreg
 12604 ;; Tracked objects:
 12605 ;;		On entry : 0/0
 12606 ;;		On exit  : 0/0
 12607 ;;		Unchanged: 0/0
 12608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12609 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;Total ram usage:        1 bytes
 12614 ;; Hardware stack levels used:    1
 12615 ;; This function calls:
 12616 ;;		Nothing
 12617 ;; This function is called by:
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           
 12622                           ;psect for function i1_i2c_restartWrite
 12623  0F41                     i1_i2c_restartWrite:	
 12624  0F41                     i1l2894:	
 12625                           ;incstack = 0
 12626 ;; hardware stack exceeded
 12627                           ; Regs used in i1_i2c_restartWrite: [wreg]
 12628                           
 12629                           
 12630                           ;i2c_types.c: 37: return i2c_restart_write;
 12631  0F41  3403               	retlw	3
 12632  0F42                     __end_ofi1_i2c_restartWrite:	
 12633                           
 12634                           	psect	text67
 12635  0000                     __ptext67:	
 12636 ;; *************** function _i2c1_driver_sendACK *****************
 12637 ;; Defined at:
 12638 ;;		line 191 in file "mcc_generated_files/i2c1_driver.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;		None
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;		None
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  1    wreg      void 
 12645 ;; Registers used:
 12646 ;;		None
 12647 ;; Tracked objects:
 12648 ;;		On entry : 1F/1
 12649 ;;		On exit  : 1F/3
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;Total ram usage:        0 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; Hardware stack levels required when called:    6
 12659 ;; This function calls:
 12660 ;;		Nothing
 12661 ;; This function is called by:
 12662 ;;		_do_I2C_DO_ACK
 12663 ;;		_do_I2C_RX
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667  0000                     _i2c1_driver_sendACK:	
 12668                           ;psect for function _i2c1_driver_sendACK
 12669                           
 12670  0000                     __end_of_i2c1_driver_sendACK:	
 12671                           ;i2c1_driver.c: 194: SSP1CON2bits.ACKEN = 1;
 12672                           
 12673                           ;i2c1_driver.c: 193: SSP1CON2bits.ACKDT = 0;
 12674                           
 12675                           ;incstack = 0
 12676                           ; Regs used in _i2c1_driver_sendACK: []
 12677                           
 12678                           
 12679                           	psect	text68
 12680  0000                     __ptext68:	
 12681 ;; *************** function _i2c1_driver_start *****************
 12682 ;; Defined at:
 12683 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;		None
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;		None
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  1    wreg      void 
 12690 ;; Registers used:
 12691 ;;		None
 12692 ;; Tracked objects:
 12693 ;;		On entry : 1F/1
 12694 ;;		On exit  : 1F/3
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;Total ram usage:        0 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:    6
 12704 ;; This function calls:
 12705 ;;		Nothing
 12706 ;; This function is called by:
 12707 ;;		_i2c_masterOperation
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711  0000                     _i2c1_driver_start:	
 12712                           ;psect for function _i2c1_driver_start
 12713                           
 12714  0000                     __end_of_i2c1_driver_start:	
 12715                           ;i2c1_driver.c: 143: SSP1CON2bits.SEN = 1;
 12716                           
 12717                           ;incstack = 0
 12718                           ; Regs used in _i2c1_driver_start: []
 12719                           
 12720                           
 12721                           	psect	text70
 12722  0000                     __ptext70:	
 12723 ;; *************** function _mssp1_disableIRQ *****************
 12724 ;; Defined at:
 12725 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;		None
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		None
 12734 ;; Tracked objects:
 12735 ;;		On entry : 1F/E
 12736 ;;		On exit  : 1F/E
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;Total ram usage:        0 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    6
 12746 ;; This function calls:
 12747 ;;		Nothing
 12748 ;; This function is called by:
 12749 ;;		_i2c_close
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753  0000                     _mssp1_disableIRQ:	
 12754                           ;psect for function _mssp1_disableIRQ
 12755                           
 12756  0000                     __end_of_mssp1_disableIRQ:	
 12757                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
 12758                           
 12759                           ;incstack = 0
 12760                           ; Regs used in _mssp1_disableIRQ: []
 12761                           
 12762                           
 12763                           	psect	intentry
 12764  0004                     __pintentry:	
 12765 ;; *************** function _INTERRUPT_InterruptManager *****************
 12766 ;; Defined at:
 12767 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;		None
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;		None
 12772 ;; Return value:  Size  Location     Type
 12773 ;;                  1    wreg      void 
 12774 ;; Registers used:
 12775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;Total ram usage:        0 bytes
 12786 ;; Hardware stack levels used:    1
 12787 ;; Hardware stack levels required when called:    5
 12788 ;; This function calls:
 12789 ;;		Absolute function
 12790 ;;		_i2c_busCollisionISR
 12791 ;;		i1_i2c_ISR
 12792 ;; This function is called by:
 12793 ;;		Interrupt level 1
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797  0004                     _INTERRUPT_InterruptManager:	
 12798                           
 12799                           ;incstack = 0
 12800 ;; hardware stack exceeded
 12801  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12802                           
 12803                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12804  0005  3180               	pagesel	$
 12805                           
 12806                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
 12807  0006  1F0B               	btfss	11,6	;volatile
 12808  0007  2813               	goto	i1l147
 12809  0008  002E               	movlb	14	; select bank14
 12810  0009  1899               	btfsc	25,1	;volatile
 12811  000A  1C8F               	btfss	15,1	;volatile
 12812  000B  2813               	goto	i1l147
 12813                           
 12814                           ;interrupt_manager.c: 55: {
 12815                           ;interrupt_manager.c: 56: i2c1_driver_busCollisionISR();
 12816  000C  0020               	movlb	0	; select bank0
 12817  000D  085E               	movf	_i2c1_driver_busCollisionISR+1,w
 12818  000E  008A               	movwf	10
 12819  000F  085D               	movf	_i2c1_driver_busCollisionISR,w
 12820  0010  000A               	callw
 12821  0011  3180               	pagesel	$
 12822                           
 12823                           ;interrupt_manager.c: 57: }
 12824  0012  281F               	goto	i1l151
 12825  0013                     i1l147:	
 12826                           
 12827                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
 12828  0013  1F0B               	btfss	11,6	;volatile
 12829  0014  281F               	goto	i1l151
 12830  0015  002E               	movlb	14	; select bank14
 12831  0016  1819               	btfsc	25,0	;volatile
 12832  0017  1C0F               	btfss	15,0	;volatile
 12833  0018  281F               	goto	i1l151
 12834                           
 12835                           ;interrupt_manager.c: 59: {
 12836                           ;interrupt_manager.c: 60: i2c1_driver_i2cISR();
 12837  0019  0020               	movlb	0	; select bank0
 12838  001A  085C               	movf	_i2c1_driver_i2cISR+1,w
 12839  001B  008A               	movwf	10
 12840  001C  085B               	movf	_i2c1_driver_i2cISR,w
 12841  001D  000A               	callw
 12842  001E  3180               	pagesel	$
 12843  001F                     i1l151:	
 12844                           ;interrupt_manager.c: 61: }
 12845                           
 12846  001F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12847  0020  0009               	retfie
 12848  0021                     __end_of_INTERRUPT_InterruptManager:	
 12849                           
 12850                           	psect	text76
 12851  0000                     __ptext76:	
 12852 ;; *************** function i1_mssp1_clearIRQ *****************
 12853 ;; Defined at:
 12854 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		None
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 1F/E
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;Total ram usage:        0 bytes
 12873 ;; Hardware stack levels used:    1
 12874 ;; This function calls:
 12875 ;;		Nothing
 12876 ;; This function is called by:
 12877 ;;		i1_i2c_ISR
 12878 ;; This function uses a non-reentrant model
 12879 ;;
 12880                           
 12881  0000                     __end_ofi1_mssp1_clearIRQ:	
 12882                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 12883                           
 12884                           ;incstack = 0
 12885                           ; Regs used in i1_mssp1_clearIRQ: []
 12886                           
 12887                           ;psect for function i1_mssp1_clearIRQ
 12888                           
 12889                           
 12890                           	psect	text93
 12891  0000                     __ptext93:	
 12892 ;; *************** function i1_mssp1_setIRQ *****************
 12893 ;; Defined at:
 12894 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;		None
 12897 ;; Auto vars:     Size  Location     Type
 12898 ;;		None
 12899 ;; Return value:  Size  Location     Type
 12900 ;;                  1    wreg      void 
 12901 ;; Registers used:
 12902 ;;		None
 12903 ;; Tracked objects:
 12904 ;;		On entry : 0/1
 12905 ;;		On exit  : 1F/E
 12906 ;;		Unchanged: 0/0
 12907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;Total ram usage:        0 bytes
 12913 ;; Hardware stack levels used:    1
 12914 ;; This function calls:
 12915 ;;		Nothing
 12916 ;; This function is called by:
 12917 ;;		i1_do_I2C_TX_EMPTY
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921  0000                     __end_ofi1_mssp1_setIRQ:	
 12922                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 12923                           
 12924                           ;incstack = 0
 12925 ;; hardware stack exceeded
 12926                           ; Regs used in i1_mssp1_setIRQ: []
 12927                           
 12928                           ;psect for function i1_mssp1_setIRQ
 12929                           
 12930                           
 12931                           	psect	text94
 12932  0000                     __ptext94:	
 12933 ;; *************** function i1_i2c1_driver_isNACK *****************
 12934 ;; Defined at:
 12935 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;		None               void
 12942 ;; Registers used:
 12943 ;;		wreg, status,2, status,0
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/1
 12946 ;;		On exit  : 1F/3
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;Total ram usage:        1 bytes
 12954 ;; Hardware stack levels used:    1
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		i1_do_I2C_TX
 12959 ;;		i1_i2c_ISR
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963  0000                     __end_ofi1_i2c1_driver_isNACK:	
 12964                           ;i2c1_driver.c: 158: return SSP1CON2bits.ACKSTAT = 1;
 12965                           
 12966                           ;incstack = 0
 12967                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 12968                           
 12969                           ;psect for function i1_i2c1_driver_isNACK
 12970                           
 12971                           
 12972                           	psect	text95
 12973  0000                     __ptext95:	
 12974 ;; *************** function i1_i2c1_driver_TXData *****************
 12975 ;; Defined at:
 12976 ;;		line 181 in file "mcc_generated_files/i2c1_driver.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;  d               1    wreg     unsigned char 
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;  d               1    0[COMMON] unsigned char 
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      void 
 12983 ;; Registers used:
 12984 ;;		wreg
 12985 ;; Tracked objects:
 12986 ;;		On entry : 1F/1
 12987 ;;		On exit  : 1F/3
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;Total ram usage:        1 bytes
 12995 ;; Hardware stack levels used:    1
 12996 ;; This function calls:
 12997 ;;		Nothing
 12998 ;; This function is called by:
 12999 ;;		i1_do_I2C_SEND_ADR_READ
 13000 ;;		i1_do_I2C_SEND_ADR_WRITE
 13001 ;;		i1_do_I2C_TX
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005  0000                     __end_ofi1_i2c1_driver_TXData:	
 13006                           ;i2c1_driver.c: 183: SSP1BUF = d;
 13007                           
 13008                           ;incstack = 0
 13009 ;; hardware stack exceeded
 13010                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 13011                           ;i1i2c1_driver_TXData@d stored from wreg
 13012                           
 13013                           ;psect for function i1_i2c1_driver_TXData
 13014                           
 13015                           
 13016                           	psect	text96
 13017  0000                     __ptext96:	
 13018 ;; *************** function i1_i2c1_driver_getRXData *****************
 13019 ;; Defined at:
 13020 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;		None
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;		None
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  1    wreg      unsigned char 
 13027 ;; Registers used:
 13028 ;;		wreg
 13029 ;; Tracked objects:
 13030 ;;		On entry : 1F/1
 13031 ;;		On exit  : 1F/3
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13038 ;;Total ram usage:        0 bytes
 13039 ;; Hardware stack levels used:    1
 13040 ;; This function calls:
 13041 ;;		Nothing
 13042 ;; This function is called by:
 13043 ;;		i1_do_I2C_RX
 13044 ;; This function uses a non-reentrant model
 13045 ;;
 13046                           
 13047  0000                     __end_ofi1_i2c1_driver_getRXData:	
 13048                           ;i2c1_driver.c: 168: return SSP1BUF;
 13049                           
 13050                           ;incstack = 0
 13051 ;; hardware stack exceeded
 13052                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 13053                           
 13054                           ;psect for function i1_i2c1_driver_getRXData
 13055                           
 13056                           
 13057                           	psect	text97
 13058  0000                     __ptext97:	
 13059 ;; *************** function i1_i2c1_driver_sendNACK *****************
 13060 ;; Defined at:
 13061 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;		None
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;		None
 13066 ;; Return value:  Size  Location     Type
 13067 ;;                  1    wreg      void 
 13068 ;; Registers used:
 13069 ;;		None
 13070 ;; Tracked objects:
 13071 ;;		On entry : 0/1
 13072 ;;		On exit  : 1F/3
 13073 ;;		Unchanged: 0/0
 13074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;Total ram usage:        0 bytes
 13080 ;; Hardware stack levels used:    1
 13081 ;; This function calls:
 13082 ;;		Nothing
 13083 ;; This function is called by:
 13084 ;;		i1_do_I2C_DO_NACK_STOP
 13085 ;;		i1_do_I2C_DO_NACK_RESTART
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089  0000                     __end_ofi1_i2c1_driver_sendNACK:	
 13090                           ;i2c1_driver.c: 200: SSP1CON2bits.ACKEN = 1;
 13091                           
 13092                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKDT = 1;
 13093                           
 13094                           ;incstack = 0
 13095 ;; hardware stack exceeded
 13096                           ; Regs used in i1_i2c1_driver_sendNACK: []
 13097                           
 13098                           ;psect for function i1_i2c1_driver_sendNACK
 13099                           
 13100                           
 13101                           	psect	text98
 13102  0000                     __ptext98:	
 13103 ;; *************** function i1_i2c1_driver_resetBus *****************
 13104 ;; Defined at:
 13105 ;;		line 136 in file "mcc_generated_files/i2c1_driver.c"
 13106 ;; Parameters:    Size  Location     Type
 13107 ;;		None
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;		None
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  1    wreg      void 
 13112 ;; Registers used:
 13113 ;;		None
 13114 ;; Tracked objects:
 13115 ;;		On entry : 0/0
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13123 ;;Total ram usage:        0 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; This function calls:
 13126 ;;		Nothing
 13127 ;; This function is called by:
 13128 ;;		i1_do_I2C_RESET
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132  0000                     __end_ofi1_i2c1_driver_resetBus:	
 13133                           ;incstack = 0
 13134 ;; hardware stack exceeded
 13135                           ; Regs used in i1_i2c1_driver_resetBus: []
 13136                           
 13137                           ;psect for function i1_i2c1_driver_resetBus
 13138                           
 13139                           
 13140                           	psect	text99
 13141  0000                     __ptext99:	
 13142 ;; *************** function i1_i2c1_driver_startRX *****************
 13143 ;; Defined at:
 13144 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;		None
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      void 
 13151 ;; Registers used:
 13152 ;;		None
 13153 ;; Tracked objects:
 13154 ;;		On entry : 1F/1
 13155 ;;		On exit  : 1F/3
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13162 ;;Total ram usage:        0 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; This function calls:
 13165 ;;		Nothing
 13166 ;; This function is called by:
 13167 ;;		i1_do_I2C_RCEN
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171  0000                     __end_ofi1_i2c1_driver_startRX:	
 13172                           ;i2c1_driver.c: 163: SSP1CON2bits.RCEN = 1;
 13173                           
 13174                           ;incstack = 0
 13175 ;; hardware stack exceeded
 13176                           ; Regs used in i1_i2c1_driver_startRX: []
 13177                           
 13178                           ;psect for function i1_i2c1_driver_startRX
 13179                           
 13180                           
 13181                           	psect	text111
 13182  0000                     __ptext111:	
 13183 ;; *************** function i1_i2c1_driver_stop *****************
 13184 ;; Defined at:
 13185 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;		None
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;		None
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1    wreg      void 
 13192 ;; Registers used:
 13193 ;;		None
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/1
 13196 ;;		On exit  : 1F/3
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13203 ;;Total ram usage:        0 bytes
 13204 ;; Hardware stack levels used:    1
 13205 ;; This function calls:
 13206 ;;		Nothing
 13207 ;; This function is called by:
 13208 ;;		i1_do_I2C_SEND_STOP
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212  0000                     __end_ofi1_i2c1_driver_stop:	
 13213                           ;i2c1_driver.c: 153: SSP1CON2bits.PEN = 1;
 13214                           
 13215                           ;incstack = 0
 13216 ;; hardware stack exceeded
 13217                           ; Regs used in i1_i2c1_driver_stop: []
 13218                           
 13219                           ;psect for function i1_i2c1_driver_stop
 13220                           
 13221                           
 13222                           	psect	text112
 13223  0000                     __ptext112:	
 13224 ;; *************** function i1_i2c1_driver_restart *****************
 13225 ;; Defined at:
 13226 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 13227 ;; Parameters:    Size  Location     Type
 13228 ;;		None
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;		None
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  1    wreg      void 
 13233 ;; Registers used:
 13234 ;;		None
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/3
 13237 ;;		On exit  : 1F/3
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;Total ram usage:        0 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; This function calls:
 13247 ;;		Nothing
 13248 ;; This function is called by:
 13249 ;;		i1_do_I2C_SEND_RESTART_READ
 13250 ;;		i1_do_I2C_SEND_RESTART_WRITE
 13251 ;;		i1_do_I2C_SEND_RESTART
 13252 ;; This function uses a non-reentrant model
 13253 ;;
 13254                           
 13255  0000                     __end_ofi1_i2c1_driver_restart:	
 13256                           ;i2c1_driver.c: 148: SSP1CON2bits.RSEN = 1;
 13257                           
 13258                           ;incstack = 0
 13259 ;; hardware stack exceeded
 13260                           ; Regs used in i1_i2c1_driver_restart: []
 13261                           
 13262                           ;psect for function i1_i2c1_driver_restart
 13263                           
 13264                           
 13265                           	psect	text113
 13266  0000                     __ptext113:	
 13267 ;; *************** function i1_i2c1_driver_sendACK *****************
 13268 ;; Defined at:
 13269 ;;		line 191 in file "mcc_generated_files/i2c1_driver.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;		None
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;		None
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  1    wreg      void 
 13276 ;; Registers used:
 13277 ;;		None
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/1
 13280 ;;		On exit  : 1F/3
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13287 ;;Total ram usage:        0 bytes
 13288 ;; Hardware stack levels used:    1
 13289 ;; This function calls:
 13290 ;;		Nothing
 13291 ;; This function is called by:
 13292 ;;		i1_do_I2C_DO_ACK
 13293 ;;		i1_do_I2C_RX
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297  0000                     __end_ofi1_i2c1_driver_sendACK:	
 13298                           ;i2c1_driver.c: 194: SSP1CON2bits.ACKEN = 1;
 13299                           
 13300                           ;i2c1_driver.c: 193: SSP1CON2bits.ACKDT = 0;
 13301                           
 13302                           ;incstack = 0
 13303 ;; hardware stack exceeded
 13304                           ; Regs used in i1_i2c1_driver_sendACK: []
 13305                           
 13306                           ;psect for function i1_i2c1_driver_sendACK
 13307                           
 13308                           
 13309                           	psect	text114
 13310  07FC                     __ptext114:	
 13311 ;; *************** function _i2c_busCollisionISR *****************
 13312 ;; Defined at:
 13313 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      void 
 13320 ;; Registers used:
 13321 ;;		status,2, status,0, pclath, cstack
 13322 ;; Tracked objects:
 13323 ;;		On entry : 1F/0
 13324 ;;		On exit  : 1F/E
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    1
 13334 ;; This function calls:
 13335 ;;		_i2c1_driver_clearBusCollision
 13336 ;; This function is called by:
 13337 ;;		_i2c_open
 13338 ;;		_INTERRUPT_InterruptManager
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           
 13343                           ;psect for function _i2c_busCollisionISR
 13344  07FC                     _i2c_busCollisionISR:	
 13345  07FC                     i39L__ptext115:	
 13346                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 13347                           
 13348                           ;incstack = 0
 13349                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 13350                           
 13351                           
 13352                           ;psect for function _i2c1_driver_clearBusCollision
 13353  07FC                     i39L_i2c1_driver_clearBusCollision:	
 13354  07FC                     i39Li1l2898:	
 13355                           
 13356                           ;i2c1_driver.c: 240: PIR3bits.BCL1IF = 0;
 13357  07FC  002E               	movlb	14	; select bank14
 13358  07FD  108F               	bcf	15,1	;volatile
 13359  07FE                     i39Li1l126:	
 13360  07FE  0008               	return
 13361  07FF                     __end_of_i2c_busCollisionISR:	
 13362                           
 13363                           	psect	text115
 13364  0000                     __ptext115:	
 13365 ;; *************** function _i2c1_driver_clearBusCollision *****************
 13366 ;; Defined at:
 13367 ;;		line 238 in file "mcc_generated_files/i2c1_driver.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;		None
 13370 ;; Auto vars:     Size  Location     Type
 13371 ;;		None
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  1    wreg      void 
 13374 ;; Registers used:
 13375 ;;		None
 13376 ;; Tracked objects:
 13377 ;;		On entry : 1F/0
 13378 ;;		On exit  : 1F/E
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13385 ;;Total ram usage:        0 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; This function calls:
 13388 ;;		Nothing
 13389 ;; This function is called by:
 13390 ;;		_i2c_busCollisionISR
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394  0000                     _i2c1_driver_clearBusCollision:	
 13395                           ;psect for function _i2c1_driver_clearBusCollision
 13396                           
 13397  0000                     __end_of_i2c1_driver_clearBusCollision:	
 13398                           ;i2c1_driver.c: 240: PIR3bits.BCL1IF = 0;
 13399                           
 13400                           ;incstack = 0
 13401                           ; Regs used in _i2c1_driver_clearBusCollision: []
 13402                           


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     59      63
    BANK1            80      0      61
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$1861$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_ISR$1867	PTR const FTN()enum E14595 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$1866	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX$1861	PTR FTN(PTR void ,)enum E14438 size(2) Largest target is 1
		 -> returnReset(), returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> wr1RegCompleteHandler(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S668$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Thermo5_InterruptHandler	PTR FTN(struct Interrupts,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E14438 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), Absolute function(), wr1RegCompleteHandler(), 

    fsmStateTable	PTR const FTN()enum E14595[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E14438 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E14438 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> Absolute function(), wr1RegCompleteHandler(), 

    S668$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S668$callbackTable	PTR FTN(PTR void ,)enum E14438[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> wr1RegCompleteHandler(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E14438[6] size(2) Largest target is 1
		 -> i1_returnStop(), returnReset(), returnStop(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), i2c_restartWrite(), 
		 -> Absolute function(), wr1RegCompleteHandler(), 

    S668$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S579$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[4]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), Absolute function(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX_EMPTY->i1_i2c_restartWrite
    i1_do_I2C_TX_EMPTY->i1_rd1RegCompleteHandler
    i1_do_I2C_TX_EMPTY->i1_rd2RegCompleteHandler
    i1_do_I2C_TX_EMPTY->i1_rdBlkRegCompleteHandler
    i1_do_I2C_TX_EMPTY->i1_returnReset
    i1_do_I2C_TX_EMPTY->i1_returnStop
    i1_do_I2C_TX_EMPTY->i1_wr1RegCompleteHandler
    i1_do_I2C_TX_EMPTY->i1_wr2RegCompleteHandler
    i1_do_I2C_TX->i1_i2c_restartWrite
    i1_do_I2C_TX->i1_rd1RegCompleteHandler
    i1_do_I2C_TX->i1_rd2RegCompleteHandler
    i1_do_I2C_TX->i1_rdBlkRegCompleteHandler
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_TX->i1_wr1RegCompleteHandler
    i1_do_I2C_TX->i1_wr2RegCompleteHandler
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    i1_do_I2C_RX->i1_i2c_restartWrite
    i1_do_I2C_RX->i1_rd1RegCompleteHandler
    i1_do_I2C_RX->i1_rd2RegCompleteHandler
    i1_do_I2C_RX->i1_rdBlkRegCompleteHandler
    i1_do_I2C_RX->i1_returnReset
    i1_do_I2C_RX->i1_returnStop
    i1_do_I2C_RX->i1_wr1RegCompleteHandler
    i1_do_I2C_RX->i1_wr2RegCompleteHandler
    i1_do_I2C_DO_ADDRESS_NACK->i1_i2c_restartWrite
    i1_do_I2C_DO_ADDRESS_NACK->i1_rd1RegCompleteHandler
    i1_do_I2C_DO_ADDRESS_NACK->i1_rd2RegCompleteHandler
    i1_do_I2C_DO_ADDRESS_NACK->i1_rdBlkRegCompleteHandler
    i1_do_I2C_DO_ADDRESS_NACK->i1_returnReset
    i1_do_I2C_DO_ADDRESS_NACK->i1_returnStop
    i1_do_I2C_DO_ADDRESS_NACK->i1_wr1RegCompleteHandler
    i1_do_I2C_DO_ADDRESS_NACK->i1_wr2RegCompleteHandler
    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_i2c_setDataCompleteCallback->i1_setCallBack

Critical Paths under _main in BANK0

    _main->_Thermo5_ReadTemperature
    _fan_setSpeed->_fan_write
    ___ftsub->___ftmul
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _Thermo5_ReadTemperature->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->___ftadd
    _Read_Thermo_Register->_i2c_read1ByteRegister
    _SYSTEM_Initialize->_fan_Initialize
    _fan_Initialize->_fan_write
    _fan_write->_i2c_write1ByteRegister
    _Thermo5_Initialize->_Thermo5_SetHysteresis
    _Thermo5_SetHysteresis->_Write_Thermo_Register
    _Write_Thermo_Register->_i2c_write1ByteRegister
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  431186
                                             50 BANK0      9     9      0
                  _SYSTEM_Initialize
            _Thermo5_ReadTemperature
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                       _fan_setSpeed
 ---------------------------------------------------------------------------------
 (1) _fan_setSpeed                                         4     2      2   82321
                                             17 BANK0      4     2      2
                            ___fttol (ARG)
                          _fan_write
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             13     9      4     328
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3829
                                             23 BANK0      6     0      6
                            ___ftadd
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3610
                                              8 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2946
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               6     0      6     440
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _Thermo5_ReadTemperature                             15    12      3   86923
                                             35 BANK0     15    12      3
               _Read_Thermo_Register
                            ___ftdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2586
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3052
                                             20 BANK0     15     9      6
                            ___ftadd (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _Read_Thermo_Register                                 2     2      0   80785
                                             18 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _i2c_read1ByteRegister                                6     5      1   80630
                                             12 BANK0      6     5      1
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0  247342
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                 _Thermo5_Initialize
                     _fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _fan_Initialize                                       1     1      0   81749
                                             17 BANK0      1     1      0
                          _fan_write
 ---------------------------------------------------------------------------------
 (2) _fan_write                                            2     1      1   81749
                                             15 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _Thermo5_Initialize                                   0     0      0  165570
              _Thermo5_SetHysteresis
              _Write_Thermo_Register
 ---------------------------------------------------------------------------------
 (3) _Thermo5_SetHysteresis                                1     1      0   82820
                                             17 BANK0      1     1      0
              _Write_Thermo_Register
 ---------------------------------------------------------------------------------
 (3) _Write_Thermo_Register                                2     1      1   82750
                                             15 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _i2c_write1ByteRegister                               3     1      2   80631
                                             12 BANK0      3     1      2
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _i2c_setAddressNACKCallback                           3     0      3    1688
                                              4 BANK0      3     0      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (4) _i2c_open                                             2     2      0     366
                                              2 BANK0      2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_setI2cISR                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_setBusCollisionISR                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_masterWrite                                      0     0      0   73942
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (5) _i2c_masterOperation                                  2     2      0   73942
                                             10 BANK0      2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (6) _mssp1_IRQisEnabled                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_poller                                           0     0      0   73772
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (7) _mssp1_waitForEvent                                   1     1      0      50
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _i2c_ISR                                              0     0      0   73722
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX_EMPTY                                      0     0      0   18389
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX                                            2     2      0   18511
                                              8 BANK0      2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_TXData                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RX                                            0     0      0   18389
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ADDRESS_NACK                               0     0      0   18389
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    3631
                                              7 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    3631
                                              7 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _returnStop                                           1     0      1      76
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _returnReset                                          1     0      1     136
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    3653
                                              7 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    3631
                                              7 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    3631
                                              7 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _i2c_setDataCompleteCallback                          3     0      3    2322
                                              4 BANK0      3     0      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (5) _setCallBack                                          4     1      3     836
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        3     1      2    1287
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (9) _i2c_restartWrite                                     1     0      1       0
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_close                                            1     1      0      24
                                              0 BANK0      1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (5) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          0     0      0   14790
                   Absolute function *
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (15) i1_i2c_ISR                                           0     0      0   14790
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (16) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_TX_EMPTY                                   0     0      0    3656
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
                     i1_mssp1_setIRQ
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_TX                                         2     2      0    3778
                                              8 COMMON     2     2      0
                   Absolute function *
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_ADR_READ                              0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_RX                                         0     0      0    3656
                   Absolute function *
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (18) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_ADDRESS_NACK                            0     0      0    3656
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) i1_wr2RegCompleteHandler                             1     0      1     706
                                              7 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_wr1RegCompleteHandler                             1     0      1     706
                                              7 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_returnStop                                        1     0      1      76
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (17) i1_returnReset                                       1     0      1      28
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (17) i1_rdBlkRegCompleteHandler                           1     0      1     728
                                              7 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_rd2RegCompleteHandler                             1     0      1     706
                                              7 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_rd1RegCompleteHandler                             1     0      1     706
                                              7 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) i1_i2c_setDataCompleteCallback                       3     0      3     510
                                              4 COMMON     3     0      3
                      i1_setCallBack
 ---------------------------------------------------------------------------------
 (19) i1_setCallBack                                       4     1      3     206
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (18) i1_i2c_setBuffer                                     3     1      2     174
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (17) i1_i2c_restartWrite                                  1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (18) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (18) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (16) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _Thermo5_Initialize
       _Thermo5_SetHysteresis
         _Write_Thermo_Register
           _i2c_write1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
       _Write_Thermo_Register
         _i2c_write1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
     _fan_Initialize
       _fan_write
         _i2c_write1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _Thermo5_ReadTemperature
     _Read_Thermo_Register
       _i2c_read1ByteRegister
         _i2c_close
           _mssp1_clearIRQ
           _mssp1_disableIRQ
         _i2c_masterWrite
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _i2c_restartWrite *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   Absolute function(Fake) *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData *
                   _i2c1_driver_sendACK *
                   _i2c_restartWrite *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   Absolute function(Fake) *
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _i2c1_driver_TXData *
                   _i2c1_driver_isNACK *
                   _i2c_restartWrite *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _do_I2C_TX_EMPTY *
                   Absolute function(Fake) *
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _i2c_restartWrite *
                   _mssp1_setIRQ *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
         _i2c_open
           _i2c1_driver_open
           _i2c1_driver_setBusCollisionISR
           _i2c1_driver_setI2cISR
           _mssp1_clearIRQ
         _i2c_setAddressNACKCallback
           _setCallBack
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     ___ftdiv
       ___ftadd (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___lwtoft
       ___ftpack
   ___ftadd
     ___ftpack
   ___ftdiv
     ___ftadd (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___ftpack
   ___ftsub
     ___ftadd
       ___ftpack
     ___ftmul (ARG)
       ___ftpack
   ___fttol
   _fan_setSpeed
     ___fttol (ARG)
     _fan_write (ARG)
       _i2c_write1ByteRegister
         _i2c_close
           _mssp1_clearIRQ
           _mssp1_disableIRQ
         _i2c_masterWrite
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _i2c_restartWrite *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   Absolute function(Fake) *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData *
                   _i2c1_driver_sendACK *
                   _i2c_restartWrite *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   Absolute function(Fake) *
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _i2c1_driver_TXData *
                   _i2c1_driver_isNACK *
                   _i2c_restartWrite *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _do_I2C_TX_EMPTY *
                   Absolute function(Fake) *
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _i2c_restartWrite *
                   _mssp1_setIRQ *
                   _rd1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rd2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _rdBlkRegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _returnReset *
                   _returnStop *
                   _wr1RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                   _wr2RegCompleteHandler *
                     _i2c_setBuffer
                     _i2c_setDataCompleteCallback
                       _setCallBack
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
         _i2c_open
           _i2c1_driver_open
           _i2c1_driver_setBusCollisionISR
           _i2c1_driver_setI2cISR
           _mssp1_clearIRQ
         _i2c_setAddressNACKCallback
           _setCallBack
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       Absolute function(Fake) *
       i1_do_I2C_DO_NACK_RESTART *
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP *
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData *
       i1_i2c1_driver_sendACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART_READ *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData *
       i1_i2c1_driver_isNACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_mssp1_setIRQ *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      3D       7       76.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      86      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      86      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Jul 25 13:28:43 2017

                           returnReset@p 0027            _do_I2C_SEND_RESTART$intlevel0 07AF  
                            __CFG_CP$OFF 0000                                       l40 0001  
                                     l50 0005                                       l37 0006  
                                     l46 0002                                       l54 0010  
                                     l81 0002                                       l66 0000  
                                     l84 0002                                       l69 0002  
                                     l93 0005                                       l99 0003  
                   __size_of_do_I2C_IDLE 0004                      _do_I2C_SEND_RESTART 07AC  
                   __size_of_do_I2C_RCEN 0007                     __end_ofi1_returnStop 0F47  
                           ___ftadd@exp1 0033                             ___ftadd@exp2 0032  
                            i1_do_I2C_RX 0FBB                              i1_do_I2C_TX 0746  
                            __CFG_LVP$ON 0000                             ___ftadd@sign 0031  
                                    l132 0004                                      l129 0004  
                                    l331 04E3                                      l324 0544  
                                    l405 0727                                      l421 0F9E  
                                    l358 000D                                      l721 004B  
                                    l966 0210                                      l978 0235  
                                    _GIE 005F                             __CFG_CPD$OFF 0000  
               i1_do_I2C_DO_NACK_RESTART 0FF3                                      u960 0005  
                                    u961 0004                                      u970 000A  
                                    u971 0009             __size_of_i2c_masterOperation 003A  
                   _returnStop$intlevel0 0F45            i2c_setDataCompleteCallback@cb 0024  
               ?i1_rd2RegCompleteHandler 0077                    __size_of_do_I2C_RESET 0004  
                           __CFG_BORV$LO 0000                                      wreg 0009  
                  __end_ofi1_returnReset 0F4C                          ?i1_mssp1_setIRQ 0070  
               ?i1_wr2RegCompleteHandler 0077                       i1_i2c1_driver_stop 0000  
        i2c1_driver_setBusCollisionISR@f 0020          ??i1_i2c_setDataCompleteCallback 0077  
                                   PL261 066D                                     PL253 0653  
                                   PL263 07E3                                     PL255 065A  
                                   PL265 0671                                     PL257 0661  
                                   PL259 0667                   __end_of_fan_Initialize 03FC  
                           __CFG_ZCD$OFF 0000                             ___ftdiv@cntr 003D  
                           ___ftdiv@sign 0042                                     l1002 031A  
                                   l1020 014A                  ??_rd2RegCompleteHandler 0028  
                                   l3002 0325                                     l3020 033E  
                                   l3008 032D                                     l2322 0562  
                                   l2410 07A4                                     l3050 015D  
                                   l2404 07AF                                     l3028 013C  
                                   l2350 0002                                     l2422 0F85  
                                   l3302 0288                                     l2352 0000  
                                   l2344 0000                                     l2416 0FFA  
                                   l3056 0173                                     l2602 0000  
                                   l2354 0444                                     l2362 0434  
                                   l2370 0424                                     l2346 0000  
                                   l2338 0000                                     l3322 0374  
                                   l2612 0000                                     l2452 07D4  
                                   l2460 07EA                                     l3244 00CD  
                                   l3316 0357                                     l3340 0395  
                                   l3324 0379                                     l3350 03A0  
                                   l2392 079C                                     l3248 00DC  
                                   l3264 0254                                     l3352 03A9  
                                   l3344 039C                                     l2378 0454  
                                   l2386 0464                                     l2626 0000  
                                   l3290 027A                            i1returnStop@p 0077  
                                   l2468 0F72                                     l2476 0F66  
                                   l2628 0000                                     l3268 0262  
                                   l3356 03B7                                     l2398 06F6  
                                   l2582 0000                                     l3286 0276  
                                   l2586 000B                                     l3298 0284  
                                   l4604 0741                                     l2780 021D  
                                   l4622 0FB9                                     l2598 0000  
                                   l2782 0226                                     l4640 06CC  
                                   l4608 0F8A                                     l2776 0214  
                                   l4634 06B0                                     l4570 0690  
                                   l4562 0678                                     l4626 0FBA  
                                   l2786 0233                                     l2778 0218  
                                   l2954 02C5                                     l4636 06CB  
                                   l2788 022B                                     l4900 019E  
                                   l2964 02DB                                     l4646 06CF  
                                   l4566 068F                                     l4590 070C  
                                   l4582 070A                                     l4662 060A  
                                   l4654 05FE                                     l4670 0008  
                                   l4734 0479                                     l2982 02F7  
                                   l2958 02CC                                     l4664 0000  
                                   l4744 0497                                     l4904 01A9  
                                   l2984 02FB                                     l2976 02E9  
                                   l4586 070B                                     l4666 0001  
                                   l4682 05D4                                     l4674 05CA  
                                   l4754 04A3                                     l4906 01B7  
                                   l2994 0312                                     l2986 0300  
                                   l4596 070D                                     l4668 0005  
                                   l4772 04D2                                     l4764 04C1  
                                   l2996 0316                                     l2988 0304  
                                   l4940 0041                                     l4688 05C7  
                                   l4784 03DC                                     l4944 0045  
                                   l4894 018C                                     l4896 0192  
                                   l4898 0198                                     u1230 012C  
                                   _LATA 0016                                     _LATB 0017  
                                   _LATC 0018                                     u3057 03F2  
                                   u1465 016A                                     u3067 000C  
                                   u1645 037C                                     u2790 000D  
                                   u2791 000C                                     u2935 03CE  
                                   u2945 01CA                                     i1l43 0002  
                                   i1l46 0002                                     i1l72 0002  
                                   i1l81 0002                                     i1l66 0000  
                                   i1l75 0002                                     i1l84 0002  
                                   i1l93 0004                                     i1l78 000B  
                                   i1l99 0003                     ?_do_I2C_SEND_RESTART 0070  
                                   _WPUA 0F39                                     _WPUB 0F44  
                                   _WPUC 0F4F                                     _WPUE 0F65  
                ??_wr2RegCompleteHandler 0028                             __CFG_WRT$OFF 0000  
                          __CFG_FCMEN$ON 0000        __size_of_do_I2C_SEND_RESTART_READ 0005  
                    ?i1_i2c1_driver_stop 0070                ?_do_I2C_SEND_RESTART_READ 0070  
                                   _main 003E                             ___ftpack@arg 0020  
              __size_of_do_I2C_SEND_STOP 0005                   __size_of_do_I2C_DO_ACK 0007  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                      ??i1_do_I2C_DO_ACK 0070                            __CFG_BOREN$ON 0000  
                i1_i2c1_driver_getRXData 0000                    ?_do_I2C_SEND_ADR_READ 0070  
        ??_i2c1_driver_clearBusCollision 0070                                     start 0021  
                          _i2c_setBuffer 04E6                            __CFG_CSWEN$ON 0000  
                          __CFG_MCLRE$ON 0000                             ___ftmul@cntr 0035  
                        __end_of_i2c_ISR 0617                             ___ftmul@sign 0036  
       __size_of_rdBlkRegCompleteHandler 0017                 ??_do_I2C_DO_NACK_RESTART 0020  
                          i1_do_I2C_IDLE 07D5                __size_of_mssp1_disableIRQ 0000  
                           ___fttol@exp1 002C                            i1_do_I2C_RCEN 0F6A  
                           ___fttol@lval 0028                             _do_I2C_RESET 07DA  
                         i1returnReset@p 0077                   _i2c_write1ByteRegister 0478  
         __size_of_OSCILLATOR_Initialize 0009              i2c_setAddressNACKCallback@p 0026  
          __end_of_OSCILLATOR_Initialize 00FA                     ??i1_i2c1_driver_stop 0070  
               __end_of_i2c1_driver_open 0653                                    ?_main 0070  
                   __end_of_fan_setSpeed 03D6                 __end_of_i2c1_driver_stop 07A9  
                        __end_of___ftadd 0350                            __CFG_WDTE$OFF 0000  
                        __end_of___ftdiv 018A                          __end_of___ftmul 02A2  
                        __end_of___ftsub 036B                          __end_of___fttol 03C0  
             __end_of_i2c1_driver_TXData 0000                           __CFG_DEBUG$OFF 0000  
                                  i1l102 0003                                    i1l126 0002  
                                  i1l151 001F                                    i1l147 0013  
                                  i1l405 0773                                    i1l421 0FD0  
                                  _OSCEN 0891                                    _TRISA 0011  
                                  _TRISB 0012                                    _TRISC 0013  
                            i2c_open@ret 0023                       __size_ofi1_i2c_ISR 0022  
             __end_of_i2c1_driver_isNACK 0627                             main@setSpeed 0055  
                        ?_fan_Initialize 0070             ?i1_do_I2C_SEND_RESTART_WRITE 0070  
             ?_do_I2C_SEND_RESTART_WRITE 0070                            ___ftpack@sign 0024  
                  ??_do_I2C_SEND_RESTART 0020                    _i2c_read1ByteRegister 049D  
                      ?i1_mssp1_clearIRQ 0070   __end_of_i2c1_driver_setBusCollisionISR 0000  
__size_of_i2c1_driver_setBusCollisionISR 0000           _i2c1_driver_setBusCollisionISR 0000  
                                  pclath 000A                  __size_of_mssp1_clearIRQ 0003  
                   i1_i2c1_driver_TXData 0000                i2c_write1ByteRegister@reg 002C  
                 ?_do_I2C_SEND_ADR_WRITE 0070                                    status 0003  
                     ??i1_mssp1_clearIRQ 0070                                    wtemp0 007E  
                           __end_ofPL261 0671                             __end_ofPL253 065A  
                           __end_ofPL263 07E7                             __end_ofPL255 0661  
                           __end_ofPL265 0675                             __end_ofPL257 0667  
                           __end_ofPL259 066D                           ?_i2c_setBuffer 0020  
                           ?_setCallBack 0020                     i1_i2c1_driver_isNACK 0000  
        Thermo5_SetHysteresis@hysteresis 0031                            _fsmStateTable 00A0  
                        __initialization 0023           __size_ofi1_do_I2C_SEND_RESTART 0003  
                             _i2c_poller 0000            __end_ofi1_do_I2C_SEND_RESTART 07AC  
                             _i2c_status 00C0                           ?i1_do_I2C_IDLE 0070  
                           __end_of_main 00BE                           ?i1_do_I2C_RCEN 0070  
             __end_ofi1_do_I2C_SEND_STOP 0799                         __end_of_i2c_open 0547  
            ?_INTERRUPT_InterruptManager 0070          __end_ofi1_rd2RegCompleteHandler 040B  
                          setCallBack@cb 0020                           i1_do_I2C_RESET 07DE  
                          _do_I2C_DO_ACK 0F58                                   ??_main 0052  
                          ___fttol@sign1 0027                            _do_I2C_TX$870 0028  
                      ?_i2c_restartWrite 0027          __end_ofi1_wr2RegCompleteHandler 057A  
          __size_of_i2c1_driver_sendNACK 0004                       _Thermo5_Initialize 03DC  
                           i2c_close@ret 0020                       ??_i2c_restartWrite 0028  
                   _Read_Thermo_Register 01F2            __size_of_i2c1_driver_resetBus 0000  
                ?_do_I2C_DO_ADDRESS_NACK 0070                      ?_Thermo5_Initialize 0070  
        i1i2c_setDataCompleteCallback@cb 0074                                   _ANSELA 0F38  
                                 _ANSELB 0F43                                   _ANSELC 0F4E  
                       __end_of___ftpack 0246                       __CFG_RSTOSC$HFINT1 0000  
                ?i1_do_I2C_SEND_ADR_READ 0070                    ?i1_i2c1_driver_TXData 0070  
                                 _RC3PPS 0F23                                   _RC4PPS 0F24  
                                 i1l3104 0F6A                                   _ODCONA 0F3A  
                                 _ODCONB 0F45                                   _ODCONC 0F50  
                                 i1l3080 07D5                                   i1l3068 0000  
                                 i1l3088 07F3                                   i1l3096 0F7A  
                                 i1l2810 0000                                   i1l2722 05B4  
                                 i1l2802 0000                                   i1l2730 0000  
                                 i1l2812 0416                                   i1l2820 040B  
                                 i1l2804 0000                                   i1l2726 0000  
                                 i1l2728 0000                                   i1l2808 0001  
                                 i1l2836 056F                                   i1l2828 0400  
                                 i1l2844 057A                                   i1l4800 0698  
                         __CFG_WDTCCS$SC 0000                                   i1l2890 0F4B  
                                 i1l2796 0000                                   i1l4820 0758  
                                 i1l4812 0754                                   i1l2886 0F46  
                                 i1l2894 0F41                                   i1l2798 0000  
                                 i1l4806 069A                                   i1l4816 0756  
                                 i1l4920 063C                                   i1l2898 0000  
                                 i1l4834 078C                                   i1l4826 075A  
                                 i1l4852 0FD2                                   i1l4870 06D5  
                                 i1l4862 0FD6                                   i1l4838 0FBB  
              ??i1_i2c1_driver_getRXData 0070                                   i1l4864 06D0  
                                 i1l4792 0691                                   i1l4856 0FD4  
                                 i1l4866 06D3                                   i1l4882 06DA  
                                 i1l4876 06D8                                   i1l4796 0696  
          ??i1_do_I2C_SEND_RESTART_WRITE 0070                         __end_of___lwtoft 0208  
                     __size_of_i2c_close 0012                                   _OSCFRQ 0893  
                i1_rd1RegCompleteHandler 040B                   ??_do_I2C_SEND_ADR_READ 0021  
               rdBlkRegCompleteHandler@p 0027                                ??_i2c_ISR 002A  
                i1_wr1RegCompleteHandler 0416              ??i1_rdBlkRegCompleteHandler 0078  
                  ?i1_i2c1_driver_isNACK 0070                           __CFG_PWRTE$OFF 0000  
                  _i2c1_driver_getRXData 0000                      _do_I2C_RX$intlevel0 0F8A  
                                 ___ftge 00BE                    __size_ofi1_returnStop 0001  
            __end_of_do_I2C_DO_NACK_STOP 0FFC                        __end_ofi1_i2c_ISR 0649  
    __end_of_i2c_setDataCompleteCallback 0500              _i2c_setDataCompleteCallback 04F8  
                   ??_Thermo5_Initialize 0032                          _i2c_masterWrite 0500  
  __end_of_i2c1_driver_clearBusCollision 0000   __size_of_i2c1_driver_clearBusCollision 0000  
          _i2c1_driver_clearBusCollision 0000                                ??___ftadd 002E  
                         __CFG_STVREN$ON 0000                                ??___ftdiv 003A  
                              ??___ftmul 002E                                ??___ftsub 003D  
                              ??___fttol 0024          __size_of_do_I2C_DO_NACK_RESTART 0005  
         __size_of_Thermo5_SetHysteresis 0004                   __end_ofi1_do_I2C_RESET 07E3  
                        i1_i2c_setBuffer 058C            __end_of_Thermo5_SetHysteresis 0400  
                         ?_do_I2C_DO_ACK 0070              __size_ofi1_i2c_restartWrite 0001  
                  ___ftmul@f3_as_product 0032                   i2c1_driver_setI2cISR@f 0020  
            __end_of_i2c1_driver_sendACK 0000           __end_of_do_I2C_DO_ADDRESS_NACK 0691  
                  ?_Read_Thermo_Register 0070               i2c_write1ByteRegister@data 002D  
            ?_i2c_setAddressNACKCallback 0024                  ??_Write_Thermo_Register 0030  
            __end_of_i2c1_driver_restart 07A1                             ?_returnReset 0027  
          _do_I2C_DO_NACK_STOP$intlevel0 0FFA               i1rdBlkRegCompleteHandler@p 0077  
                  _i2c1_driver_setI2cISR 0000              __end_of_i2c1_driver_startRX 0000  
                 ?_i2c_read1ByteRegister 002C        __size_ofi1_do_I2C_DO_ADDRESS_NACK 001C  
         __end_ofi1_do_I2C_SEND_ADR_READ 07FC                ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                      i1_do_I2C_TX_EMPTY 06D0                        _SYSTEM_Initialize 00EA  
                __end_of__initialization 003B                          ??_i2c_setBuffer 0022  
         _do_I2C_SEND_ADR_READ$intlevel0 07EA                         _do_I2C_SEND_STOP 07A1  
                           i1_returnStop 0F46                               ___ftadd@f1 0028  
                             ___ftadd@f2 002B                    i1_do_I2C_DO_NACK_STOP 0FEF  
                     __size_of_do_I2C_RX 0034                       __size_of_do_I2C_TX 004E  
                             ___ftge@ff1 0020                               ___ftge@ff2 0023  
                     ?i1_do_I2C_TX_EMPTY 0070                       ?_SYSTEM_Initialize 0070  
             __end_of_mssp1_IRQisEnabled 0000                               ___ftdiv@f1 0037  
      _rdBlkRegCompleteHandler$intlevel0 0464                               ___ftdiv@f2 0034  
                             ___ftdiv@f3 003E                      _i2c_masterOperation 05C1  
               __size_of_do_I2C_TX_EMPTY 0023                          ??i1_do_I2C_IDLE 0070  
                        ??i1_do_I2C_RCEN 0070                  _rdBlkRegCompleteHandler 0461  
                             ___ftmul@f1 0028                               ___ftmul@f2 002B  
             __end_of_mssp1_waitForEvent 0000                               ___ftsub@f1 003A  
                             ___ftsub@f2 0037                               ___fttol@f1 0020  
                            ?_i2c_poller 0070                           __pcstackCOMMON 0070  
             ??i1_do_I2C_DO_NACK_RESTART 0070                      _do_I2C_TX$intlevel0 06FB  
                    ??i1_do_I2C_TX_EMPTY 0078                             __pidataBANK1 07B1  
                    ??_SYSTEM_Initialize 0032                    __size_of_fan_setSpeed 0016  
                       _mssp1_disableIRQ 0000                    i1_i2c1_driver_sendACK 0000  
                  i1i2c1_driver_TXData@d 0070                          ?i1_do_I2C_RESET 0070  
                  i1_i2c1_driver_restart 0000                        __end_of_i2c_close 04E6  
                           ?i1_do_I2C_RX 0070                             ?i1_do_I2C_TX 0070  
                             ___lwtoft@c 0028                    i1_i2c1_driver_startRX 0000  
                       ??i1_mssp1_setIRQ 0070                       __size_of_fan_write 0006  
                    i1i2c_restartWrite@p 0077                i1_rdBlkRegCompleteHandler 057A  
                   ?_i2c_masterOperation 0070           i1i2c_setDataCompleteCallback@p 0076  
           ??i1_do_I2C_SEND_RESTART_READ 0070                   __size_ofi1_setCallBack 0020  
                        i1setCallBack@cb 0070                 i1rd1RegCompleteHandler@p 0077  
                        i1_do_I2C_DO_ACK 0F5F                          i1_do_I2C_TX$870 0078  
                         setCallBack@idx 0023                __end_ofi1_do_I2C_TX_EMPTY 06F3  
                 _do_I2C_DO_NACK_RESTART 0F82                   ??i1_i2c1_driver_TXData 0070  
              __end_of_SYSTEM_Initialize 00F1                ??i1_rd1RegCompleteHandler 0078  
                         _mssp1_clearIRQ 0617                               __pbssBANK0 005B  
                             __pbssBANK1 00C0                ??i1_wr1RegCompleteHandler 0078  
         __size_of_rd2RegCompleteHandler 0010                                ?_i2c_open 0070  
               Read_Thermo_Register@addr 0032            __end_of_rd2RegCompleteHandler 0431  
               Read_Thermo_Register@data 0033                 ??i1_i2c1_driver_sendNACK 0070  
         __size_of_wr2RegCompleteHandler 0010                   ??i1_i2c1_driver_isNACK 0070  
                           _fan_setSpeed 03C0         __size_ofi1_rd2RegCompleteHandler 000B  
          __end_of_wr2RegCompleteHandler 0461                  __end_of_i2c_masterWrite 0502  
               i1wr1RegCompleteHandler@p 0077                    _rd1RegCompleteHandler 0431  
                 ?_i2c1_driver_getRXData 0070                 ??i1_i2c1_driver_resetBus 0070  
                __end_ofi1_i2c_setBuffer 0598         __size_ofi1_wr2RegCompleteHandler 000B  
                  _do_I2C_IDLE$intlevel0 07D4                    _wr1RegCompleteHandler 0441  
                         _SSP1DATPPSbits 0EC6             __size_of_i2c_busCollisionISR 0003  
        _wr1RegCompleteHandler$intlevel0 0444          _rd1RegCompleteHandler$intlevel0 0434  
                             __pmaintext 003E                            ??_do_I2C_IDLE 0020  
                ?_i2c_write1ByteRegister 002C                     __size_of_setCallBack 0020  
                          ??_do_I2C_RCEN 0020                                  ?___ftge 0020  
                        __CFG_PPS1WAY$ON 0000                          ??_do_I2C_DO_ACK 0020  
                             __pintentry 0004                      i2c_setBuffer@buffer 0022  
                              ?___ftpack 0020                           _SSP1CLKPPSbits 0EC5  
                 ??_Read_Thermo_Register 0032           ?_i2c1_driver_clearBusCollision 0070  
                              ?___lwtoft 0028                    ??_i2c_masterOperation 002A  
               ?_Thermo5_ReadTemperature 0043                        ?_i2c1_driver_open 0070  
                      __end_of_do_I2C_RX 0FBB                        __end_of_do_I2C_TX 0746  
                      ?_i2c1_driver_stop 0070                         ??_fan_Initialize 0031  
               ?i1_do_I2C_SEND_ADR_WRITE 0070                   ?_i2c1_driver_setI2cISR 0020  
                     ??_i2c1_driver_open 0020                       ??_i2c1_driver_stop 0020  
                                _OSCCON1 088D                                  _OSCCON3 088F  
                          ?_mssp1_setIRQ 0070                                  _OSCTUNE 0892  
                                _SSP1ADD 018D                                  _PPSLOCK 0E8F  
                                _SSP1BUF 018C                   __end_of_mssp1_clearIRQ 061A  
                    __size_of_i2c_poller 0000                  ??_do_I2C_SEND_ADR_WRITE 0021  
          i2c_write1ByteRegister@address 002E      _do_I2C_SEND_RESTART_WRITE$intlevel0 06F6  
            ??_do_I2C_SEND_RESTART_WRITE 0020                   ?i1_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_TXData 0000                               ??_i2c_open 0022  
                     _i2c1_driver_i2cISR 005B                                  _i2c_ISR 05FB  
                      __end_of_fan_write 03DC                ??_rdBlkRegCompleteHandler 0028  
         __end_of_i2c_write1ByteRegister 049D                    _returnReset$intlevel0 0F4A  
                  _do_I2C_RCEN$intlevel0 0F66                            i1_setCallBack 05A1  
                     _i2c1_driver_isNACK 061A                      ?_i2c1_driver_TXData 0070  
       _do_I2C_DO_ADDRESS_NACK$intlevel0 0678                   ?i1_i2c1_driver_sendACK 0070  
                   __CFG_SCANE$available 0000      __size_of_i2c_setAddressNACKCallback 0008  
                 __size_ofi1_returnReset 0001                          __size_of___ftge 002C  
                                ___ftadd 02A2                                  ___ftdiv 012E  
              __size_ofi1_mssp1_clearIRQ 0000                                  ___ftmul 0246  
                                ___ftsub 0350                                  ___fttol 036B  
                 ?i1_i2c1_driver_restart 0070                        ??_do_I2C_TX_EMPTY 0028  
                    ?_i2c1_driver_isNACK 0070                   ?i1_i2c1_driver_startRX 0070  
                             ??___ftpack 0025                  __end_ofi1_do_I2C_DO_ACK 0F63  
                                __ptext1 03C0                                  __ptext2 036B  
                                __ptext3 0350                                  __ptext4 02A2  
                                __ptext5 0246                                  __ptext6 00BE  
                                __ptext7 018A                                  __ptext8 01F8  
                                __ptext9 012E              __size_ofi1_i2c1_driver_stop 0000  
                    __end_of_do_I2C_IDLE 07D5                      __end_of_do_I2C_RCEN 0F6A  
                             ??___lwtoft 002B                    _OSCILLATOR_Initialize 00F1  
            __end_of_do_I2C_SEND_RESTART 07B1                           ??_mssp1_setIRQ 0020  
                   ??_i2c1_driver_TXData 0020                 ??_PIN_MANAGER_Initialize 0020  
                 i2c_masterOperation@ret 002B                       i1_do_I2C_SEND_STOP 0796  
                        ?_mssp1_clearIRQ 0070               _do_I2C_SEND_STOP$intlevel0 07A4  
             __size_ofi1_do_I2C_TX_EMPTY 0023                 _do_I2C_SEND_RESTART_READ 0799  
             __size_of_SYSTEM_Initialize 0007                  i2c_read1ByteRegister@d2 0031  
                                clrloop0 0F4D                     __size_of_returnReset 0004  
                   end_of_initialization 003B                     ??_i2c1_driver_isNACK 0020  
              __size_of_i2c_restartWrite 0004                                  init_ram 0F52  
           __end_of_i2c1_driver_sendNACK 1000                      ?i1_do_I2C_SEND_STOP 0070  
                 ?_rd1RegCompleteHandler 0027                                  initloop 0F53  
        __size_ofi1_i2c1_driver_sendNACK 0000                         ?_i2c_masterWrite 0070  
                 ?_wr1RegCompleteHandler 0027             __end_of_i2c1_driver_resetBus 0000  
                         ?i1_setCallBack 0070                         ?i1_i2c_setBuffer 0070  
        __size_ofi1_i2c1_driver_resetBus 0000                _do_I2C_SEND_RESTART_WRITE 06F3  
        __end_of_Thermo5_ReadTemperature 01F2                    i1_do_I2C_SEND_RESTART 07A9  
       __end_ofi1_do_I2C_DO_ADDRESS_NACK 06AD          __end_ofi1_do_I2C_SEND_ADR_WRITE 0F82  
                  __CFG_WDTCPS$WDTCPS_31 0000                                i1_i2c_ISR 0627  
                   ??i1_do_I2C_SEND_STOP 0070                               _returnStop 0F42  
        __end_of_rdBlkRegCompleteHandler 0478                 __end_of_do_I2C_SEND_STOP 07A6  
     __end_ofi1_do_I2C_SEND_RESTART_READ 0793               i1_do_I2C_SEND_RESTART_READ 0790  
                ??_i2c_read1ByteRegister 002D                     __size_ofi1_do_I2C_RX 0034  
                   __size_ofi1_do_I2C_TX 004A     __size_of_i2c_setDataCompleteCallback 0008  
         __size_of_Write_Thermo_Register 0006                            i1_returnReset 0F4B  
          __end_of_Write_Thermo_Register 03EE                              returnStop@p 0027  
                       __CFG_FEXTOSC$OFF 0000                 __end_of_mssp1_disableIRQ 0000  
     __size_ofi1_rdBlkRegCompleteHandler 0012             i2c_setDataCompleteCallback@p 0026  
                i1_rd2RegCompleteHandler 0400                               main@factor 0052  
                            ___ftdiv@exp 0041                  i1_wr2RegCompleteHandler 056F  
          __size_of_do_I2C_SEND_ADR_READ 000C                         ??i1_do_I2C_RESET 0070  
                            ___ftmul@exp 0031                             ??_i2c_poller 002A  
                            _do_I2C_IDLE 07D1                              _do_I2C_RCEN 0F63  
            __size_of_Thermo5_Initialize 000C               __end_ofi1_i2c_restartWrite 0F42  
                         __end_of___ftge 00EA             Thermo5_ReadTemperature@dataH 004B  
           Thermo5_ReadTemperature@dataL 004D                               ?i1_i2c_ISR 0070  
                     _mssp1_IRQisEnabled 0000                   i1_i2c1_driver_sendNACK 0000  
                       ?i1_do_I2C_DO_ACK 0070                   ?_OSCILLATOR_Initialize 0070  
                  _Thermo5_SetHysteresis 03FC             __size_of_do_I2C_DO_NACK_STOP 0005  
                     _mssp1_waitForEvent 0000                   i1_i2c1_driver_resetBus 0000  
                ?_do_I2C_DO_NACK_RESTART 0070                      start_initialization 0023  
                              _i2c_close 04D4                      _i2c_busCollisionISR 07FC  
        __size_of_PIN_MANAGER_Initialize 0034                      ?_mssp1_IRQisEnabled 0070  
                         ?i1_returnReset 0077                 ?i1_i2c1_driver_getRXData 0070  
    __end_ofi1_do_I2C_SEND_RESTART_WRITE 0796              i1_do_I2C_SEND_RESTART_WRITE 0793  
                    ?_mssp1_waitForEvent 0070                             setCallBack@p 0022  
                     __end_of_i2c_poller 0000             __size_of_i2c1_driver_sendACK 0000  
                        i2c_open@address 0022                  i2c_setBuffer@bufferSize 0020  
                ??_i2c1_driver_getRXData 0020                   rd1RegCompleteHandler@p 0027  
           __size_of_i2c1_driver_restart 0003                          ??i1_setCallBack 0073  
           __size_of_i2c1_driver_startRX 0000                    __end_of_i2c_setBuffer 04F8  
                      __size_of_i2c_open 0045    __end_ofi1_i2c_setDataCompleteCallback 05A1  
 __size_ofi1_i2c_setDataCompleteCallback 0009            i1_i2c_setDataCompleteCallback 0598  
                   ?_i2c_busCollisionISR 0070                         __CFG_LPBOREN$OFF 0000  
                   __end_of_mssp1_setIRQ 0000                     ??_mssp1_IRQisEnabled 0020  
                       i1setCallBack@idx 0073                                 ??___ftge 0026  
                  __end_ofi1_do_I2C_IDLE 07DA             i2c_read1ByteRegister@address 002D  
                  __end_ofi1_do_I2C_RCEN 0F6F                i1i2c_setBuffer@bufferSize 0070  
                 ?i1_do_I2C_SEND_RESTART 0070                     ??_mssp1_waitForEvent 0020  
                       i1_mssp1_clearIRQ 0000                   wr1RegCompleteHandler@p 0027  
                          ?_do_I2C_RESET 0070                              __pdataBANK1 00A0  
              _do_I2C_TX_EMPTY$intlevel0 06B0                              ?_returnStop 0027  
                ??_i2c1_driver_setI2cISR 0022           __end_of_do_I2C_DO_NACK_RESTART 0F87  
                   _i2c1_driver_sendNACK 0FFC                        __size_of___ftpack 003E  
               i1_do_I2C_DO_ADDRESS_NACK 0691                               ?_i2c_close 0070  
                              ___latbits 0002                        __size_of___lwtoft 0010  
                   _i2c1_driver_resetBus 0000                            __pcstackBANK0 0020  
      __size_ofi1_do_I2C_DO_NACK_RESTART 0004                 i1rd2RegCompleteHandler@p 0077  
                              _do_I2C_RX 0F87                ?i1_do_I2C_DO_NACK_RESTART 0070  
                              _do_I2C_TX 06F8                  ??i1_do_I2C_DO_NACK_STOP 0070  
              ??i1_rd2RegCompleteHandler 0078                            fan_write@data 002F  
         __size_of_do_I2C_SEND_ADR_WRITE 000B                ??i1_wr2RegCompleteHandler 0078  
          __size_ofi1_i2c1_driver_TXData 0000            __end_of_do_I2C_SEND_ADR_WRITE 0F7A  
       __size_of_Thermo5_ReadTemperature 0068                           i1setCallBack@p 0072  
                       _i2c_restartWrite 0F3D               _i2c_restartWrite$intlevel0 0F40  
              __size_of_i2c1_driver_open 000A                __size_of_i2c1_driver_stop 0003  
                               ?_i2c_ISR 0070          _do_I2C_SEND_ADR_WRITE$intlevel0 0F72  
       __size_ofi1_do_I2C_SEND_ADR_WRITE 0008                          _do_I2C_TX_EMPTY 06AD  
                          ??_setCallBack 0023                 i1wr2RegCompleteHandler@p 0077  
                ??i1_i2c1_driver_sendACK 0070                    _rd2RegCompleteHandler 0421  
                  ??_i2c_busCollisionISR 0070            __size_ofi1_i2c1_driver_isNACK 0000  
                 _PIN_MANAGER_Initialize 00FA                    _wr2RegCompleteHandler 0451  
                ??i1_i2c1_driver_restart 0070                                _fan_write 03D6  
                ??i1_i2c1_driver_startRX 0070                           ??_do_I2C_RESET 0020  
                              __ptext100 0F41                                __ptext101 0F4B  
                              __ptext110 058C                                __ptext102 0F46  
                              __ptext111 0000                                __ptext103 057A  
                              __ptext112 0000                                __ptext104 0400  
                              __ptext113 0000                                __ptext105 040B  
                              __ptext114 07FC                                __ptext106 0416  
                              __ptext115 0000                                __ptext107 056F  
                              __ptext108 0598                                __ptext109 05A1  
                               ?___ftadd 0028              __end_of_i2c_masterOperation 05FB  
                               ?___ftdiv 0034                                 ?___ftmul 0028  
                               ?___ftsub 0037                                 ?___fttol 0020  
               ??_do_I2C_DO_ADDRESS_NACK 0028              _i2c1_driver_busCollisionISR 005D  
                 ?_Thermo5_SetHysteresis 0070                    __end_of_do_I2C_DO_ACK 0F5F  
                            ??i1_i2c_ISR 007A             ??_INTERRUPT_InterruptManager 007A  
             ??_do_I2C_SEND_RESTART_READ 0020                    ?_i2c1_driver_sendNACK 0070  
        __end_ofi1_i2c1_driver_getRXData 0000                 ??i1_do_I2C_SEND_ADR_READ 0071  
               Write_Thermo_Register@val 002F                         ??_mssp1_clearIRQ 0020  
          Thermo5_ReadTemperature@sensor 004A                          ??i1_returnReset 0078  
                  ?_i2c1_driver_resetBus 0070                 ?i1_rd1RegCompleteHandler 0077  
     __size_of_do_I2C_SEND_RESTART_WRITE 0005            __size_of_Read_Thermo_Register 0006  
               ?i1_wr1RegCompleteHandler 0077                               ?_do_I2C_RX 0070  
                             ?_do_I2C_TX 0070                        _i2c1_driver_start 0000  
                ??_rd1RegCompleteHandler 0028                  __size_ofi1_mssp1_setIRQ 0000  
                      _i2c_ISR$intlevel0 05FE                       ?_i2c1_driver_start 0070  
                ??_wr1RegCompleteHandler 0028                   i2c_read1ByteRegister@e 002E  
                 i2c_read1ByteRegister@x 002F                      __size_of_returnStop 0004  
                              clear_ram0 0F4C                                 _PIE3bits 0719  
                    ??_i2c1_driver_start 0020      __size_of_INTERRUPT_InterruptManager 001D  
                               _PIR3bits 070F                               ?_fan_write 002F  
                               _SSP1CON1 0190                                 _SSP1CON2 0191  
           ?_i2c_setDataCompleteCallback 0024           ?i1_i2c_setDataCompleteCallback 0074  
                               _SSP1STAT 018F                      __end_of_setCallBack 056F  
             __end_ofi1_i2c1_driver_stop 0000             i2c_setAddressNACKCallback@cb 0024  
                      ?_do_I2C_SEND_STOP 0070              ?i1_do_I2C_SEND_RESTART_READ 0070  
                            ??_i2c_close 0020                __end_of_i2c1_driver_start 0000  
                          ??_returnReset 0028                       ??_do_I2C_SEND_STOP 0020  
            __size_of_i2c1_driver_TXData 0000           __size_of_i2c_read1ByteRegister 0037  
           ??_i2c_setAddressNACKCallback 0027            __end_of_i2c_read1ByteRegister 04D4  
      __end_of_do_I2C_SEND_RESTART_WRITE 06F8                  __end_of_do_I2C_TX_EMPTY 06D0  
               ?_rdBlkRegCompleteHandler 0027                        ?_mssp1_disableIRQ 0070  
           __size_of_do_I2C_SEND_RESTART 0005              __size_of_i2c1_driver_isNACK 000D  
                _do_I2C_DO_ACK$intlevel0 0F5B                                 _i2c_open 0502  
                __size_of_fan_Initialize 000E                            ?i1_returnStop 0077  
                  __size_of_mssp1_setIRQ 0000                       ??_mssp1_disableIRQ 0020  
                 ?_rd2RegCompleteHandler 0027                      _do_I2C_DO_NACK_STOP 0FF7  
                       __size_of_i2c_ISR 001C                   ?_wr2RegCompleteHandler 0027  
        _wr2RegCompleteHandler$intlevel0 0454          _rd2RegCompleteHandler$intlevel0 0424  
                           ?_do_I2C_IDLE 0070                             ?_do_I2C_RCEN 0070  
                ?i1_i2c1_driver_sendNACK 0070                  ??_OSCILLATOR_Initialize 0020  
                    _i2c1_driver_sendACK 0000                 __size_of_i2c_masterWrite 0002  
                       __size_of___ftadd 00AE                         __size_of___ftdiv 005C  
        __size_of_do_I2C_DO_ADDRESS_NACK 001C                         __size_of___ftmul 005C  
                    i2c1_driver_TXData@d 0020                         __size_of___ftsub 001B  
                  i1i2c_setBuffer@buffer 0072                         __size_of___fttol 0055  
                 ??_i2c1_driver_sendNACK 0020            ??_i2c_setDataCompleteCallback 0027  
        __end_ofi1_rd1RegCompleteHandler 0416                  ?i1_i2c1_driver_resetBus 0070  
                               ___ftpack 0208                 __size_ofi1_i2c_setBuffer 000C  
       ??_i2c1_driver_setBusCollisionISR 0022          ?_i2c1_driver_setBusCollisionISR 0020  
                          ??i1_do_I2C_RX 0078                            ??i1_do_I2C_TX 0078  
     _do_I2C_SEND_RESTART_READ$intlevel0 079C                      _i2c1_driver_restart 079E  
            __size_ofi1_do_I2C_SEND_STOP 0003          __end_ofi1_wr1RegCompleteHandler 0421  
                   ?_do_I2C_DO_NACK_STOP 0070                      _i2c1_driver_startRX 0000  
                               ___lwtoft 01F8             __end_of_do_I2C_SEND_ADR_READ 07F3  
                 ??_i2c1_driver_resetBus 0020                             fan_write@reg 0030  
        __size_ofi1_do_I2C_SEND_ADR_READ 0009                       i1_i2c_restartWrite 0F41  
                           _mssp1_setIRQ 0000                              ??_do_I2C_RX 0028  
                            ??_do_I2C_TX 0028                                 __ptext10 0208  
                               __ptext11 01F2                                 __ptext20 0547  
                               __ptext12 049D                                 __ptext21 0502  
                               __ptext13 00EA                                 __ptext30 05FB  
                               __ptext22 0000                                 __ptext14 03EE  
                               __ptext31 0F87                                 __ptext23 0000  
                               __ptext15 03D6                                 __ptext40 07A1  
                               __ptext32 06F8                                 __ptext24 0649  
                               __ptext16 03DC                                 __ptext41 07AC  
                               __ptext33 0675                                 __ptext25 0500  
                               __ptext17 03FC                                 __ptext50 0000  
                               __ptext42 06F3                                 __ptext34 0F82  
                               __ptext26 05C1                                 __ptext18 03E8  
                               __ptext51 0FFC                                 __ptext43 0799  
                               __ptext35 0FF7                                 __ptext27 0000  
                               __ptext19 0478                                 __ptext60 0F3D  
                               __ptext52 0000                                 __ptext44 07D1  
                               __ptext36 0F58                                 __ptext28 0000  
                               __ptext61 0451                                 __ptext53 0000  
                               __ptext45 07DA                                 __ptext37 0F63  
                               __ptext29 0000                                 __ptext70 0000  
                               __ptext62 04F8                                 __ptext54 0F47  
                               __ptext46 06AD                                 __ptext38 0F6F  
                               __ptext71 0617                                 __ptext63 054F  
                               __ptext55 0F42                                 __ptext47 0000  
                               __ptext39 07E7                                 __ptext80 0FF3  
                               __ptext72 00FA                                 __ptext64 04E6  
                               __ptext56 0461                                 __ptext48 061A  
                               __ptext81 0FEF                                 __ptext73 00F1  
                               __ptext65 07A6                                 __ptext57 0421  
                               __ptext49 0000                                 __ptext90 07D5  
                               __ptext82 0F5F                                 __ptext66 079E  
                               __ptext58 0431                                 __ptext91 07DE  
                               __ptext83 0F6A                                 __ptext75 0627  
                               __ptext67 0000                                 __ptext59 0441  
                               __ptext92 06D0                                 __ptext84 0F7A  
                               __ptext76 0000                                 __ptext68 0000  
                               __ptext93 0000                                 __ptext85 07F3  
                               __ptext77 0FBB                                 __ptext69 04D4  
                               __ptext94 0000                                 __ptext86 0796  
                               __ptext78 0746                                 __ptext95 0000  
                               __ptext87 07A9                                 __ptext79 0691  
                               __ptext96 0000                                 __ptext88 0793  
                               __ptext97 0000                                 __ptext89 0790  
                               __ptext98 0000                                 __ptext99 0000  
                           _SSP1CON1bits 0190                             _SSP1CON2bits 0191  
               __end_ofi1_mssp1_clearIRQ 0000                     ?_i2c1_driver_sendACK 0070  
                   __end_of_do_I2C_RESET 07DE                  _Thermo5_ReadTemperature 018A  
               ??_i2c_write1ByteRegister 002E                           ??i1_returnStop 0078  
                  _Write_Thermo_Register 03E8                  i1_do_I2C_SEND_ADR_WRITE 0F7A  
                    ?i1_i2c_restartWrite 0077                     ?_i2c1_driver_restart 0070  
                    __end_of_returnReset 0F4B                         _i2c1_driver_open 0649  
                       _i2c1_driver_stop 07A6                            __size_of_main 0080  
                   ?_i2c1_driver_startRX 0070                            ?_fan_setSpeed 0031  
         __size_of_i2c1_driver_getRXData 0000            __end_of_i2c1_driver_getRXData 0000  
                   __CFG_WDTCWS$WDTCWS_7 0000                              _setCallBack 054F  
                ??i1_do_I2C_SEND_RESTART 0070         __size_ofi1_i2c1_driver_getRXData 0000  
             __end_of_Thermo5_Initialize 03E8                  i2c_masterOperation@read 002A  
   __size_ofi1_do_I2C_SEND_RESTART_WRITE 0003                              ??_fan_write 0030  
         __end_ofi1_i2c1_driver_sendNACK 0000                                 int$flags 007E  
             ??i1_do_I2C_DO_ADDRESS_NACK 0078         __end_ofi1_do_I2C_DO_NACK_RESTART 0FF7  
         __end_ofi1_i2c1_driver_resetBus 0000       __end_of_INTERRUPT_InterruptManager 0021  
             _INTERRUPT_InterruptManager 0004                     ??i1_i2c_restartWrite 0078  
       __end_of_do_I2C_SEND_RESTART_READ 079E                 i2c_read1ByteRegister@reg 002C  
                           ??_returnStop 0028                 __end_of_i2c_restartWrite 0F41  
                  ??_do_I2C_DO_NACK_STOP 0020              PIN_MANAGER_Initialize@state 0020  
                        main@temperature 0058                mssp1_waitForEvent@timeout 0020  
         __size_of_i2c1_driver_setI2cISR 0000            __end_of_i2c1_driver_setI2cISR 0000  
                             _INTCONbits 000B               __size_of_i2c1_driver_start 0000  
                    __end_ofi1_do_I2C_RX 0FEF                      __end_ofi1_do_I2C_TX 0790  
               __size_ofi1_do_I2C_DO_ACK 0004                    ??_i2c1_driver_sendACK 0020  
                       ?_do_I2C_TX_EMPTY 0070                           i1_mssp1_setIRQ 0000  
                 _do_I2C_DO_ADDRESS_NACK 0675           __size_ofi1_do_I2C_DO_NACK_STOP 0004  
                               intlevel1 0000            __end_ofi1_do_I2C_DO_NACK_STOP 0FF3  
                 _do_I2C_RESET$intlevel0 07DD                    ??_i2c1_driver_restart 0020  
                         ??_fan_setSpeed 0033                   rd2RegCompleteHandler@p 0027  
                  ??_i2c1_driver_startRX 0020                  ?_PIN_MANAGER_Initialize 0070  
                      i2c_restartWrite@p 0027                   i1_do_I2C_SEND_ADR_READ 07F3  
                      __CFG_CLKOUTEN$OFF 0000               ?i1_rdBlkRegCompleteHandler 0077  
                            _PPSLOCKbits 0E8F                       __end_of_returnStop 0F46  
                  __end_ofi1_setCallBack 05C1      __size_ofi1_do_I2C_SEND_RESTART_READ 0003  
         __size_ofi1_i2c1_driver_sendACK 0000            __end_ofi1_i2c1_driver_sendACK 0000  
            __size_of_mssp1_IRQisEnabled 0000                  ??_Thermo5_SetHysteresis 0031  
         __size_ofi1_i2c1_driver_restart 0000                        fan_setSpeed@speed 0031  
          __end_ofi1_i2c1_driver_restart 0000                   wr2RegCompleteHandler@p 0027  
            __size_of_mssp1_waitForEvent 0000           __size_ofi1_i2c1_driver_startRX 0000  
           __end_ofi1_i2c1_driver_TXData 0000            __end_ofi1_i2c1_driver_startRX 0000  
                __size_ofi1_do_I2C_RESET 0005             __end_ofi1_i2c1_driver_isNACK 0000  
                      ??_i2c_masterWrite 002C       __end_of_i2c_setAddressNACKCallback 054F  
             _i2c_setAddressNACKCallback 0547                   __size_of_i2c_setBuffer 0012  
                 __end_ofi1_mssp1_setIRQ 0000                Write_Thermo_Register@addr 0030  
                      ??i1_i2c_setBuffer 0072                              _returnReset 0F47  
              ??_Thermo5_ReadTemperature 0046         _do_I2C_DO_NACK_RESTART$intlevel0 0F85  
              ??i1_do_I2C_SEND_ADR_WRITE 0071                   ?_Write_Thermo_Register 002F  
                 __size_ofi1_do_I2C_IDLE 0005                   __size_ofi1_do_I2C_RCEN 0005  
         __end_of_PIN_MANAGER_Initialize 012E              __end_of_i2c_busCollisionISR 07FF  
            Thermo5_ReadTemperature@temp 004F                           _fan_Initialize 03EE  
         __size_of_rd1RegCompleteHandler 0010          __size_of_i2c_write1ByteRegister 0025  
          __end_of_rd1RegCompleteHandler 0441           __size_of_wr1RegCompleteHandler 0010  
       __size_ofi1_rd1RegCompleteHandler 000B            __end_of_wr1RegCompleteHandler 0451  
                  _do_I2C_SEND_ADR_WRITE 0F6F             __end_of_Read_Thermo_Register 01F8  
                   _do_I2C_SEND_ADR_READ 07E7        __end_ofi1_rdBlkRegCompleteHandler 058C  
       __size_ofi1_wr1RegCompleteHandler 000B  
